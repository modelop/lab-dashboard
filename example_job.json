{
  "id": "3f6799e4-fbc9-4286-b7a4-12eb9af65690",
  "group": "PNC",
  "version": 64,
  "jobType": "MODEL_BATCH_TEST_JOB",
  "createdDate": "2023-12-20T07:35:53.943Z",
  "lastModifiedDate": "2023-12-20T07:46:08.125Z",
  "createdBy": "SYSTEM",
  "lastModifiedBy": "SYSTEM",
  "jobStatus": "COMPLETE",
  "jobResult": "SUCCESS",
  "jobMessages": [
    "2023/12/20 7:35:56 batch job received",
    "2023/12/20 7:45:34 [info] Batch f1c95d9d-9f68-4636-a84c-af7af959fd7e has finished",
    "2023/12/20 7:45:34 loading batch job",
    "2023/12/20 7:45:34 [info] Writing external json file <<\"baseline_data.json\">> to <<\"__moc_runtime/skipped-json-test-asset.0\">> and skipping internal processing",
    "2023/12/20 7:45:34 [info] Writing external json file <<\"comparator_data.json\">> to <<\"__moc_runtime/skipped-json-test-asset.2\">> and skipping internal processing",
    "2023/12/20 7:45:34 [info] Data processing function for slot 0: metrics",
    "2023/12/20 7:45:34 [info] Data processing function for slot 1: metrics",
    "2023/12/20 7:45:34 [info] Data processing function for slot 2: metrics",
    "2023/12/20 7:45:34 [info] input data list length:  2",
    "2023/12/20 7:45:34 [info] input slots list length: 2",
    "2023/12/20 7:45:34 [info] output data list length:  1",
    "2023/12/20 7:45:34 [info] output slots list length: 1",
    "2023/12/20 7:45:34 [info] attach_stream <<\"3f6799e4-fbc9-4286-b7a4-12eb9af65690\">> 1 <<\"test_result.json\">>",
    "2023/12/20 7:45:34 [info] attach_stream <<\"3f6799e4-fbc9-4286-b7a4-12eb9af65690\">> 0 <<\"null-asset.0\">>",
    "2023/12/20 7:45:34 [info] sensor activated: manifold.1.records.count [<0.226.0>]",
    "2023/12/20 7:45:34 [info] sensor activated: manifold.1.records.size [<0.223.0>]",
    "2023/12/20 7:45:34 [info] sensor activated: manifold.1.records.rejected.by.encoding [<0.227.0>]",
    "2023/12/20 7:45:34 [info] sensor activated: manifold.1.records.rejected.by.schema [<0.225.0>]",
    "2023/12/20 7:45:34 [info] materialize local content",
    "2023/12/20 7:45:34 [info] Attempting to write to file: <<\"/tmp/playground/batch-3f6799e4-fbc9-4286-b7a4-12eb9af65690/null-asset.0\">>",
    "2023/12/20 7:45:34 [info] attach_stream <<\"3f6799e4-fbc9-4286-b7a4-12eb9af65690\">> 2 <<\"null-asset.2\">>",
    "2023/12/20 7:45:34 [info] sensor activated: manifold.0.records.count [<0.220.0>]",
    "2023/12/20 7:45:34 [info] sensor activated: manifold.0.records.size [<0.222.0>]",
    "2023/12/20 7:45:34 [info] sensor activated: manifold.0.records.rejected.by.encoding [<0.229.0>]",
    "2023/12/20 7:45:34 [info] sensor activated: manifold.0.records.rejected.by.schema [<0.228.0>]",
    "2023/12/20 7:45:34 [info] materialize local content",
    "2023/12/20 7:45:34 [info] Attempting to write to file: <<\"/tmp/playground/batch-3f6799e4-fbc9-4286-b7a4-12eb9af65690/null-asset.2\">>",
    "2023/12/20 7:45:34 [info] Batch 3f6799e4-fbc9-4286-b7a4-12eb9af65690 has been fully loaded",
    "2023/12/20 7:45:34 [info] Batch 3f6799e4-fbc9-4286-b7a4-12eb9af65690 loaded..",
    "2023/12/20 7:45:34 [info] Directory, /tmp/playground/115892158/outputDir, successfully created",
    "2023/12/20 7:45:34 [info] fetching file \"dashboard_model.dmn.bak\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/222bd89b-0ceb-4524-b70b-3cd15324ebdb.bak\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:34 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/222bd89b-0ceb-4524-b70b-3cd15324ebdb.bak\">>",
    "2023/12/20 7:45:34 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:34 [info] fetch of file \"dashboard_model.dmn.bak\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/222bd89b-0ceb-4524-b70b-3cd15324ebdb.bak\" complete: ok",
    "2023/12/20 7:45:34 [info] fetching file \"dashboard_design.ipynb\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/03745179-5622-4762-babd-89c6d76c9577.ipynb\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:34 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/03745179-5622-4762-babd-89c6d76c9577.ipynb\">>",
    "2023/12/20 7:45:34 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"dashboard_design.ipynb\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/03745179-5622-4762-babd-89c6d76c9577.ipynb\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/df_baseline.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/1a55a960-7470-48cf-8686-158d2d7a401e.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/1a55a960-7470-48cf-8686-158d2d7a401e.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/df_baseline.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/1a55a960-7470-48cf-8686-158d2d7a401e.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/jsonJobGermanCredit_without_input_schema_error.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/f9bfa0df-6cc9-4efa-b850-74fa4eac7a89.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/f9bfa0df-6cc9-4efa-b850-74fa4eac7a89.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/jsonJobGermanCredit_without_input_schema_error.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/f9bfa0df-6cc9-4efa-b850-74fa4eac7a89.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a18a4934-a318-43ed-b83b-82526a9cf0c4.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/a18a4934-a318-43ed-b83b-82526a9cf0c4.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a18a4934-a318-43ed-b83b-82526a9cf0c4.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/b4a57998-a3b2-4162-ba08-e778243aa531.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/b4a57998-a3b2-4162-ba08-e778243aa531.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/b4a57998-a3b2-4162-ba08-e778243aa531.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/jsonJobWithInputSchema_germanCredit_updated.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a832daba-c7a1-4686-b16e-b2f1b2312f41.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/a832daba-c7a1-4686-b16e-b2f1b2312f41.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/jsonJobWithInputSchema_germanCredit_updated.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a832daba-c7a1-4686-b16e-b2f1b2312f41.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/jsonJobGermanCredit_withInputSchema_error.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/fc895c67-3c3d-42e2-88ad-87506bdcce13.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/fc895c67-3c3d-42e2-88ad-87506bdcce13.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/jsonJobGermanCredit_withInputSchema_error.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/fc895c67-3c3d-42e2-88ad-87506bdcce13.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/df_sample_scored.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/b5e9e5f5-56df-4216-b59b-fb5e2eda1098.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/b5e9e5f5-56df-4216-b59b-fb5e2eda1098.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/df_sample_scored.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/b5e9e5f5-56df-4216-b59b-fb5e2eda1098.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields_no_def.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/38e61a75-df2a-408d-8d56-a87a5b90b234.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/38e61a75-df2a-408d-8d56-a87a5b90b234.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields_no_def.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/38e61a75-df2a-408d-8d56-a87a5b90b234.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/df_sample.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a0df6c7b-5b0f-47f1-b3b8-7cb6c7605811.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/a0df6c7b-5b0f-47f1-b3b8-7cb6c7605811.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/df_sample.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a0df6c7b-5b0f-47f1-b3b8-7cb6c7605811.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"sampleData/df_baseline_scored.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/f47358da-11a0-4128-9bd2-15572c213e1d.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/26481449-0282-4c3d-b981-66467887eeb5/f47358da-11a0-4128-9bd2-15572c213e1d.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:35 [info] fetch of file \"sampleData/df_baseline_scored.json\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/f47358da-11a0-4128-9bd2-15572c213e1d.json\" complete: ok",
    "2023/12/20 7:45:35 [info] fetching file \"__moc_runtime/skipped-json-test-asset.2\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:35 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json\">>",
    "2023/12/20 7:45:35 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:36 [info] fetch of file \"__moc_runtime/skipped-json-test-asset.2\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json\" complete: ok",
    "2023/12/20 7:45:36 [info] fetching file \"__moc_runtime/skipped-json-test-asset.0\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json\" and placing it here: \"/tmp/playground/115892158\"",
    "2023/12/20 7:45:36 [info] get_credentials for: <<\"modelop-demo.s3.us-east-2.amazonaws.com:443/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json\">>",
    "2023/12/20 7:45:36 [info] credentials found with path: <<>>",
    "2023/12/20 7:45:36 [info] fetch of file \"__moc_runtime/skipped-json-test-asset.0\" from \"https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json\" complete: ok",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/README.md\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/requirements.txt\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/metadata.json\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/required_assets.json\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/__moc_runtime/model_definition.job.json\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/__moc_runtime/required_libraries_filenames.txt\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/test_actual_roi_monitor.py\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/default_actual_roi_monitor.py\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/dashboard_errors.dmn\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/regression_ROI_monitor.py\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/performance_monitor.py\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/test_main_dashboard.py\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/dashboard_model.dmn\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/performance_monitor_regression.py\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/NewRelicDashboardMonitor.py\">>",
    "2023/12/20 7:45:36 [info] Attempting to write to file: <<\"/tmp/playground/115892158/marketing_roi_monitor.py\">>",
    "2023/12/20 7:45:36 [info] (pre) MODEL-CONSOLE: using 'python3 -m venv' to create local env for requirements file(s)",
    "2023/12/20 7:45:36 [info] (pre) MODEL-CONSOLE: env created and activated",
    "2023/12/20 7:45:36 [info] (pre) MODEL-CONSOLE: About to install reqs from file: requirements.txt",
    "2023/12/20 7:45:39 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: modelop_sdk>=0.5.0 in /usr/local/lib/python3.8/site-packages (from -r requirements.txt (line 1)) (0.5.8)",
    "2023/12/20 7:45:39 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: modelop>=0.13.0 in /usr/local/lib/python3.8/site-packages (from -r requirements.txt (line 2)) (1.3.4)",
    "2023/12/20 7:45:39 [info] (pre) MODEL-CONSOLE: Collecting gql",
    "2023/12/20 7:45:39 [info] (pre) MODEL-CONSOLE:   Using cached gql-3.4.1-py2.py3-none-any.whl (65 kB)",
    "2023/12/20 7:45:39 [info] (pre) MODEL-CONSOLE: Collecting asyncio",
    "2023/12/20 7:45:39 [info] (pre) MODEL-CONSOLE:   Using cached asyncio-3.4.3-py3-none-any.whl (101 kB)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Collecting aiohttp",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE:   Using cached aiohttp-3.9.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pandas<=1.2.3,>=1.0.0 in /usr/local/lib/python3.8/site-packages (from modelop_sdk>=0.5.0->-r requirements.txt (line 1)) (1.2.3)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: requests==2.26.0 in /usr/local/lib/python3.8/site-packages (from modelop_sdk>=0.5.0->-r requirements.txt (line 1)) (2.26.0)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.8/site-packages (from requests==2.26.0->modelop_sdk>=0.5.0->-r requirements.txt (line 1)) (2.0.12)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.8/site-packages (from requests==2.26.0->modelop_sdk>=0.5.0->-r requirements.txt (line 1)) (3.4)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/site-packages (from requests==2.26.0->modelop_sdk>=0.5.0->-r requirements.txt (line 1)) (2023.11.17)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/site-packages (from requests==2.26.0->modelop_sdk>=0.5.0->-r requirements.txt (line 1)) (1.26.18)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: aequitas>=0.39.0 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (0.42.0)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: statsmodels>=0.12.2 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (0.13.2)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (0.24.2)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (1.7.1)",
    "2023/12/20 7:45:42 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: numpy>=1.0.0 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (1.21.6)",
    "2023/12/20 7:45:43 [info] (pre) MODEL-CONSOLE: Collecting graphql-core<3.3,>=3.2",
    "2023/12/20 7:45:43 [info] (pre) MODEL-CONSOLE:   Using cached graphql_core-3.2.3-py3-none-any.whl (202 kB)",
    "2023/12/20 7:45:44 [info] (pre) MODEL-CONSOLE: Collecting yarl<2.0,>=1.6",
    "2023/12/20 7:45:44 [info] (pre) MODEL-CONSOLE:   Using cached yarl-1.9.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (308 kB)",
    "2023/12/20 7:45:44 [info] (pre) MODEL-CONSOLE: Collecting backoff<3.0,>=1.11.1",
    "2023/12/20 7:45:44 [info] (pre) MODEL-CONSOLE:   Using cached backoff-2.2.1-py3-none-any.whl (15 kB)",
    "2023/12/20 7:45:47 [info] (pre) MODEL-CONSOLE: Collecting multidict<7.0,>=4.5",
    "2023/12/20 7:45:47 [info] (pre) MODEL-CONSOLE:   Using cached multidict-6.0.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (121 kB)",
    "2023/12/20 7:45:47 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.8/site-packages (from aiohttp->-r requirements.txt (line 5)) (23.1.0)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Collecting frozenlist>=1.1.1",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE:   Using cached frozenlist-1.4.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (240 kB)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Collecting async-timeout<5.0,>=4.0",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE:   Using cached async_timeout-4.0.3-py3-none-any.whl (5.7 kB)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Collecting aiosignal>=1.1.2",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE:   Using cached aiosignal-1.3.1-py3-none-any.whl (7.6 kB)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: markdown2==2.3.5 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.3.5)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: altair==4.1.0 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (4.1.0)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: xhtml2pdf==0.2.2 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.2.2)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: millify==0.1.1 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.1.1)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: Flask==0.12.2 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.12.2)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: Flask-Bootstrap==3.3.7.1 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.3.7.1)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: matplotlib>=3.0.3 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.7.4)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: SQLAlchemy>=1.1.1 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.0.23)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: seaborn>=0.9.0 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.13.0)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (6.0.1)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: tabulate==0.8.2 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.8.2)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: ohio>=0.2.0 in /usr/local/lib/python3.8/site-packages (from aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.5.0)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: jinja2 in /usr/local/lib/python3.8/site-packages (from altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.1.2)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: toolz in /usr/local/lib/python3.8/site-packages (from altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.12.0)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: entrypoints in /usr/local/lib/python3.8/site-packages (from altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.4)",
    "2023/12/20 7:45:48 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: jsonschema in /usr/local/lib/python3.8/site-packages (from altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (4.20.0)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: click>=2.0 in /usr/local/lib/python3.8/site-packages (from Flask==0.12.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (8.1.7)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: itsdangerous>=0.21 in /usr/local/lib/python3.8/site-packages (from Flask==0.12.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.1.2)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: Werkzeug>=0.7 in /usr/local/lib/python3.8/site-packages (from Flask==0.12.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.0.1)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: dominate in /usr/local/lib/python3.8/site-packages (from Flask-Bootstrap==3.3.7.1->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.9.0)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: visitor in /usr/local/lib/python3.8/site-packages (from Flask-Bootstrap==3.3.7.1->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.1.3)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: html5lib>=1.0 in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.1)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: httplib2 in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.22.0)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pyPdf2 in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.0.1)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: Pillow in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (10.1.0)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: reportlab>=3.0 in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.6.13)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: six in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.16.0)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/site-packages (from pandas<=1.2.3,>=1.0.0->modelop_sdk>=0.5.0->-r requirements.txt (line 1)) (2.8.2)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/site-packages (from pandas<=1.2.3,>=1.0.0->modelop_sdk>=0.5.0->-r requirements.txt (line 1)) (2023.3.post1)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.8/site-packages (from scikit-learn>=0.22->modelop>=0.13.0->-r requirements.txt (line 2)) (1.3.2)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.8/site-packages (from scikit-learn>=0.22->modelop>=0.13.0->-r requirements.txt (line 2)) (3.2.0)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.8/site-packages (from statsmodels>=0.12.2->modelop>=0.13.0->-r requirements.txt (line 2)) (0.5.3)",
    "2023/12/20 7:45:49 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.8/site-packages (from statsmodels>=0.12.2->modelop>=0.13.0->-r requirements.txt (line 2)) (23.2)",
    "2023/12/20 7:45:50 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (4.45.0)",
    "2023/12/20 7:45:50 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: importlib-resources>=3.2.0 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (6.1.1)",
    "2023/12/20 7:45:50 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.4.5)",
    "2023/12/20 7:45:50 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.1.1)",
    "2023/12/20 7:45:50 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.1.1)",
    "2023/12/20 7:45:50 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.12.1)",
    "2023/12/20 7:45:50 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.8/site-packages (from SQLAlchemy>=1.1.1->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (4.8.0)",
    "2023/12/20 7:45:50 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.8/site-packages (from SQLAlchemy>=1.1.1->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.0.1)",
    "2023/12/20 7:45:51 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: webencodings in /usr/local/lib/python3.8/site-packages (from html5lib>=1.0->xhtml2pdf==0.2.2->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.5.1)",
    "2023/12/20 7:45:51 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: zipp>=3.1.0 in /usr/local/lib/python3.8/site-packages (from importlib-resources>=3.2.0->matplotlib>=3.0.3->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.17.0)",
    "2023/12/20 7:45:51 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.8/site-packages (from jinja2->altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.1.3)",
    "2023/12/20 7:45:52 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.8/site-packages (from jsonschema->altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2023.11.1)",
    "2023/12/20 7:45:52 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.8/site-packages (from jsonschema->altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.31.0)",
    "2023/12/20 7:45:52 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pkgutil-resolve-name>=1.3.10 in /usr/local/lib/python3.8/site-packages (from jsonschema->altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.3.10)",
    "2023/12/20 7:45:52 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.8/site-packages (from jsonschema->altair==4.1.0->aequitas>=0.39.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.13.1)",
    "2023/12/20 7:45:54 [info] (pre) MODEL-CONSOLE: Installing collected packages: asyncio, multidict, graphql-core, frozenlist, backoff, async-timeout, yarl, aiosignal, gql, aiohttp",
    "2023/12/20 7:45:57 [info] (pre) MODEL-CONSOLE: Successfully installed aiohttp-3.9.1 aiosignal-1.3.1 async-timeout-4.0.3 asyncio-3.4.3 backoff-2.2.1 frozenlist-1.4.1 gql-3.4.1 graphql-core-3.2.3 multidict-6.0.4 yarl-1.9.4",
    "2023/12/20 7:45:57 [info] (pre) MODEL-CONSOLE: [notice] A new release of pip is available: 23.0.1 -> 23.3.2",
    "2023/12/20 7:45:57 [info] (pre) MODEL-CONSOLE: [notice] To update, run: python3 -m pip install --upgrade pip",
    "2023/12/20 7:45:58 [info] (pre) MODEL-CONSOLE: installation via requirements.txt complete",
    "2023/12/20 7:46:01 [info] (pre) MODEL-CONSOLE: FastScore model runner for Python",
    "2023/12/20 7:46:01 [info] jet startup complete",
    "2023/12/20 7:46:01 [info] state changes to RUNNING",
    "2023/12/20 7:46:01 [info] MODEL-CONSOLE: (RecordsetBatcher) threshold set to 2",
    "2023/12/20 7:46:01 [info] init succeeded",
    "2023/12/20 7:46:01 [info] state changes to FINISHING",
    "2023/12/20 7:46:01 [info] MODEL-CONSOLE: (RecordsetBatcher) flushing on EOF",
    "2023/12/20 7:46:01 [info] MODEL-CONSOLE: (RecordsetBatcher) no recordset at slot 0",
    "2023/12/20 7:46:01 [info] MODEL-CONSOLE: (RecordsetBatcher) populating slot 0 with asset at ./__moc_runtime/skipped-json-test-asset.0",
    "2023/12/20 7:46:02 [info] MODEL-CONSOLE: (RecordsetBatcher) no recordset at slot 2",
    "2023/12/20 7:46:02 [info] MODEL-CONSOLE: (RecordsetBatcher) populating slot 0 with asset at ./__moc_runtime/skipped-json-test-asset.2",
    "2023/12/20 7:46:02 [info] MODEL-CONSOLE: Model runner exits",
    "2023/12/20 7:46:02 [info] state changes to FINISHED",
    "2023/12/20 7:46:02 [info] flushing slot 0",
    "2023/12/20 7:46:03 [info] slot 0 flushed",
    "2023/12/20 7:46:03 [info] flushing slot 1",
    "2023/12/20 7:46:03 [info] slot 1 flushed",
    "2023/12/20 7:46:03 [info] flushing slot 2",
    "2023/12/20 7:46:03 [info] slot 2 flushed",
    "2023/12/20 7:46:03 [info] closing file: <<\"/tmp/playground/batch-3f6799e4-fbc9-4286-b7a4-12eb9af65690/null-asset.2\">>",
    "2023/12/20 7:46:03 [info] closing file: <<\"/tmp/playground/batch-3f6799e4-fbc9-4286-b7a4-12eb9af65690/null-asset.0\">>",
    "2023/12/20 7:46:03 [info] closing file: <<\"/tmp/playground/batch-3f6799e4-fbc9-4286-b7a4-12eb9af65690/test_result.json\">>",
    "2023/12/20 7:46:03 [warning] Flushing manifold message during reset: {'EXIT',<0.10187.5>,normal}",
    "2023/12/20 7:46:03 [warning] Flushing manifold message during reset: {'EXIT',<0.10185.5>,normal}",
    "2023/12/20 7:46:03 [warning] Flushing manifold message during reset: {'EXIT',<0.10182.5>,normal}",
    "2023/12/20 7:46:03 [warning] Flushing manifold message during reset: {'EXIT',<0.10189.5>,normal}",
    "2023/12/20 7:46:03 [info] state changes to INIT",
    "2023/12/20 7:46:03 batch job complete",
    "2023/12/20 7:46:03 Records in/out: 0/1"
  ],
  "enableInputSchemaChecking": false,
  "enableOutputSchemaChecking": false,
  "jobRunTime": 1703058334390,
  "jobWaitTime": 1703057756492,
  "jobEndTime": 1703058363886,
  "lastUpdateFromRuntime": "2023-12-20T07:46:08.125Z",
  "jobParameters": {},
  "inputData": [
    {
      "assetId": "3d6efebd-342e-493e-8b07-c9d907049c7d",
      "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json",
      "assetType": "EXTERNAL_FILE",
      "assetRole": "BASELINE_DATA",
      "metaData": {
        "custom": {},
        "tags": []
      },
      "repositoryInfo": {
        "repositoryType": "S3_REPOSITORY",
        "secure": true,
        "host": "modelop-demo.s3.us-east-2.amazonaws.com",
        "port": 443,
        "region": "us-east-2"
      },
      "importedRepository": {
        "repositoryType": "GIT_REPO",
        "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
        "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
        "repositoryBranch": "master",
        "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
        "lastSyncStatus": "SUCCESS",
        "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
        "lastSyncDate": "2023-10-18T18:20:04.492Z",
        "lastCommitDate": "2023-08-22T22:45:07Z"
      },
      "contentHash": {
        "hashType": "SHA-256",
        "hexString": "e170f8ca2360e82679d4633c35b2908f93a8b41bcd63d027cd500daa19da76d3"
      },
      "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json",
      "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json",
      "filename": "baseline_data.json",
      "fileFormat": "JSON",
      "fileSize": 382615,
      "createdDate": "2023-10-18T18:14:54.332Z"
    },
    {
      "assetId": "d3871f3d-a6a6-4697-b8d8-f2e04e3783ea",
      "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json",
      "assetType": "EXTERNAL_FILE",
      "assetRole": "COMPARATOR_DATA",
      "metaData": {
        "custom": {},
        "tags": []
      },
      "repositoryInfo": {
        "repositoryType": "S3_REPOSITORY",
        "secure": true,
        "host": "modelop-demo.s3.us-east-2.amazonaws.com",
        "port": 443,
        "region": "us-east-2"
      },
      "importedRepository": {
        "repositoryType": "GIT_REPO",
        "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
        "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
        "repositoryBranch": "master",
        "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
        "lastSyncStatus": "SUCCESS",
        "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
        "lastSyncDate": "2023-10-18T18:20:04.492Z",
        "lastCommitDate": "2023-08-22T22:45:07Z"
      },
      "contentHash": {
        "hashType": "SHA-256",
        "hexString": "d23455d2f14209d8d72ce82a9ada7b9e6a8f2cdb2de075ef53f03c14ccb335c7"
      },
      "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json",
      "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json",
      "filename": "comparator_data.json",
      "fileFormat": "JSON",
      "fileSize": 95686,
      "createdDate": "2023-10-18T18:14:53.928Z"
    }
  ],
  "outputData": [
    {
      "assetId": "f147c577-8ba8-44df-8278-b0f09f18c84c",
      "name": "test_result.json",
      "assetType": "FILE",
      "assetRole": "UNKNOWN",
      "metaData": {
        "custom": {},
        "tags": []
      },
      "filename": "test_result.json",
      "fileFormat": "JSON",
      "fileSize": 814,
      "fileContent": "eyJjcmVhdGVkRGF0ZSI6ICIxMi8yMC8yMDIzIDA3OjQ2OjAyIiwgIm1vZGVsVXNlQ2F0ZWdvcnkiOiAiIiwgIm1vZGVsT3JnYW5pemF0aW9uIjogIkxvY2tib3ggT0NSIiwgInN1bW1hcnkgcmVzdWx0cyI6ICJ0aGlzIGlzIGEgc3VtbWFyeSByZXN1bHQiLCAiUHJpbWFyeSBNZXRyaWNzIjogW3siIjogMSwgIk1ldHJpYyI6ICJPdXRjb21lIDEiLCAiVmFsdWUiOiAiRmFsc2UifSwgeyIiOiAyLCAiTWV0cmljIjogIk91dGNvbWUgMiIsICJWYWx1ZSI6ICJUcnVlIn0sIHsiIjogMywgIk1ldHJpYyI6ICJPdXRjb21lIDMiLCAiVmFsdWUiOiAiMC4yODQifSwgeyIiOiA0LCAiTWV0cmljIjogIkRhdGEgMSIsICJWYWx1ZSI6ICJUcnVlIn0sIHsiIjogNSwgIk1ldHJpYyI6ICJEYXRhIDIiLCAiVmFsdWUiOiAiVHJ1ZSJ9XSwgImN1c3RvbUNvbHVtbnMiOiBbeyJuYW1lIjogIlJlcG9ydGluZyBRdWFydGVyIiwgInZhbHVlIjogIkZZMjMgUTQifSwgeyJuYW1lIjogIk92ZXJhbGwgUmF0aW5nIiwgInZhbHVlIjogIkFzIEV4cGVjdGVkIn1dLCAiaGVhdE1hcCI6IHsiT3ZlcmFsbCBBc3Nlc3NtZW50IjogeyJ0ZXN0UmVzdWx0IjogIkdyYXkifSwgIlByaW1hcnkgTWV0cmljIDEiOiB7InRlc3RSZXN1bHQiOiAiR3JlZW4ifSwgIlByaW1hcnkgTWV0cmljIDIiOiB7InRlc3RSZXN1bHQiOiAiR3JlZW4ifSwgIlByaW1hcnkgTWV0cmljIDMiOiB7InRlc3RSZXN1bHQiOiAiR3JlZW4ifSwgIlByaW1hcnkgTWV0cmljIDQiOiB7InRlc3RSZXN1bHQiOiAiR3JlZW4ifSwgIlByaW1hcnkgTWV0cmljIDUiOiB7InRlc3RSZXN1bHQiOiAiR3JlZW4ifX19Cg=="
    }
  ],
  "model": {
    "id": "54a179c8-0f18-479a-bd11-4800dc7522e3",
    "group": "modelop",
    "version": 0,
    "createdDate": "2023-12-20T07:20:58.130Z",
    "lastModifiedDate": "2023-12-20T07:20:58.130Z",
    "createdBy": "matt.laster.modelop",
    "lastModifiedBy": "matt.laster.modelop",
    "storedModel": {
      "id": "26481449-0282-4c3d-b981-66467887eeb5",
      "group": "modelop",
      "version": 54,
      "createdDate": "2023-12-20T05:17:12.678Z",
      "lastModifiedDate": "2023-12-20T07:20:48.449Z",
      "createdBy": "matt.laster.modelop",
      "lastModifiedBy": "matt.laster.modelop",
      "modelMetaData": {
        "custom": {
          "modelopPackageVersion": "1.0.0"
        },
        "tags": [],
        "name": "PNC_Dashboard",
        "description": "Runs default monitors on a base business model generating data for the main MOC Dashboard",
        "type": "PYTHON",
        "inputSchema": [],
        "outputSchema": [],
        "enableInputSchemaChecking": false,
        "enableOutputSchemaChecking": false,
        "attachments": [],
        "repositoryInfo": {
          "repositoryType": "GIT_REPO",
          "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
          "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
          "repositoryBranch": "dash-1",
          "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
          "lastSyncStatus": "SUCCESS",
          "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
          "lastSyncDate": "2023-12-20T07:20:48.098Z",
          "lastCommitDate": "2023-12-20T07:20:14Z"
        },
        "modelCategory": "MODEL_MONITORING_MODEL",
        "defaultAssociationRole": "METRICS_MODEL",
        "frequentlyUsed": true,
        "modelUseCategory": "unassigned",
        "modelOrganization": "company",
        "modelRisk": "unassigned",
        "roi": {
          "baselineMetricsTNR": 0,
          "baselineMetricsTPR": 0,
          "costMultipliersTP": 0,
          "costMultipliersTN": 0,
          "costMultipliersFP": 0,
          "costMultipliersFN": 0
        }
      },
      "modelAssets": [
        {
          "assetId": "223d1941-3bb7-3020-b6e7-db75ae02e777",
          "name": "test_actual_roi_monitor.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "import unittest\n\nimport default_actual_roi_monitor as default_actual_roi_monitor\n\n\nclass MyTestCase(unittest.TestCase):\n    valid_input_ext_sc = {\n        \"name\": \"input_schema.avsc\",\n        \"type\": \"record\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"type\": \"int\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"identifier\",\n                \"protectedClass\": False,\n                \"driftCandidate\": False,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n            },\n            {\n                \"name\": \"credit_amount\",\n                \"type\": \"float\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"predictor\",\n                \"protectedClass\": False,\n                \"driftCandidate\": True,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n                \"isAmountField\": True,\n            },\n            {\n                \"name\": \"installment_rate\",\n                \"type\": \"int\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"predictor\",\n                \"protectedClass\": False,\n                \"driftCandidate\": True,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n            },\n        ],\n    }\n\n    valid_input_ext_sc_multiple_isValueField_one_True = {\n        \"name\": \"input_schema.avsc\",\n        \"type\": \"record\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"type\": \"int\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"identifier\",\n                \"isAmountField\": False,\n                \"protectedClass\": False,\n                \"driftCandidate\": False,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n            },\n            {\n                \"name\": \"credit_amount\",\n                \"type\": \"float\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"predictor\",\n                \"protectedClass\": False,\n                \"driftCandidate\": True,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n                \"isAmountField\": True,\n            },\n            {\n                \"isAmountField\": False,\n                \"name\": \"installment_rate\",\n                \"type\": \"int\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"predictor\",\n                \"protectedClass\": False,\n                \"driftCandidate\": True,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n            },\n        ],\n    }\n\n    invalid_input_ext_sc_multiple_isValueField_multiple_True = {\n        \"name\": \"input_schema.avsc\",\n        \"type\": \"record\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"type\": \"int\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"identifier\",\n                \"protectedClass\": False,\n                \"driftCandidate\": False,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n                \"isAmountField\": True,\n            },\n            {\n                \"name\": \"credit_amount\",\n                \"type\": \"float\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"predictor\",\n                \"protectedClass\": False,\n                \"driftCandidate\": True,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n                \"isAmountField\": True,\n            },\n            {\n                \"isAmountField\": False,\n                \"name\": \"installment_rate\",\n                \"type\": \"int\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"predictor\",\n                \"protectedClass\": False,\n                \"driftCandidate\": True,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n            },\n        ],\n    }\n\n    invalid_input_ext_sc_no_isValueField = {\n        \"name\": \"input_schema.avsc\",\n        \"type\": \"record\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"type\": \"int\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"identifier\",\n                \"protectedClass\": False,\n                \"driftCandidate\": False,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n            },\n            {\n                \"name\": \"credit_amount\",\n                \"type\": \"float\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"predictor\",\n                \"protectedClass\": False,\n                \"driftCandidate\": True,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n            },\n            {\n                \"name\": \"installment_rate\",\n                \"type\": \"int\",\n                \"dataClass\": \"numerical\",\n                \"role\": \"predictor\",\n                \"protectedClass\": False,\n                \"driftCandidate\": True,\n                \"specialValues\": [],\n                \"scoringOptional\": False,\n            },\n        ],\n    }\n\n    def test_get_credit_amount_field_happy_path_1_found(self):\n        valid_credit_amount_one_field = (\n            default_actual_roi_monitor.get_credit_amount_field_name(\n                self.valid_input_ext_sc\n            )\n        )\n        self.assertEqual(\n            \"credit_amount\", valid_credit_amount_one_field\n        )  # add assertion here\n\n    def test_get_credit_amount_field_name_multiple_isAmountField_multiple_true(self):\n        try:\n            valid_credit_amount_one_field = (\n                default_actual_roi_monitor.get_credit_amount_field_name(\n                    self.invalid_input_ext_sc_multiple_isValueField_multiple_True\n                )\n            )\n            self.assertFalse(\n                \"Method should have failed , because more than one isAmountField:true were found\"\n            )\n        except Exception as ex:\n            self.assertTrue(\"Multiple isAmountField:true found, so this is correct\")\n\n    def test_get_credit_amount_field_name_multiple_isAmountField_one_true(self):\n        try:\n            valid_credit_amount_field = (\n                default_actual_roi_monitor.get_credit_amount_field_name(\n                    self.valid_input_ext_sc_multiple_isValueField_one_True\n                )\n            )\n            self.assertEqual(\n                \"credit_amount\", valid_credit_amount_field\n            )  # add assertion here\n\n        except Exception as ex:\n            self.assertFalse(\n                \"Method should have failed , multiple isAmountField found but only one marked as true found\"\n            )\n\n    def test_invalid_get_credit_amount_field_no_isAmountField_found(self):\n        try:\n            valid_credit_amount_one_field = (\n                default_actual_roi_monitor.get_credit_amount_field_name(\n                    self.invalid_input_ext_sc_no_isValueField\n                )\n            )\n            self.assertFalse(\n                \"None isAmountField:true found, so this is incorrect, exception should have happened\"\n            )\n        except Exception as ex:\n            self.assertTrue(\n                \"None isAmountField:true found, so this is correct, exception expected\"\n            )\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n",
          "sourceCodeFilePath": "test_actual_roi_monitor.py",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "a33578b0-fef3-3e8e-a2ee-9a48488b045d",
          "name": "default_actual_roi_monitor.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "import modelop.schema.infer as infer\nimport json\nimport modelop_sdk.utils.logging as logger\nfrom modelop_sdk.utils import dashboard_utils as dashboard_utils\n\nLOG = logger.configure_logger()\n\n\ndef calculate_roi(comparator, job_json) -> float:\n    \"\"\"\n    Source: https://github.com/merhi-odg/actual_ROI_monitor ( This monitor has local improvements )\n    Monitor required inputs:\n        1 - Comparator type: dataframe\n        2 - job_json type: dict\n\n    Note: The original implementation of this monitor is modifying the input comparator dataframe, so instead this\n    implementation is generating a copy of the comparator dataframe to avoid issues with other monitors during the\n    rest of the Dashboard execution.\n    \"\"\"\n    dashboard_utils.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    ## Creating a copy because the current actual_roi implementation modifies the comparatator df\n    comparator_copy = comparator.copy()\n\n    try:\n        job = json.loads(job_json[\"rawJson\"])\n        deployable_model = job.get(\"referenceModel\", None)\n    except Exception as ex:\n        error_message = \"referenceModel parameter not found on job_json\"\n        LOG.error(error_message)\n        raise KeyError(error_message)\n\n    if deployable_model is None or len(deployable_model) == 0:\n        raise ValueError(\"deployed_model is None or empty\")\n\n    try:\n        input_schema = infer.extract_input_schema(job_json)\n    except Exception as ex:\n        LOG.error(f\"Error while extracting input_schema - {str(ex)}\")\n        input_schema = None\n\n    if input_schema is None or len(input_schema) == 0:\n        raise ValueError(\"input_schema is None or empty\")\n\n    try:\n        ROI_parameters = deployable_model[\"storedModel\"][\"modelMetaData\"][\"roi\"]\n        LOG.info(\"ROI parameters: %s\", ROI_parameters)\n    except Exception as er1:\n        error_message = \"Required deployableModel.storedModel.modelMetadata.roi parameters not found, missing parameters \"\n        LOG.error(error_message)\n        raise KeyError(error_message)\n\n    try:\n        positive_class_label = get_positive_class_label(input_schema)\n        LOG.info(\"Label of Positive Class: %s\", positive_class_label)\n    except Exception as er2:\n        raise KeyError(\n            f\"Error while extracting positive_class_label from input_extended_schema : {str(er2)}\"\n        )\n\n    global amount_field, label_field, score_field\n    global cost_multipliers\n\n    amount_field = get_credit_amount_field_name(input_schema)\n    score_field = \"score\"  # Assuming these values will be present all the time\n    label_field = \"label_value\"  # Assuming these values will be present all the time\n\n    # ROI cost multipliers for each classification case\n    cost_multipliers = {\n        \"TP\": ROI_parameters[\"costMultipliersTP\"],\n        \"FP\": ROI_parameters[\"costMultipliersFP\"],\n        \"TN\": ROI_parameters[\"costMultipliersTN\"],\n        \"FN\": ROI_parameters[\"costMultipliersFN\"],\n    }\n\n    LOG.info(f\"Using cost_multipliers {str(cost_multipliers)}\")\n    # Classify each record in dataframe\n    for idx in range(len(comparator_copy)):\n        if (\n            comparator_copy.iloc[idx][label_field]\n            == comparator_copy.iloc[idx][score_field]\n        ):\n            comparator_copy[\"record_class\"] = (\n                \"TP\"\n                if comparator_copy.iloc[idx][label_field] == positive_class_label\n                else \"TN\"\n            )\n        elif (\n            comparator_copy.iloc[idx][label_field]\n            < comparator_copy.iloc[idx][score_field]\n        ):\n            comparator_copy[\"record_class\"] = \"FP\"\n        else:\n            comparator_copy[\"record_class\"] = \"FN\"\n\n    # Compute actual ROI\n    actual_roi = compute_actual_roi(comparator_copy)\n    LOG.info(f\"compute_actual_roi: {actual_roi}\")\n    return actual_roi\n\n\ndef compute_actual_roi(data) -> float:\n    \"\"\"\n    Helper function to compute actual ROI.\n    Args:\n        data (pd.DataFrame): Input DataFrame containing record_class\n    Returns:\n        float: actual ROI\n    \"\"\"\n\n    actual_roi = 0\n    for idx in range(len(data)):\n        actual_roi += (\n            data.iloc[idx][amount_field]\n            * cost_multipliers[data.iloc[idx][\"record_class\"]]\n        )\n\n    return round(actual_roi, 2)\n\n\ndef get_credit_amount_field_name(input_schema: dict = None) -> str:\n    \"\"\"\n    Method that extracts the credit_amount field name marked with `isAmountField`:true from the input_schema.\n\n        input:\n            input_schema : dict - external input_schema\n        output:\n            str: `name` value of field marked as `isAmountField`\n        exceptions thrown:\n            - If none fields were defined with `isAmountField`:true, then it raises ValueException.\n            - If more than one field were marked with `isAmountField`: true, then it raises ValueException.\n\n    \"\"\"\n    if input_schema is None or not input_schema:\n        raise ValueError(\"input_schema is None or empty\")\n\n    if input_schema.get(\"fields\") is None:\n        raise KeyError(\"fields field not found at the input extended_schema\")\n\n    fields_array = input_schema[\"fields\"]\n\n    if not isinstance(fields_array, list):\n        raise ValueError(\n            f\"fields_array is not an instance of array , instead {type(fields_array)}\"\n        )\n\n    amount_field_value = None\n\n    for field in fields_array:\n        if field.get(\"isAmountField\") is not None:\n            # Making sure isAmountField true\n            if isinstance(field.get(\"isAmountField\"), bool) and field.get(\n                \"isAmountField\"\n            ):\n                if amount_field_value is not None:\n                    raise ValueError(\n                        f\"Error: More than one fields marked as `isAmountField` found, existing one {amount_field_value}\"\n                    )\n                amount_field_value = field.get(\"name\")\n\n    if amount_field_value is None:\n        raise ValueError(\"None fields found as `isAmountField`:true \")\n\n    return amount_field_value\n\n\ndef get_positive_class_label(input_schema: dict = None) -> any:\n    \"\"\"\n    Method that extracts the value for `positiveClassLabel` for fields with 'role':'label',\n    method throws exception if the number of `positiveClassLabel` fields != 1\n\n       input:\n           input_schema : dict - external input_schema\n       output:\n           any: `value` value for field marked as `positiveClassLabel`\n       exceptions thrown:\n           - If none fields were defined with `positiveClassLabel` then it raises ValueException.\n           - If more than one field were marked with `positiveClassLabel`, then it raises ValueException.\n\n    \"\"\"\n    if input_schema is None or not input_schema:\n        raise ValueError(\"input_schema is None or empty\")\n\n    if input_schema.get(\"fields\") is None:\n        raise KeyError(\"fields field not found at the input extended_schema\")\n\n    fields_array = input_schema[\"fields\"]\n\n    if not isinstance(fields_array, list):\n        raise ValueError(\n            f\"fields_array is not an instance of array , instead {type(fields_array)}\"\n        )\n\n    positive_class_label = any\n\n    for field in fields_array:\n        if field.get(\"role\") is not None and field.get(\"role\") == \"label\":\n\n            if field.get(\"positiveClassLabel\") is not None:\n                if positive_class_label is not any:\n                    raise ValueError(\n                        f\"Error: More than one fields marked as `positiveClassLabel` found, only one is allowed\"\n                    )\n                positive_class_label = field.get(\"positiveClassLabel\")\n\n    if positive_class_label is any:\n        raise ValueError(\"None fields found marked as `positiveClassLabel` \")\n\n    return positive_class_label\n",
          "sourceCodeFilePath": "default_actual_roi_monitor.py",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "4ac75643-dd3d-3cb4-8b1e-39697345c464",
          "name": "dashboard_errors.dmn",
          "assetType": "SOURCE_CODE",
          "assetRole": "TEST_RESULT_COMPARATOR",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" xmlns:camunda=\"http://camunda.org/schema/1.0/dmn\" id=\"Definitions_084v4bo\" name=\"DRD\" namespace=\"http://camunda.org/schema/1.0/dmn\" exporter=\"Camunda Modeler\" exporterVersion=\"5.0.0\">\n  <decision id=\"Decision_1x01d5h\" name=\"Dashboard errors\">\n    <decisionTable id=\"DecisionTable_1p3vw2a\" hitPolicy=\"COLLECT\">\n      <input id=\"InputClause_1vf50do\" label=\"Characteristic_Stability_testResult\" camunda:inputVariable=\"heatMap_Characteristic_Stability_testResult\">\n        <inputExpression id=\"LiteralExpression_1vkchnq\" typeRef=\"string\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_0a9uynn\" label=\"Performance_Monitor_testResult\" camunda:inputVariable=\"heatMap_Performance_Monitor_testResult\">\n        <inputExpression id=\"LiteralExpression_1ndwpmq\" typeRef=\"string\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_11pwb72\" label=\"Ethical_Fairness_testResult\" camunda:inputVariable=\"heatMap_Ethical_Fairness_testResult\">\n        <inputExpression id=\"LiteralExpression_0jk9lzp\" typeRef=\"string\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_0sddma3\" label=\"Data_Drift_testResult\" camunda:inputVariable=\"heatMap_Data_Drift_testResult\">\n        <inputExpression id=\"LiteralExpression_1a5k7y0\" typeRef=\"string\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1snhx0y\" label=\"Concept_Drift_testResult\" camunda:inputVariable=\"heatMap_Concept_Drift_testResult\">\n        <inputExpression id=\"LiteralExpression_15hza3z\" typeRef=\"string\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id=\"Output_1\" label=\"passes\" name=\"passes\" typeRef=\"boolean\" />\n      <output id=\"OutputClause_05wf8et\" label=\"reason\" name=\"reason\" typeRef=\"string\" />\n      <output id=\"OutputClause_1cbx9ll\" label=\"category\" name=\"category\" typeRef=\"string\" />\n      <rule id=\"DecisionRule_07fl9n7\">\n        <inputEntry id=\"UnaryTests_07gxb7n\">\n          <text>\"Red\"</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ycfot9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0g86sqt\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ecsgtu\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0422m01\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1dut0ej\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_15l3zir\">\n          <text>\"Characteristic Stability monitor didn't meet the expected thresholds\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0k7955w\">\n          <text>\"Dashboard Thresholds\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1q2p9s0\">\n        <inputEntry id=\"UnaryTests_0mgdie6\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_079g4x5\">\n          <text>\"Red\"</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1k7jmsr\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_10ng8c9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0xt5qra\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0zoc79w\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0c94xmt\">\n          <text>\"Performance monitor didn't meet the expected thresholds\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_04lz9km\">\n          <text>\"Dashboard Thresholds\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0s7ga5m\">\n        <inputEntry id=\"UnaryTests_087a6m1\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0hk6w1s\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_15t9x8p\">\n          <text>\"Red\"</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_00q2h2r\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1pre7el\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0pc1cs6\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1q17tul\">\n          <text>\"Ethical Fairness monitor didn't meet the expected thresholds\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0kbw8jn\">\n          <text>\"Dashboard Thresholds\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_10o0n03\">\n        <inputEntry id=\"UnaryTests_1f4j9zr\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_13nc39m\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0du7t30\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ov27vh\">\n          <text>\"Red\"</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1tjpl5z\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0imh6n7\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0964b18\">\n          <text>\"Data Drift monitor didn't meet the expected thresholds\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0s75oxp\">\n          <text>\"Dashboard Thresholds\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1fvts0m\">\n        <inputEntry id=\"UnaryTests_1896j5k\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ixxoc9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1acxnsw\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0nlp53o\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1png9tk\">\n          <text>\"Red\"</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1ne8xmb\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1smwt7e\">\n          <text>\"Concept Drift monitor didn't meet the expected thresholds\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1n0iird\">\n          <text>\"Dashboard Thresholds\"</text>\n        </outputEntry>\n      </rule>\n    </decisionTable>\n  </decision>\n  <dmndi:DMNDI>\n    <dmndi:DMNDiagram>\n      <dmndi:DMNShape dmnElementRef=\"Decision_1x01d5h\">\n        <dc:Bounds height=\"80\" width=\"180\" x=\"160\" y=\"100\" />\n      </dmndi:DMNShape>\n    </dmndi:DMNDiagram>\n  </dmndi:DMNDI>\n</definitions>\n",
          "sourceCodeFilePath": "dashboard_errors.dmn",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "3f711ed2-1ccf-3d25-b241-1483caf930f7",
          "name": "main_dashboard_model.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": true,
          "sourceCode": "import json\nimport re\nfrom datetime import datetime\nfrom typing import List, Optional, Dict\nimport random\nimport modelop.schema.infer as infer\nimport modelop.utils as utils\nimport modelop_sdk.apis.mlc_api as mlc\nimport modelop_sdk.restclient.moc_client as moc_client\nimport modelop_sdk.utils.logging as logger\nfrom modelop_sdk.utils import dashboard_utils, dict_utils\nimport modelop_sdk.apis.model_manage_api as model_manage\nimport uuid\nfrom dateutil.parser import parse\n\nLOG = logger.configure_logger()\n\nheatMapColors = [\"Gray\", \"Green\", \"Green\", \"Green\", \"Green\", \"Green\", \"Green\", \"Green\", \"Yellow\", \"Green\", \"Green\",\n                 \"Green\", \"Green\", \"Green\", \"Green\", \"Red\"]\naryOrgs = [\"Insurance\",\"Residuals\",\"Credit\",\"Fraud\",\"AML\",\"Insider Threats\",\"Marketing\",\"Trade Analytics\",\"Capital Markets\",\"Asset Management\",\"Payments\",\"Lockbox OCR\"]\naryRatings = [\"Use Caution\",\"Not performing\",\"As Expected\",\"As Expected\",\"As Expected\",\"As Expected\",\"As Expected\"]\naryQuarter = [\"FY23 Q1\",\"FY23 Q2\",\"FY23 Q3\",\"FY23 Q4\"]\ndef generate_heatmap_color() -> str:\n    return heatMapColors[random.randint(0, len(heatMapColors) - 1)]\ndef generate_org() -> str:\n    return aryOrgs[random.randint(0,len(aryOrgs) - 1)]\ndef generate_rating() -> str:\n    return aryRatings[random.randint(0,len(aryRatings) - 1)]\ndef generate_quarter() -> str:\n    return aryQuarter[random.randint(0,len(aryQuarter) - 1)]\ndef generate_category() -> str:\n    return \"\"\n\nJOB = {}\nDEPLOYABLE_MODEL = {}\nMODEL_METHODOLOGY = \"\"\n\n# modelop.init\ndef init(job_json):\n    global JOB\n    global DEPLOYABLE_MODEL\n    global MODEL_METHODOLOGY\n\n    job = json.loads(job_json[\"rawJson\"])\n    DEPLOYABLE_MODEL = job.get(\"referenceModel\", None)\n    JOB = job_json\n    MODEL_METHODOLOGY = (\n        DEPLOYABLE_MODEL.get(\"storedModel\", {})\n        .get(\"modelMetaData\", {})\n        .get(\"modelMethodology\", \"\")\n    )\n\n    infer.validate_schema(job_json)\n\n\n# modelop.metrics\ndef metrics(baseline, comparator) -> dict:\n    # result = {}\n    # heat_map = {}\n    # flat_heatmap = {}\n    # execution_errors_array = []\n    # results_with_defaults = {\n    #     \"CSI_maxCSIValue\": -99,\n    #     \"auc\": -99,\n    #     \"r2_score\": 99,\n    #     \"Bias_maxPPRDisparityValue\": -99,\n    #     \"Bias_minPPRDisparityValue\": -99,\n    #     \"DataDrift_maxKolmogorov-SmirnovPValue\": -99,\n    #     \"ConceptDrift_maxKolmogorov-SmirnovPValueValue\": -99\n    # }\n\n    # client = moc_client.MOCClient()\n    # mtr_summary_api = model_manage.ModelTestResultSummariesApi(client)\n    # mtr_api = model_manage.ModelTestResultsApi(client)\n    # mlc_api = mlc.MLCApi(client)\n\n    # def get_associated_model_latest_mtrs_mapper(model_association):\n    #     associated_model_id = uuid.UUID(model_association.get(\"associatedModel\", {}).get(\"id\"))\n    #     associated_model_name = model_association.get(\"associatedModel\", {}).get(\"storedModel\", {}).get(\"modelMetaData\", {}).get(\"name\", \"No name found\")\n    #     response_of_model_test_result_summaries = mtr_summary_api.find_all_by_optional(\n    #         deployable_model_id=uuid.UUID(DEPLOYABLE_MODEL.get(\"id\")),\n    #         associated_model_snapshot_id=associated_model_id,\n    #         sort=\"createdDate,desc\", page=0, size=1)\n    #     if len(response_of_model_test_result_summaries.get(\"_embedded\", {}).get(\"modelTestResultSummaries\", [])) > 0:\n    #         mtr_summary = response_of_model_test_result_summaries.get(\"_embedded\", {}).get(\"modelTestResultSummaries\", [])[0]\n    #         mtr = mtr_api.get(mtr_summary.get(\"id\"))\n    #         return mtr\n    #     else:\n    #         LOG.error(f\"Couldn't find Model Test Result for deployableModel \" + str(DEPLOYABLE_MODEL.get(\"id\")) +\n    #                   \" and associated model \" + str(associated_model_name) + \" (\" + str(associated_model_id) + \")\")\n    #         return None\n\n    # LOG.info(\"Number of associated models in the business model: \" + str(len(DEPLOYABLE_MODEL.get(\"associatedModels\", []))))\n    # if len(DEPLOYABLE_MODEL.get(\"associatedModels\", [])) == 0:\n    #     raise Exception(\"No associated models were found in the current business model \")\n\n    # mtrs = list(map(get_associated_model_latest_mtrs_mapper, DEPLOYABLE_MODEL.get(\"associatedModels\", [])))\n    # mtrs = list(filter(None, mtrs))\n    # result = {}\n    # result.update(combine_model_test_results(mtrs))\n    # result.update(extract_model_fields(execution_errors_array))\n\n    # try:\n    #     results_with_defaults.update(result)\n    #     LOG.info(\"Performing DMN evaluation\")\n    #     job = json.loads(JOB.get(\"rawJson\", {}))\n    #     evaluated_results = mlc_api.evaluate_results(results_with_defaults, \"dashboard_model.dmn\", additional_assets=job.get(\"additionalAssets\", []))\n    #     LOG.info(\"Generating heatMap\")\n    #     heat_map[\"heatMap\"] = dashboard_utils.generate_heatmap(evaluated_results)\n\n    #     flat_heatmap = dict_utils.flatten_data(heat_map)\n    # except Exception as eval_ex:\n    #     heat_map = {\"heatMap\": {}}\n    #     LOG.error(str(eval_ex))\n    #     execution_errors_array.append(\n    #         \"Something went wrong during DMN evaluation or heatmap generation, please check logs\"\n    #     )\n\n    # value_risk = calculate_risk_count()\n\n    # dashboard_result = {\"createdDate\": datetime.now().strftime(\"%m/%d/%Y %H:%M:%S\")}\n    # dashboard_result.update(results_with_defaults)\n    # dashboard_result.update(dashboard_result)\n    # dashboard_result.update(heat_map)\n    # dashboard_result.update(flat_heatmap)\n    # dashboard_result.update({\"executionErrors\": execution_errors_array})\n    # dashboard_result.update({\"executionErrorsCount\": len(execution_errors_array)})\n\n    # dashboard_result.update(calculate_custom_columns([\n    #     generate_custom_entry([preformatted(DEPLOYABLE_MODEL.get(\"metaData\", {}).get(\"modelStage\", \"None\"))],\n    #                           [\"Model Stage\"],\n    #                           None,\n    #                           name=\"Approved Use\")\n    # ]))\n\n    #yield dashboard_result\n\n\n    dashboard_result = {\n        \"createdDate\": datetime.now().strftime('%m/%d/%Y %H:%M:%S'),\n        \"modelUseCategory\": generate_category(),\n        \"modelOrganization\": generate_org(),\n    }\n    summary_results = '''\n    {\n    \"summary results\":\"this is a summary result\"\n    }  \n    '''\n    primary_metrics = {\n        \"Primary Metrics\": [\n            {\"\":1,\"Metric\": \"Outcome 1\", \"Value\": \"False\"},\n            {\"\":2,\"Metric\": \"Outcome 2\", \"Value\": \"True\"},\n            {\"\":3,\"Metric\": \"Outcome 3\", \"Value\": \"0.284\"},\n            {\"\":4,\"Metric\": \"Data 1\", \"Value\": \"True\"},\n            {\"\":5,\"Metric\": \"Data 2\", \"Value\": \"True\"}\n        ]\n    }\n\n    # custom_cards = '''\n    # {\n    #   \"customCards\": [\n    #     {\n    #       \"name\":\"# of Models\",\n    #       \"value\":\"1\"\n    #     }, {\n    #       \"name\":\"# of Reports\",\n    #       \"value\":\"1\"\n    #     }, {\n    #       \"name\":\"# of Pending Reports\",\n    #       \"value\":\"1\"\n    #     }\n    #   ]\n    # }  \n    # '''\n    custom_cols = {\n      \"customColumns\": [\n        {\n          \"name\": \"Reporting Quarter\",\n          \"value\": generate_quarter()\n        },\n        {\n          \"name\":\"Overall Rating\",\n          \"value\":generate_rating()\n        }\n      ]\n    }  \n    \n    heatmap = {\n      \"heatMap\": {\n        \"Overall Assessment\": {\n          \"testResult\": generate_heatmap_color()\n        },\n        \"Primary Metric 1\": {\n          \"testResult\": generate_heatmap_color()\n        },\n        \"Primary Metric 2\": {\n          \"testResult\": generate_heatmap_color()\n        },\n        \"Primary Metric 3\": {\n          \"testResult\": generate_heatmap_color()\n        },\n        \"Primary Metric 4\": {\n          \"testResult\": generate_heatmap_color()\n        },\n        \"Primary Metric 5\": {\n          \"testResult\": generate_heatmap_color()\n        }\n      }\n    }\n    flat_heatmap = '''\n    {\n    \"summary results\":\"this is a summary result\"\n    }  \n    '''\n    dashboard_result.update(json.loads(summary_results))\n    dashboard_result.update(primary_metrics)\n    #dashboard_result.update(json.loads(custom_cards))\n    dashboard_result.update(custom_cols)\n    dashboard_result.update(heatmap)\n    dashboard_result.update(json.loads(flat_heatmap))\n    yield dashboard_result\n\ndef extract_model_fields(execution_errors_array):\n    try:\n        return {\n            \"modelUseCategory\": DEPLOYABLE_MODEL.get(\"storedModel\", {})\n            .get(\"modelMetaData\", {})\n            .get(\"modelUseCategory\", \"\"),\n            \"modelOrganization\": DEPLOYABLE_MODEL.get(\"storedModel\", {})\n            .get(\"modelMetaData\", {})\n            .get(\"modelOrganization\", \"\"),\n            \"modelRisk\": DEPLOYABLE_MODEL.get(\"storedModel\", {})\n            .get(\"modelMetaData\", {})\n            .get(\"modelRisk\", \"\"),\n            \"modelMethodology\": MODEL_METHODOLOGY,\n        }\n    except Exception as ex:\n        error_message = (\n            f\"Something went wrong when extracting modelop default fields: {str(ex)}\"\n        )\n        execution_errors_array.append(error_message)\n        LOG.error(error_message)\n        return {}\n\n\ndef combine_model_test_results(mtrs) -> dict:\n    result = {}\n    mtrs.sort(key=lambda elem: parse(elem.get(\"createdDate\")))\n    for mtr in mtrs:\n        if mtr is not None:\n            result.update(mtr.get(\"testResults\", {}))\n    return result\n\n\ndef calculate_risk_count():\n    risk = DEPLOYABLE_MODEL.get(\"storedModel\", {}).get(\"modelMetaData\", {}).get(\"modelRisk\", \"0\")\n    try:\n        int(risk[-1])\n    except:\n        risk = \"0\"\n    t1 = 1 <= int(risk[-1]) <= 3\n    t4 = 4 <= int(risk[-1]) <= 5\n    return {\"risk_1_2_3\": 1 if t1 else 0, \"risk_4_5\": 1 if t4 else 0}\n\n\nclass ValueEntry(Dict):\n    def __init__(self, key: str, value, color: str = None):\n        super().__init__()\n        if color is not None:\n            self.update({\"key\": key, \"value\": value, \"color\": color})\n        else:\n            self.update({\"key\": key, \"value\": value})\n\n\nclass CustomCard(Dict):\n    def __init__(self, value: List[ValueEntry], name: str = \"Custom Card\"):\n        super().__init__()\n        self.update({\"name\": name, \"value\": value})\n\n\nclass preformatted(str):\n    def __init__(self, val):\n        super().__init__()\n\n\ndef generate_custom_entry(value_list,\n                          sub_column_list: Optional[List[str]] = None,\n                          color_list: Optional[List[str]] = None,\n                          name: Optional[str] = \"CustomCard\") -> CustomCard:\n    entries = []\n    for i in range(len(value_list)):\n        if type(value_list[i]) is preformatted:\n            val = value_list[i]\n        else:\n            val = parse_number(value_list[i])\n        color = None\n        if color_list is not None:\n            color = color_list[i]\n        entries.append(ValueEntry(sub_column_list[i], val, color))\n    return CustomCard(entries, name=name)\n\n\ndef calculate_custom_cards(cards: List[CustomCard]):\n    return {\"customCards\": cards}\n\n\ndef calculate_custom_columns(columns: List[CustomCard]):\n    return {\"customColumns\": columns}\n\n\ndef parse_number(value):\n    if value is None:\n        return \"N/A\"\n    return float(re.sub(r'[^\\w.]', '', str(value)))",
          "sourceCodeFilePath": "main_dashboard_model.py",
          "sourceCodeType": "MODEL",
          "initFunction": "init",
          "metricsFunction": "metrics"
        },
        {
          "assetId": "7ff87ba3-e36b-3bca-bb03-b63f82dc07f6",
          "name": "regression_ROI_monitor.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "from modelop_sdk.utils import dashboard_utils\nimport modelop_sdk.utils.logging as logger\nimport modelop.schema.infer as infer\nimport json\nimport pandas as pd\n\nLOG = logger.configure_logger()\n\n\n# modelop.init\ndef calculate_roi(comparator, job_json):\n    \"\"\"\n    A function to set model-specific global variables used in ROI computations.\n    \"\"\"\n    global label_field, baseline_field, action_field\n    global cost_multipliers\n\n    # with open(\"modelop_parameters.json\", \"r\") as parameters_file:\n    #     modelop_parameters = json.load(parameters_file)\n    # ROI_parameters = modelop_parameters[\"monitoring\"][\"business_value\"][\"ROI\"]\n    # logger.info(\"ROI parameters: %s\", ROI_parameters)\n\n    # JOB = json.loads(init_param[\"rawJson\"])\n    # DEPLOYABLE_MODEL = JOB.get('referenceModel')\n    # try:\n    #     INPUT_SCHEMA = infer.extract_input_schema(init_param)\n    # except Exception as e:\n    #     LOG.error(f\"Error while extracting input_schema - {str(e)}\")\n    #     INPUT_SCHEMA = None\n\n    dashboard_utils.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    ## Creating a copy because the current actual_roi implementation modifies the comparatator df\n    comparator_copy = comparator.copy()\n\n    try:\n        job = json.loads(job_json[\"rawJson\"])\n        deployable_model = job.get(\"referenceModel\", None)\n    except Exception as ex:\n        error_message = \"referenceModel parameter not found on job_json\"\n        LOG.error(error_message)\n        raise KeyError(error_message)\n\n    if deployable_model is None or len(deployable_model) == 0:\n        raise ValueError(\"deployed_model is None or empty\")\n\n    try:\n        input_schema = infer.extract_input_schema(job_json)\n    except Exception as ex:\n        LOG.error(f\"Error while extracting input_schema - {str(ex)}\")\n        input_schema = None\n\n    if input_schema is None or len(input_schema) == 0:\n        raise ValueError(\"input_schema is None or empty\")\n\n    try:\n        ROI_parameters = deployable_model[\"storedModel\"][\"modelMetaData\"][\"roi\"]\n        LOG.info(\"ROI paramaters: %s\", ROI_parameters)\n    except Exception as e:\n        error_message = \"required deployableModel.storedModel.modelMetadata.roi parameters not found, missing parameters.\"\n        LOG.error(error_message)\n        raise KeyError(error_message)\n\n    try:\n        fields = get_fields(input_schema)\n        LOG.info(f\"Fields for regression ROI: %s\", fields)\n    except Exception as e:\n        raise KeyError(\n            f\"Error while extracting fields from input_extended_schema: {str(e)}\"\n        )\n\n    label_field = fields[\"label_field\"]\n    baseline_field = fields[\"baseline_field\"]\n    action_field = fields[\"action_field\"]\n\n    LOG.info(\"--------Field readout----------\")\n    LOG.info(label_field)\n    LOG.info(baseline_field)\n    LOG.info(action_field)\n    LOG.info(\"--------Field readout----------\")\n    # ROI cost multipliers for cases that are determined in function\n    cost_multipliers = {\n        \"TP\": ROI_parameters[\"costMultipliersTP\"],\n        \"FP\": ROI_parameters[\"costMultipliersFP\"],\n        \"TN\": ROI_parameters[\"costMultipliersTN\"],\n        \"FN\": ROI_parameters[\"costMultipliersFN\"]\n    }\n\n# # modelop.metrics\n# def metrics(data) -> dict:\n#     \"\"\"\n#     A Function to classify records & compute actual ROI given a labeled & scored DataFrame.\n\n#     Args:\n#         dataframe (pd.DataFrame): Slice of Production data\n\n#     Yields:\n#         dict: Test Result containing actual roi metrics\n#     \"\"\"\n\n    # Classify each record in dataframe\n    for idx in range(len(comparator_copy)):\n        amount = comparator_copy.iloc[idx][label_field] - comparator_copy.iloc[idx][baseline_field]\n        if comparator_copy.iloc[idx][action_field]:\n            comparator_copy[\"record_class\"] = (\n                \"TP\" if amount > 0 else \"TN\"\n            )\n        else:\n            comparator_copy[\"record_class\"] = (\n                \"FN\" if amount < 0 else \"FN\"\n            )\n\n\n    # Compute actual ROI\n    actual_roi = compute_actual_roi(comparator_copy)\n    LOG.info(f\"compute_actual_roi: {actual_roi}\")\n    return actual_roi\n\n\ndef compute_actual_roi(data) -> float:\n    \"\"\"\n    Helper function to compute actual ROI.\n\n    Args:\n        data (pd.DataFrame): Input DataFrame containing record_class\n\n    Returns:\n        float: actual ROI\n    \"\"\"\n\n    actual_roi = 0\n    for idx in range(len(data)):\n        amount = data.iloc[idx][label_field] - data.iloc[idx][baseline_field]\n        actual_roi += (\n            amount * cost_multipliers[data.iloc[idx][\"record_class\"]]\n        )\n\n    return round(actual_roi, 2)\n\n\ndef get_fields(input_schema: dict = None) -> dict:\n    \"\"\"\n     Method that extracts the names of the fields with 'role': 'label', 'actionTaken': true, 'baselineValue': true\n     method throws exception if the number of `positiveClassLabel` fields != 1\n\n        input:\n            input_schema : dict - external input_schema\n        output:\n            dict: dictionary of field names \n        exceptions thrown:\n            - If none fields were defined then it raises ValueException.\n            - If more than one field were marked, then it raises ValueException.\n\n    \"\"\"\n    if input_schema is None or not input_schema:\n        raise ValueError(\"input_schema is None or empty\")\n\n    if input_schema.get(\"fields\") is None:\n        raise KeyError(\"fields field not found at the input extended_schema\")\n\n    fields_array = input_schema[\"fields\"]\n\n    if not isinstance(fields_array, list):\n        raise ValueError(f\"fields_array is not an instance of an array, instead {type(fields_array)}\")\n\n    fields_array = input_schema[\"fields\"]\n    label_field = any\n    action_field = any\n    baseline_field = any\n\n    for field in fields_array:\n        if field.get(\"role\") is not None and field.get(\"role\") == \"label\":\n            if label_field is not any:\n                raise ValueError(\n                    f\"Error: More than one fields marked as label_field found, only one is allowed.\"\n                )\n            label_field = field.get(\"name\")\n        elif field.get(\"actionTaken\") is not None and field.get(\"actionTaken\") == True:\n            if action_field is not any:\n                raise ValueError(\n                    f\"Error: More than one fields marked as action_field found, only one is allowed.\"\n                )\n            action_field = field.get(\"name\")\n        elif field.get(\"baselineValue\") is not None and field.get(\"baselineValue\") == True:\n            if baseline_field is not any:\n                raise ValueError(\n                        f\"Error: More than one fields marked as baseline_field found, only one is allowed.\"\n                    )\n            baseline_field = field.get(\"name\")\n\n    if label_field is any or baseline_field is any or action_field is any:\n        message = ''\n        if label_field is any:\n            message += 'One field must be marked as role label in the schema, but none was found. '\n        if baseline_field is any:\n            message += 'One field must be marked with the attribute actionTaken in the schema, but none was found. '\n        if action_field is any:\n            message += 'One field must be marked with the attribute baselineValue in the schema, but none was found. '\n        raise ValueError(f\"Error: {str(message)}\")\n\n    return {\n        \"label_field\": label_field, # Column containing ground_truth\n        \"baseline_field\": baseline_field, # Column containing baseline predictions\n        \"action_field\": action_field  # Column containing action field, ie. buy vs no buy\n    }\n",
          "sourceCodeFilePath": "regression_ROI_monitor.py",
          "sourceCodeType": "MODEL",
          "initFunction": "calculate_roi"
        },
        {
          "assetId": "346d5453-50ba-348e-828d-0afba94c1fb3",
          "name": "performance_monitor.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "from modelop.ootb_monitors.performance_classification import performance_classification\nfrom modelop_sdk.utils import dashboard_utils as dashboard_utils\n\n\ndef calculate_performance(comparator, init_param) -> dict:\n    \"\"\"\n    Source - https://github.com/modelop/moc_monitors/tree/main/src/modelop/ootb_monitors/performance_classification\n    Monitor result\n    {\n      \"test_name\": \"Classification Metrics\",\n      \"test_category\": \"performance\",\n      \"test_type\": \"classification_metrics\",\n      \"test_id\": \"performance_classification_metrics\",\n      \"values\": {\n        \"accuracy\": 0.665,\n        \"precision\": 0.4516,\n        \"recall\": 0.7241,\n        \"f1_score\": 0.5563,\n        \"auc\": 0.6825,  <--- value used for evaluation\n        \"confusion_matrix\": [\n          {\n            \"0\": 0.455,\n            \"1\": 0.255\n          },\n          {\n            \"0\": 0.08,\n            \"1\": 0.21\n          }\n        ]\n      }\n    }\n\n    Evaluation Metrics (Source:https://modelop.atlassian.net/wiki/spaces/~355140182/pages/2286944283/Dashboard+3.0+monitors):\n        <auc>\n    ---- Heatmap criteria\n        <auc> > 0.7 → GREEN\n        0.6 < <auc> < 0.7 → YELLOW\n        <auc> < 0.6 → RED\n        <auc> IS NULL or test fails → GRAY\n    \"\"\"\n\n    dashboard_utils.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n    performance_classification.init(init_param)\n    monitor_results = performance_classification.metrics(comparator)\n\n    for result in monitor_results:\n        performance_results = result\n\n    # Generating one output for evaluation\n    raw_values_for_evaluation = {\"statistical_performance_val\": performance_results[\"auc\"]}\n    performance_results.update(raw_values_for_evaluation)\n    return raw_values_for_evaluation\n",
          "sourceCodeFilePath": "performance_monitor.py",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "f294f9b6-6f31-3602-af38-ec878bdc6df1",
          "name": "test_main_dashboard.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "import unittest\n\n\nclass MainDashboardTests(unittest.TestCase):\n    def test_placeholder(self):\n        assert True\n\n    # def test_main_test(self):\n    #     baseline_scored = pd.read_json('./sampleData/df_baseline_scored.json', lines=True)\n    #     comparator_scored = pd.read_json('./sampleData/df_sample_scored.json', lines=True)\n    #\n    #     # Updated job, because input schema was all in UPPER CAPS\n    #     # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_updated.json', 'r').read()\n    #     # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json', 'r').read()\n    #     jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields_no_def.json', 'r').read()\n    #     # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json', 'r').read()\n    #     # jobAsString = open('sampleData/jsonJobGermanCredit_withInputSchema_error.json', 'r').read()\n    #     json_job_dict = {\"rawJson\": jobAsString}\n    #\n    #     main_dashboard_model.init(json_job_dict)\n    #     metrics_result = main_dashboard_model.metrics(baseline_scored, comparator_scored)\n    #     # metrics_result = metrics(baseline=None, comparator=None)\n    #     for result in metrics_result:\n    #         try:\n    #             jsonObj = json.loads(\n    #                 str(result).replace(\"'\", \"\\\"\").replace(\"False\", \"false\").replace(\"True\", \"true\").replace(\"None\",\n    #                                                                                                          \"null\"))\n    #             print(json.dumps(jsonObj, indent=2))\n    #         except Exception as ex:\n    #             print(str(ex))\n    #             print(str(result).replace(\"'\", \"\\\"\"))\n\n    #\n    # def test_main_additiona_extended_schema_fields_test(self):\n    #     baseline_scored = pd.read_json('./sampleData/df_baseline_scored.json', lines=True)\n    #     comparator_scored = pd.read_json('./sampleData/df_sample_scored.json', lines=True)\n    #\n    #     # Updated job, because input schema was all in UPPER CAPS\n    #     jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json', 'r').read()\n    #     # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json', 'r').read()\n    #     # jobAsString = open('sampleData/jsonJobGermanCredit_withInputSchema_error.json', 'r').read()\n    #     json_job_dict = {\"rawJson\": jobAsString}\n    #\n    #     main_dashboard_model.init(json_job_dict)\n    #     metrics_result = main_dashboard_model.metrics(baseline_scored, comparator_scored)\n    #     # metrics_result = metrics(baseline=None, comparator=None)\n    #     for result in metrics_result:\n    #         try:\n    #             jsonObj = json.loads(str(result).replace(\"'\", \"\\\"\").replace(\"False\", \"false\").replace(\"True\", \"true\"))\n    #             print(json.dumps(jsonObj, indent=2))\n    #         except Exception as ex:\n    #             print(str(ex))\n    #             print(str(result).replace(\"'\", \"\\\"\"))\n\n    #\n    # def test_no_input_schema(self):\n    #     baseline_scored = pd.read_json('./sampleData/df_baseline_scored.json', lines=True)\n    #     comparator_scored = pd.read_json('./sampleData/df_sample_scored.json', lines=True)\n    #\n    #     # Updated job, because input schema was all in UPPER CAPS\n    #     jobAsString = open('./sampleData/jsonJobGermanCredit_without_input_schema_error.json', 'r').read()\n    #     # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json', 'r').read()\n    #     # jobAsString = open('sampleData/jsonJobGermanCredit_withInputSchema_error.json', 'r').read()\n    #     json_job_dict = {\"rawJson\": jobAsString}\n    #\n    #     main_dashboard_model.init(json_job_dict)\n    #     metrics_result = main_dashboard_model.metrics(baseline_scored, comparator_scored)\n    #     # metrics_result = metrics(baseline=None, comparator=None)\n    #     for result in metrics_result:\n    #         try:\n    #             jsonObj = json.loads(str(result).replace(\"'\", \"\\\"\").replace(\"False\", \"false\").replace(\"True\", \"true\"))\n    #             print(json.dumps(jsonObj, indent=2))\n    #         except Exception as ex:\n    #             print(str(ex))\n    #             print(str(result).replace(\"'\", \"\\\"\"))\n\n\n# if __name__ == \"__main__\":\n#     input_schema_example = {\n#         \"name\": \"input_schema.avsc\",\n#         \"type\": \"record\",\n#         \"fields\": [\n#             {\n#                 \"name\": \"id\",\n#                 \"type\": \"int\",\n#                 \"dataClass\": \"numerical\",\n#                 \"role\": \"identifier\",\n#                 \"protectedClass\": False,\n#                 \"driftCandidate\": False,\n#                 \"specialValues\": [],\n#                 \"scoringOptional\": False\n#             },\n#             {\n#                 \"name\": \"credit_amount\",\n#                 \"type\": \"float\",\n#                 \"dataClass\": \"numerical\",\n#                 \"role\": \"predictor\",\n#                 \"protectedClass\": False,\n#                 \"driftCandidate\": True,\n#                 \"specialValues\": [],\n#                 \"scoringOptional\": False,\n#                 \"isAmountField\": True\n#             },\n#             {\n#                 \"name\": \"label_value\",\n#                 \"type\": \"int\",\n#                 \"dataClass\": \"categorical\",\n#                 \"role\": \"label\",\n#                 \"protectedClass\": False,\n#                 \"driftCandidate\": True,\n#                 \"specialValues\": [],\n#                 \"scoringOptional\": True,\n#                 \"positiveClassLabel\": 1\n#             },\n#             {\n#                 \"name\": \"score\",\n#                 \"type\": \"int\",\n#                 \"dataClass\": \"categorical\",\n#                 \"role\": \"label\",\n#                 \"protectedClass\": False,\n#                 \"driftCandidate\": True,\n#                 \"specialValues\": [],\n#                 \"scoringOptional\": True\n#             }\n#         ]\n#     }\n#\n#     input_schema_example_with_error = {\n#         \"name\": \"input_schema.avsc\",\n#         \"type\": \"record\",\n#         \"fields\": {\"foo\": \"bar\"}\n#     }\n#     input_schema_example_without_field = {\n#         \"name\": \"input_schema.avsc\",\n#         \"type\": \"record\"\n#     }\n#     credit_amount = get_credit_amount_field_name(input_schema_example)\n#     print(f\"Credit_amount_found {credit_amount}\")\n#     # credit_amount = get_credit_amount_field_name(input_schema_example_without_field)\n#\n#     positive_class_field = get_positive_class_label(input_schema_example)\n#     print(f\" positive_class_field {positive_class_field}\")\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n",
          "sourceCodeFilePath": "test_main_dashboard.py",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "ac7ebd2b-8864-30b3-b982-fc44d9768324",
          "name": "dashboard_model.dmn",
          "assetType": "SOURCE_CODE",
          "assetRole": "DASHBOARD_RESULT_COMPARATOR",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" xmlns:biodi=\"http://bpmn.io/schema/dmn/biodi/2.0\" xmlns:camunda=\"http://camunda.org/schema/1.0/dmn\" id=\"Definitions_0bxelj4\" name=\"DRD\" namespace=\"http://camunda.org/schema/1.0/dmn\" exporter=\"Camunda Modeler\" exporterVersion=\"5.3.0\">\n  <decision id=\"Decision_02utv17\" name=\"dashboard_model_demo\">\n    <decisionTable id=\"DecisionTable_0yjalvc\" hitPolicy=\"COLLECT\">\n      <input id=\"Input_1\" label=\"CSI_maxCSIValue\" biodi:width=\"340\" camunda:inputVariable=\"CSI_maxCSIValue\">\n        <inputExpression id=\"InputExpression_1\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1q3su5i\" label=\"f1_score\">\n        <inputExpression id=\"LiteralExpression_10l3nt5\" typeRef=\"string\">\n          <text>modelMethodology</text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1nwwpnz\" label=\"r2_score\">\n        <inputExpression id=\"LiteralExpression_0xvs30c\" typeRef=\"string\">\n          <text>modelMethodology</text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_0wpn5rv\" label=\"Bias_maxPPRDisparityValue\" biodi:width=\"368\" camunda:inputVariable=\"Bias_maxPPRDisparityValue\">\n        <inputExpression id=\"LiteralExpression_0pb81pe\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1dacs67\" label=\"Bias_minPPRDisparityValue\" biodi:width=\"389\" camunda:inputVariable=\"Bias_minPPRDisparityValue\">\n        <inputExpression id=\"LiteralExpression_0z9ot5d\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_0iv8e1h\" label=\"DataDrift_maxKolmogorov-SmirnovPValue\" camunda:inputVariable=\"DataDrift_maxKolmogorov-SmirnovPValue\">\n        <inputExpression id=\"LiteralExpression_1dslyhs\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_199qxyr\" label=\"ConceptDrift_maxKolmogorov-SmirnovPValueValue\" biodi:width=\"398\" camunda:inputVariable=\"ConceptDrift_maxKolmogorov-SmirnovPValueValue\">\n        <inputExpression id=\"LiteralExpression_0lzy7lw\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id=\"Output_1\" label=\"monitor_name\" name=\"monitor_name\" typeRef=\"string\" />\n      <output id=\"OutputClause_0vfqo80\" label=\"color\" name=\"color\" typeRef=\"string\">\n        <outputValues id=\"UnaryTests_1yx2fn3\">\n          <text>\"Gray\",\"Green\",\"Yellow\",\"Red\"</text>\n        </outputValues>\n      </output>\n      <rule id=\"DecisionRule_11vsejr\">\n        <inputEntry id=\"UnaryTests_0qcg9a0\">\n          <text>-99</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1dxwrxk\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0djhb7t\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0y2ly43\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1uzlwlb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0tiyjdn\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0uwpron\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_08ugghi\">\n          <text>\"Characteristic Stability\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1nu3d11\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1jkyop0\">\n        <inputEntry id=\"UnaryTests_1jvrf16\">\n          <text>&gt; 0.2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_00znlsw\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0d4nwxk\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0hhs6b1\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1fixvqf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1smddv9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_024h460\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0ykjcej\">\n          <text>\"Characteristic Stability\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1tz97js\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0xw926m\">\n        <inputEntry id=\"UnaryTests_1swjqhz\">\n          <text>[0.1..0.2]</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_07pmxoe\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0h4sg66\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1gftcxe\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0h17xki\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_14d7x05\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1e3kf5r\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1utcpgl\">\n          <text>\"Characteristic Stability\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1uhnl0t\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0y8t1sz\">\n        <inputEntry id=\"UnaryTests_1xi59wc\">\n          <text>[0..0.1[</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0d9pboj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ofxb3x\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1vho0ph\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0yc82cx\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_07u8pae\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1yztfoj\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1ygoxfj\">\n          <text>\"Characteristic Stability\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0cjk2rn\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0wynp12\">\n        <inputEntry id=\"UnaryTests_1rqrt09\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0tzmewz\" expressionLanguage=\"groovy\">\n          <text>modelMethodology.equalsIgnoreCase(\"classification\") &amp;&amp; f1_score ==-99</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1rrldzb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1lg4x7e\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1n20xf2\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_17tfarm\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1uzlkkl\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0o8tbuh\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0s6i2gl\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_10vrxl6\">\n        <inputEntry id=\"UnaryTests_04px0ey\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0nvbvoa\" expressionLanguage=\"groovy\">\n          <text>modelMethodology.equalsIgnoreCase(\"classification\") &amp;&amp; f1_score &lt;= 0.6</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0jfamg0\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1jds0kz\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1r1n49e\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_13ralmm\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0oy17o2\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1xecrzk\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0vx1a5p\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0um6qv0\">\n        <inputEntry id=\"UnaryTests_1ghxgeb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_18tqy6y\" expressionLanguage=\"groovy\">\n          <text>modelMethodology.equalsIgnoreCase(\"classification\")&amp;&amp; f1_score &gt; 0.6 &amp;&amp; f1_score &lt; 0.7</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ezdlg8\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ej5eag\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0b5iro4\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1m2qigq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0yl3s19\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_14ajjy0\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_068x0k7\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_19xn0zs\">\n        <inputEntry id=\"UnaryTests_0280vv3\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_013qhqz\" expressionLanguage=\"groovy\">\n          <text>modelMethodology.equalsIgnoreCase(\"classification\") &amp;&amp; f1_score &gt;=0.7</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1f184pw\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_18bdcwj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0xr8qrb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1s9qsve\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1v9y403\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_03uqir3\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0bdsds2\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_17xlgy5\">\n        <inputEntry id=\"UnaryTests_19lujor\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1siggq9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0f4ocmy\" expressionLanguage=\"groovy\">\n          <text>modelMethodology.equalsIgnoreCase(\"regression\") &amp;&amp;r2_score==99</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_14kx60s\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_10wl51w\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0dume2w\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1nzhujj\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_19wqnmu\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_17p08ws\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1ls13b7\">\n        <inputEntry id=\"UnaryTests_0i4w09i\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1npgup9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ct2ujv\" expressionLanguage=\"groovy\">\n          <text>modelMethodology.equalsIgnoreCase(\"regression\") &amp;&amp;r2_score&lt;= 0.6</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0e7prg4\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1t4gnpy\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_19y508y\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0t8olv8\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0ztycx6\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1m4osm2\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0s3ls71\">\n        <inputEntry id=\"UnaryTests_0ijrkt5\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0xid4jn\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_161hod3\" expressionLanguage=\"groovy\">\n          <text>modelMethodology.equalsIgnoreCase(\"regression\") &amp;&amp;r2_score&gt;0.6 &amp;&amp; r2_score&lt; 0.7</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_09srnx3\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0acvczk\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0z46ily\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1su7y32\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1cdzgg7\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1prcswg\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_10uysqm\">\n        <inputEntry id=\"UnaryTests_137xa3m\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1t5380g\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1fmmu71\" expressionLanguage=\"groovy\">\n          <text>modelMethodology.equalsIgnoreCase(\"regression\") &amp;&amp; r2_score &gt;=0.7</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0k3yyhq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_14a97rf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1jm2vvy\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_04vczj5\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_041gg7y\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1dhbkeq\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0ehyz8b\">\n        <inputEntry id=\"UnaryTests_0nbpa63\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ucle33\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1x3s23f\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1mmnp1q\">\n          <text>&gt; 1.2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0l5m63b\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0z5ged6\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_08jeo62\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1cklqvk\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_152opby\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1f15dp8\">\n        <inputEntry id=\"UnaryTests_05e8ts3\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ipxx3e\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0o9dnwz\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1dehbnh\">\n          <text>&gt;= 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0m3mleq\">\n          <text>&lt; 0.8</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0mb3vtg\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0dj5ydu\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0mcd0gz\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0zmbjwd\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0th0gsq\">\n        <inputEntry id=\"UnaryTests_1848wbr\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_18c6xi6\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1r1unaq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1htzgp1\">\n          <text>&lt;= 1.2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_099o08o\">\n          <text>&gt;= 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0k3fb74\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1oxgy0s\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1w9pem5\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0b137v2\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0bkkqqg\">\n        <inputEntry id=\"UnaryTests_1c48kxo\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_12waidt\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_04ffitw\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1qzowau\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1yax6wc\">\n          <text>&gt;= 0.8</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ic2s52\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1fnwh8i\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_187nwu4\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_18y8vbs\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1gbboyq\">\n        <inputEntry id=\"UnaryTests_0k25jlx\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0qftdep\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0u5l4vc\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0k7t36n\">\n          <text>-99</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_028d40j\">\n          <text>-99</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ff6mew\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_14zcmw4\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_02f19u4\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1flj3mt\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0vts9ei\">\n        <inputEntry id=\"UnaryTests_1ssg5up\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1sfimtl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_04lloo6\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0eg2nr1\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1gt0h8o\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0y6jhgl\">\n          <text>-99</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0y5c0sb\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1udukqr\">\n          <text>\"Data Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1d5oqea\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0kvafgc\">\n        <inputEntry id=\"UnaryTests_0g6zrwi\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_15lhlsf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0uepny5\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_19kpu0z\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_09antdr\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_08cniwr\">\n          <text>&lt;0.05</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1gg92lj\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0xigkom\">\n          <text>\"Data Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1hyus77\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1c3xwwg\">\n        <inputEntry id=\"UnaryTests_1arbpxg\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0rugj67\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_18hqv57\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0fan13p\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1apn2vp\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0qsjymr\">\n          <text>]0.1..1]</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0y4fprk\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0qakz3u\">\n          <text>\"Data Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0od8u5e\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1oie9g2\">\n        <inputEntry id=\"UnaryTests_1x8nn79\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_16pulaj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1melbgq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1c9q0nf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ajy1kd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_03hndpv\">\n          <text>[0.05..0.1]</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_065yaq8\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0xmueus\">\n          <text>\"Data Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_19vkc2u\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1fwsumx\">\n        <inputEntry id=\"UnaryTests_1yhcdyn\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1lnbxo5\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1kozsm9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0q1agzs\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0frdgqs\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0l6r9fd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0u1k8s8\">\n          <text>-99</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0zz3p0p\">\n          <text>\"Concept Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_186pu1t\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1yx6glj\">\n        <inputEntry id=\"UnaryTests_1dgr0sm\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_11obcuq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0vd232g\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0l6y55t\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_09s5x8k\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1rtas7h\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ez7amt\">\n          <text>&lt;0.05</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_18aubzc\">\n          <text>\"Concept Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_14054rh\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1qa59v7\">\n        <inputEntry id=\"UnaryTests_0io5u0y\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0bxlhtl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0urfaao\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0f6a9wl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_00ca40z\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1j3li7q\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_161rpfj\">\n          <text>]0.1..1]</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1jf9wn8\">\n          <text>\"Concept Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_006kuo4\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1fq38f9\">\n        <inputEntry id=\"UnaryTests_1e8p5iq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1f7990k\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0xnt451\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1j9ny9k\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_03zq1ra\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_06jlruy\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1rnxnbg\">\n          <text>[0.05..0.1]</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_05ltcgn\">\n          <text>\"Concept Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1n7uu1u\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n    </decisionTable>\n  </decision>\n  <dmndi:DMNDI>\n    <dmndi:DMNDiagram>\n      <dmndi:DMNShape dmnElementRef=\"Decision_02utv17\">\n        <dc:Bounds height=\"80\" width=\"180\" x=\"160\" y=\"100\" />\n      </dmndi:DMNShape>\n    </dmndi:DMNDiagram>\n  </dmndi:DMNDI>\n</definitions>\n",
          "sourceCodeFilePath": "dashboard_model.dmn",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "d12f4567-ba5d-3d28-990e-7835af5f71db",
          "name": "performance_monitor_regression.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "from modelop.ootb_monitors.performance_regression import performance_regression\nfrom modelop_sdk.utils import dashboard_utils as dashboard_utils\n\n\ndef calculate_performance(comparator, init_param) -> dict:\n    \"\"\"\n    Source - https://github.com/modelop/moc_monitors/blob/main/src/modelop/ootb_monitors/performance_regression/performance_regression.py\n    Monitor result\n    {\n        \"mae\": <mae>,\n        \"rmse\": <rmse>,\n        \"r2_score\": <r2_score>,\n        \"performance\": [\n            {\n                \"test_category\": \"performance\",\n                \"test_name\": \"Regression Metrics\",\n                \"test_type\": \"regression_metrics\",\n                \"test_id\": \"performance_regression_metrics\",\n                \"values\": {\n                    \"mae\": <mae>,\n                    \"rmse\": <rmse>,\n                    \"r2_score\": <r2_score>\n                }\n            }\n        ]\n    }\n\n    \"\"\"\n\n    dashboard_utils.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n    performance_regression.init(init_param)\n    monitor_results = performance_regression.metrics(comparator)\n\n    for result in monitor_results:\n        performance_results = result\n\n    # Generating one output for evaluation\n    raw_values_for_evaluation = {\"statistical_performance_val\": performance_results[\"r2_score\"]}\n    performance_results.update(raw_values_for_evaluation)\n    return raw_values_for_evaluation",
          "sourceCodeFilePath": "performance_monitor_regression.py",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "6325d726-e979-3536-8b18-ab68fc6da9a7",
          "name": "NewRelicDashboardMonitor.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "from gql import gql, Client\nfrom gql.transport.aiohttp import AIOHTTPTransport\nimport asyncio\n\nasync def get_new_relic_response_time(apiKey, entityGuid)->dict:\n\t# Select your transport with a defined url endpoint\n\ttransport = AIOHTTPTransport(url=\"https://api.newrelic.com/graphql\",                          headers={'API-Key': apiKey})\n\t# Create a GraphQL client using the defined transport\n\tasync with Client(transport=transport, fetch_schema_from_transport=True) as client:\n\t\t# Provide a GraphQL query\n\t\tquery = gql(\n\t\t\t\"\"\"\n\t\t\t{{\n\t\t\t  actor {{\n\t\t\t\tentity(guid: \"{entityGuid}\") {{\n\t\t\t\t  nrdbQuery(nrql: \"SELECT  percentile(duration, 95) * 1000 as response_duration from Transaction where transactionType = 'Web' and transactionSubType = 'SpringController' SINCE 15 minutes AGO\") {{\n\t\t\t\tresults\n\t\t\t  }}\n\t\t\t}}\n\t\t  }}\n\t\t}}\n\t\t\"\"\".format(entityGuid = entityGuid)\n\t\t)\n\t\tnew_relic_result = await client.execute(query)\n\n\treturn {\"Service Response Time\": new_relic_result.get(\"actor\", {}).get(\"entity\", {}).get(\"nrdbQuery\", {}).get(\"results\", [])[0].get(\"response_duration\", 0)}\n",
          "sourceCodeFilePath": "NewRelicDashboardMonitor.py",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "a5d2b025-cb72-31dd-b7c9-d7b07c68a862",
          "name": "marketing_roi_monitor.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "primaryModelSource": false,
          "sourceCode": "import random\n\nimport modelop_sdk.utils.logging as logger\nfrom modelop_sdk.utils import dashboard_utils as dashboard_utils\n\nLOG = logger.configure_logger()\n\n\ndef calculate_mkt_roi(comparator, deployable_model, input_schema) -> float:\n    \"\"\"\n    Method that simulates a ROI custom calculation for models with MODEL_USE_CATEGORY == 'MARKETING'.\n    This monitor should first validate that all required inputs exists are not None and not empty.\n    If no issues with the input were found, monitor should proceed with ROI calculation.\n\n    For this Dummy model, the ROI calculation is going to be performed by calculating a random float value between\n    500 K and 1 MM.\n    \"\"\"\n\n    # Step 1 - validating input comparator Dataframe is not None nor empty\n    dashboard_utils.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    # Step 2 -validating input deployable_model is not None or empty\n    if deployable_model is None or len(deployable_model) == 0:\n        raise ValueError(\"deployed_model is None or empty\")\n\n    # Step 2 -validating input input_schema is not None or empty\n    if input_schema is None or len(input_schema) == 0:\n        raise ValueError(\"input_schema is None or empty\")\n\n    # Step 3 - Monitor performs dummy calculation, by default rounds result to max. 2 decimals\n    return round(random.uniform(500000, 1000000), 2)\n",
          "sourceCodeFilePath": "marketing_roi_monitor.py",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "222bd89b-0ceb-4524-b70b-3cd15324ebdb",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/222bd89b-0ceb-4524-b70b-3cd15324ebdb.bak",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "UNKNOWN",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "43da43c21884d8cd0511b2cfef8aeecc4d57891f6f31667fafae58cd8fb9a05b"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/222bd89b-0ceb-4524-b70b-3cd15324ebdb.bak",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/222bd89b-0ceb-4524-b70b-3cd15324ebdb.bak",
          "filename": "dashboard_model.dmn.bak",
          "fileFormat": "UNKNOWN",
          "fileSize": 58076,
          "createdDate": "2023-12-20T05:17:10.804Z"
        },
        {
          "assetId": "03745179-5622-4762-babd-89c6d76c9577",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/03745179-5622-4762-babd-89c6d76c9577.ipynb",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "UNKNOWN",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "af1cf6a1ea497a37d7e7f9c8376265810cf8181196214e94a0eda8e3a46adfb0"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/03745179-5622-4762-babd-89c6d76c9577.ipynb",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/03745179-5622-4762-babd-89c6d76c9577.ipynb",
          "filename": "dashboard_design.ipynb",
          "fileFormat": "UNKNOWN",
          "fileSize": 43687,
          "createdDate": "2023-12-20T05:17:10.922Z"
        },
        {
          "assetId": "1a55a960-7470-48cf-8686-158d2d7a401e",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/1a55a960-7470-48cf-8686-158d2d7a401e.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "BASELINE_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "534bd755760f29145b37462b6b2821709818b56b7c717755c21c2a1003763117"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/1a55a960-7470-48cf-8686-158d2d7a401e.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/1a55a960-7470-48cf-8686-158d2d7a401e.json",
          "filename": "sampleData/df_baseline.json",
          "fileFormat": "JSON",
          "fileSize": 374615,
          "createdDate": "2023-12-20T05:17:11.086Z"
        },
        {
          "assetId": "f9bfa0df-6cc9-4efa-b850-74fa4eac7a89",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/f9bfa0df-6cc9-4efa-b850-74fa4eac7a89.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "a23c4f05ebb0323d48bae8bfdf5bdaacd6509b826fef600b56485c5799b42645"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/f9bfa0df-6cc9-4efa-b850-74fa4eac7a89.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/f9bfa0df-6cc9-4efa-b850-74fa4eac7a89.json",
          "filename": "sampleData/jsonJobGermanCredit_without_input_schema_error.json",
          "fileFormat": "JSON",
          "fileSize": 265677,
          "createdDate": "2023-12-20T05:17:11.277Z"
        },
        {
          "assetId": "a18a4934-a318-43ed-b83b-82526a9cf0c4",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/a18a4934-a318-43ed-b83b-82526a9cf0c4.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "b7ea5a67e06f567e23baf47163ff086bc50d16a5c662bf3c054ea7b664cbd7ae"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a18a4934-a318-43ed-b83b-82526a9cf0c4.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/a18a4934-a318-43ed-b83b-82526a9cf0c4.json",
          "filename": "sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json",
          "fileFormat": "JSON",
          "fileSize": 187110,
          "createdDate": "2023-12-20T05:17:11.457Z"
        },
        {
          "assetId": "b4a57998-a3b2-4162-ba08-e778243aa531",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/b4a57998-a3b2-4162-ba08-e778243aa531.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "39235b3614b434559d297098fa65c738de11cf5004914d9a37feade07384c897"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/b4a57998-a3b2-4162-ba08-e778243aa531.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/b4a57998-a3b2-4162-ba08-e778243aa531.json",
          "filename": "sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json",
          "fileFormat": "JSON",
          "fileSize": 421821,
          "createdDate": "2023-12-20T05:17:11.627Z"
        },
        {
          "assetId": "a832daba-c7a1-4686-b16e-b2f1b2312f41",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/a832daba-c7a1-4686-b16e-b2f1b2312f41.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "1ec29416bac60327d830f48e1babe1dc967ecc8adf99c3d190c5fc3abdc69170"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a832daba-c7a1-4686-b16e-b2f1b2312f41.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/a832daba-c7a1-4686-b16e-b2f1b2312f41.json",
          "filename": "sampleData/jsonJobWithInputSchema_germanCredit_updated.json",
          "fileFormat": "JSON",
          "fileSize": 200060,
          "createdDate": "2023-12-20T05:17:11.767Z"
        },
        {
          "assetId": "fc895c67-3c3d-42e2-88ad-87506bdcce13",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/fc895c67-3c3d-42e2-88ad-87506bdcce13.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "34043ce564c660dc45db9ea1040c7416a9a7cf18897ed838e0f8e273f4101cf7"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/fc895c67-3c3d-42e2-88ad-87506bdcce13.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/fc895c67-3c3d-42e2-88ad-87506bdcce13.json",
          "filename": "sampleData/jsonJobGermanCredit_withInputSchema_error.json",
          "fileFormat": "JSON",
          "fileSize": 271713,
          "createdDate": "2023-12-20T05:17:11.869Z"
        },
        {
          "assetId": "b5e9e5f5-56df-4216-b59b-fb5e2eda1098",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/b5e9e5f5-56df-4216-b59b-fb5e2eda1098.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "d23455d2f14209d8d72ce82a9ada7b9e6a8f2cdb2de075ef53f03c14ccb335c7"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/b5e9e5f5-56df-4216-b59b-fb5e2eda1098.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/b5e9e5f5-56df-4216-b59b-fb5e2eda1098.json",
          "filename": "sampleData/df_sample_scored.json",
          "fileFormat": "JSON",
          "fileSize": 95686,
          "createdDate": "2023-12-20T05:17:12.004Z"
        },
        {
          "assetId": "38e61a75-df2a-408d-8d56-a87a5b90b234",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/38e61a75-df2a-408d-8d56-a87a5b90b234.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "266d2c21e41960e18f67fd010cf42c0eb3a1c0c68c21f36267d60f3e91c9339a"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/38e61a75-df2a-408d-8d56-a87a5b90b234.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/38e61a75-df2a-408d-8d56-a87a5b90b234.json",
          "filename": "sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields_no_def.json",
          "fileFormat": "JSON",
          "fileSize": 421581,
          "createdDate": "2023-12-20T05:17:12.227Z"
        },
        {
          "assetId": "a0df6c7b-5b0f-47f1-b3b8-7cb6c7605811",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/a0df6c7b-5b0f-47f1-b3b8-7cb6c7605811.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "b93be8413e3590dc096a43a8ebce9dfbef1f7629b6705cdcb4ff258beb92bb0e"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/a0df6c7b-5b0f-47f1-b3b8-7cb6c7605811.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/a0df6c7b-5b0f-47f1-b3b8-7cb6c7605811.json",
          "filename": "sampleData/df_sample.json",
          "fileFormat": "JSON",
          "fileSize": 93686,
          "createdDate": "2023-12-20T05:17:12.358Z"
        },
        {
          "assetId": "f47358da-11a0-4128-9bd2-15572c213e1d",
          "name": "26481449-0282-4c3d-b981-66467887eeb5/f47358da-11a0-4128-9bd2-15572c213e1d.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "BASELINE_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "e170f8ca2360e82679d4633c35b2908f93a8b41bcd63d027cd500daa19da76d3"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/26481449-0282-4c3d-b981-66467887eeb5/f47358da-11a0-4128-9bd2-15572c213e1d.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=26481449-0282-4c3d-b981-66467887eeb5/f47358da-11a0-4128-9bd2-15572c213e1d.json",
          "filename": "sampleData/df_baseline_scored.json",
          "fileFormat": "JSON",
          "fileSize": 382615,
          "createdDate": "2023-12-20T05:17:12.561Z"
        },
        {
          "assetId": "4848317e-a5aa-4e0b-8b75-e4c916ba1e03",
          "name": "README.md",
          "assetType": "FILE",
          "assetRole": "README_FILE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "filename": "README.md",
          "fileFormat": "UNKNOWN",
          "localFile": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5/README.md",
          "fileSize": 308,
          "fileContentString": "# demo_dashboard_models\n\nRequirements:\n\n- modelop_sdk>=0.5.0\n- modelop>=0.13.0\n\nIf used with modelop_sdk >= 0.5.1 , then scope `env` variable needs to be updated:\n\n- **from** `MODELOP_OAUTH_CLIENT_SCOPES` **to ->** `MODELOP_OAUTH_SCOPE`\n- **from** `modelop.runtime.scopes` **to ->** `modelop.runtime.scope`\n\n",
          "fileContent": "IyBkZW1vX2Rhc2hib2FyZF9tb2RlbHMKClJlcXVpcmVtZW50czoKCi0gbW9kZWxvcF9zZGs+PTAuNS4wCi0gbW9kZWxvcD49MC4xMy4wCgpJZiB1c2VkIHdpdGggbW9kZWxvcF9zZGsgPj0gMC41LjEgLCB0aGVuIHNjb3BlIGBlbnZgIHZhcmlhYmxlIG5lZWRzIHRvIGJlIHVwZGF0ZWQ6CgotICoqZnJvbSoqIGBNT0RFTE9QX09BVVRIX0NMSUVOVF9TQ09QRVNgICoqdG8gLT4qKiBgTU9ERUxPUF9PQVVUSF9TQ09QRWAKLSAqKmZyb20qKiBgbW9kZWxvcC5ydW50aW1lLnNjb3Blc2AgKip0byAtPioqIGBtb2RlbG9wLnJ1bnRpbWUuc2NvcGVgCgo="
        },
        {
          "assetId": "b261ed1d-a05e-49ec-bac4-64b9a0687457",
          "name": "requirements.txt",
          "assetType": "FILE",
          "assetRole": "REQUIRED_LIBRARIES",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "filename": "requirements.txt",
          "fileFormat": "UNKNOWN",
          "localFile": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5/requirements.txt",
          "fileSize": 54,
          "fileContentString": "modelop_sdk>=0.5.0\nmodelop>=0.13.0\ngql\nasyncio\naiohttp",
          "fileContent": "bW9kZWxvcF9zZGs+PTAuNS4wCm1vZGVsb3A+PTAuMTMuMApncWwKYXN5bmNpbwphaW9odHRw"
        },
        {
          "assetId": "00e939ee-cc91-4ecc-b8ad-9eef61019346",
          "name": "metadata.json",
          "assetType": "FILE",
          "assetRole": "MODEL_METADATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "filename": "metadata.json",
          "fileFormat": "JSON",
          "localFile": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5/metadata.json",
          "fileSize": 317,
          "fileContentString": "{\n    \"tags\": [],\n    \"description\": \"Runs default monitors on a base business model generating data for the main MOC Dashboard\",\n    \"modelCategory\": \"MODEL_MONITORING_MODEL\",\n    \"defaultAssociationRole\": \"METRICS_MODEL\",\n    \"frequentlyUsed\": true,\n    \"custom\": {\n        \"modelopPackageVersion\": \"1.0.0\"\n    }\n}\n",
          "fileContent": "ewogICAgInRhZ3MiOiBbXSwKICAgICJkZXNjcmlwdGlvbiI6ICJSdW5zIGRlZmF1bHQgbW9uaXRvcnMgb24gYSBiYXNlIGJ1c2luZXNzIG1vZGVsIGdlbmVyYXRpbmcgZGF0YSBmb3IgdGhlIG1haW4gTU9DIERhc2hib2FyZCIsCiAgICAibW9kZWxDYXRlZ29yeSI6ICJNT0RFTF9NT05JVE9SSU5HX01PREVMIiwKICAgICJkZWZhdWx0QXNzb2NpYXRpb25Sb2xlIjogIk1FVFJJQ1NfTU9ERUwiLAogICAgImZyZXF1ZW50bHlVc2VkIjogdHJ1ZSwKICAgICJjdXN0b20iOiB7CiAgICAgICAgIm1vZGVsb3BQYWNrYWdlVmVyc2lvbiI6ICIxLjAuMCIKICAgIH0KfQo="
        },
        {
          "assetId": "1377af36-5b6f-4d50-bbf4-e4030120c157",
          "name": "required_assets.json",
          "assetType": "FILE",
          "assetRole": "REQUIRED_ASSETS",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5",
            "repositoryRemote": "https://github.com/modelop/lab-dashboard.git",
            "repositoryBranch": "dash-1",
            "lastCommitId": "11ce7d66f5031c8217a7364b0675016793d6e03d",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-12-20T07:20:48.098Z: https://github.com/modelop/lab-dashboard.git successfully updated",
            "lastSyncDate": "2023-12-20T07:20:48.098Z",
            "lastCommitDate": "2023-12-20T07:20:14Z"
          },
          "filename": "required_assets.json",
          "fileFormat": "JSON",
          "localFile": "/tmp/model-manage-repos/dash-1/26481449-0282-4c3d-b981-66467887eeb5/required_assets.json",
          "fileSize": 345,
          "fileContentString": "[\n    {\n        \"usage\": \"INPUT_ASSET\",\n        \"assetRole\": \"BASELINE_DATA\",\n        \"metaData\": {\n            \"description\": \"Baseline/Reference Dataset\"\n        }\n    },\n    {\n        \"usage\": \"INPUT_ASSET\",\n        \"assetRole\": \"COMPARATOR_DATA\",\n        \"metaData\": {\n            \"description\": \"Slice of Production Data\"\n        }\n    }\n]\n",
          "fileContent": "WwogICAgewogICAgICAgICJ1c2FnZSI6ICJJTlBVVF9BU1NFVCIsCiAgICAgICAgImFzc2V0Um9sZSI6ICJCQVNFTElORV9EQVRBIiwKICAgICAgICAibWV0YURhdGEiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJCYXNlbGluZS9SZWZlcmVuY2UgRGF0YXNldCIKICAgICAgICB9CiAgICB9LAogICAgewogICAgICAgICJ1c2FnZSI6ICJJTlBVVF9BU1NFVCIsCiAgICAgICAgImFzc2V0Um9sZSI6ICJDT01QQVJBVE9SX0RBVEEiLAogICAgICAgICJtZXRhRGF0YSI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlNsaWNlIG9mIFByb2R1Y3Rpb24gRGF0YSIKICAgICAgICB9CiAgICB9Cl0K"
        }
      ],
      "gitDifferences": [],
      "associatedModels": [],
      "requiredAssets": [
        {
          "assetId": "613140f2-9ddb-4a26-945f-8567da2b91a9",
          "assetType": "FILE",
          "assetRole": "BASELINE_DATA",
          "metaData": {
            "custom": {},
            "tags": [],
            "description": "Baseline/Reference Dataset"
          },
          "usage": "INPUT_ASSET",
          "fileSize": 0,
          "fileContent": ""
        },
        {
          "assetId": "49f340fd-69fb-48fb-803d-15d481fee94d",
          "assetType": "FILE",
          "assetRole": "COMPARATOR_DATA",
          "metaData": {
            "custom": {},
            "tags": [],
            "description": "Slice of Production Data"
          },
          "usage": "INPUT_ASSET",
          "fileSize": 0,
          "fileContent": ""
        }
      ]
    },
    "metaData": {
      "custom": {},
      "tags": [
        "ENV-MON",
        "MON"
      ],
      "name": "PNC_Dashboard-20231220_0220"
    },
    "associatedModels": [],
    "modelDocuments": [],
    "targetRuntimes": [
      {
        "engineType": "MODEL_OP_ENGINE",
        "inputEndpoints": [],
        "outputEndpoints": [],
        "tags": [
          "MON"
        ],
        "inProduction": false,
        "lastActivity": {}
      }
    ]
  },
  "targetEngine": {
    "id": "efa61198-9836-5750-b275-8b9d24483429",
    "group": "modelop",
    "version": 13069,
    "createdDate": "2023-08-11T13:59:31.235Z",
    "lastModifiedDate": "2023-12-20T07:35:52.958Z",
    "createdBy": "SYSTEM",
    "lastModifiedBy": "SYSTEM",
    "engineType": "MODEL_OP_ENGINE",
    "name": "engine-monitoring-1",
    "release": "3.2+build.1972.refc32ddbb",
    "state": "RUNNING",
    "platform": {
      "r": {
        "system": {
          "version_info": {
            "year": "2022",
            "version.string": "R version 4.2.1 (2022-06-23)",
            "system": "x86_64, linux-gnu",
            "svn rev": "82513",
            "status": "",
            "platform": "x86_64-pc-linux-gnu",
            "os": "linux-gnu",
            "nickname": "Funny-Looking Kid",
            "month": "06",
            "minor": "2.1",
            "major": "4",
            "language": "R",
            "day": "23",
            "arch": "x86_64"
          },
          "version": "R version 4.2.1 (2022-06-23)",
          "system": "unix",
          "processor": {
            "arch": "x86_64"
          },
          "platform": "unix",
          "num_processors": 2,
          "executable": "/usr/local/bin/R",
          "double_info": [
            "0.0000000000000002220446",
            "0.0000000000000001110223",
            "0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225074",
            "179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368",
            "2",
            "53",
            "5",
            "0",
            "-52",
            "-53",
            "11",
            "-1022",
            "1024",
            "2147483647",
            "8",
            "8",
            "16",
            "8",
            "0.0000000000000000001084202",
            "0.00000000000000000005421011",
            "64",
            "5",
            "0",
            "-63",
            "-64",
            "15",
            "-16382",
            "16384"
          ],
          "architecture": 64
        },
        "libraries": {
          "lattice": "0.20-45",
          "Matrix": "1.4-1",
          "methods": "4.2.1",
          "cluster": "2.1.3",
          "tcltk": "4.2.1",
          "fastscore.io": "1.0",
          "base": "4.2.1",
          "MASS": "7.3-57",
          "nnet": "7.3-17",
          "grDevices": "4.2.1",
          "utils": "4.2.1",
          "codetools": "0.2-18",
          "splines": "4.2.1",
          "class": "7.3-20",
          "boot": "1.3-28",
          "jsonlite": "1.8.7",
          "spatial": "7.3-15",
          "foreign": "0.8-82",
          "fastscore.runner": "1.6",
          "compiler": "4.2.1",
          "nlme": "3.1-157",
          "survival": "3.3-1",
          "datasets": "4.2.1",
          "mgcv": "1.8-40",
          "grid": "4.2.1",
          "KernSmooth": "2.23-20",
          "stats": "4.2.1",
          "stats4": "4.2.1",
          "graphics": "4.2.1",
          "rpart": "4.1.16",
          "parallel": "4.2.1",
          "tools": "4.2.1",
          "fastscore": "1.6"
        }
      },
      "python": {
        "system": {
          "version_info": [
            3,
            8,
            3,
            "final",
            0
          ],
          "version": "3.8.3 (default, Nov 21 2023, 03:14:30) \n[GCC 8.5.0 20210514 (Red Hat 8.5.0-18)]",
          "system": "Linux",
          "processor": "x86_64",
          "platform": "linux",
          "num_processors": 2,
          "float_info": [
            1.7976931348623157e+308,
            1024,
            308,
            2.2250738585072014e-308,
            -1021,
            -307,
            15,
            53,
            2.220446049250313e-16,
            2,
            1
          ],
          "executable": "/usr/bin/python3",
          "architecture": [
            "64bit",
            ""
          ],
          "api_version": 1013
        },
        "libraries": {
          "modelop": "1.3.4",
          "referencing": "0.31.0",
          "Pillow": "10.1.0",
          "importlib-resources": "6.1.1",
          "requests": "2.26.0",
          "MarkupSafe": "2.1.3",
          "rpds-py": "0.13.1",
          "zipp": "3.17.0",
          "joblib": "1.3.2",
          "threadpoolctl": "3.2.0",
          "aequitas": "0.42.0",
          "SQLAlchemy": "2.0.23",
          "greenlet": "3.0.1",
          "pip": "23.0.1",
          "pkgutil-resolve-name": "1.3.10",
          "tabulate": "0.8.2",
          "visitor": "0.1.3",
          "scipy": "1.7.1",
          "millify": "0.1.1",
          "setuptools": "69.0.0",
          "typing-extensions": "4.8.0",
          "httplib2": "0.22.0",
          "patsy": "0.5.3",
          "werkzeug": "3.0.1",
          "numpy": "1.21.6",
          "markdown2": "2.3.5",
          "pyparsing": "3.1.1",
          "pytz": "2023.3.post1",
          "PyYAML": "6.0.1",
          "python-dateutil": "2.8.2",
          "Flask-Bootstrap": "3.3.7.1",
          "scikit-learn": "0.24.2",
          "quickavro": "0.1.22",
          "contourpy": "1.1.1",
          "bert": "2.2.0",
          "ohio": "0.5.0",
          "webencodings": "0.5.1",
          "Flask": "0.12.2",
          "toolz": "0.12.0",
          "urllib3": "1.26.18",
          "statsmodels": "0.13.2",
          "reportlab": "3.6.13",
          "basho-erlastic": "2.1.1",
          "itsdangerous": "2.1.2",
          "jsonschema-specifications": "2023.11.1",
          "six": "1.16.0",
          "pandas": "1.2.3",
          "modelop-sdk": "0.5.8",
          "charset-normalizer": "2.0.12",
          "kiwisolver": "1.4.5",
          "dominate": "2.9.0",
          "click": "8.1.7",
          "seaborn": "0.13.0",
          "cycler": "0.12.1",
          "idna": "3.4",
          "jsonschema": "4.20.0",
          "Jinja2": "3.1.2",
          "fonttools": "4.45.0",
          "attrs": "23.1.0",
          "packaging": "23.2",
          "html5lib": "1.1",
          "certifi": "2023.11.17",
          "entrypoints": "0.4",
          "altair": "4.1.0",
          "xhtml2pdf": "0.2.2",
          "matplotlib": "3.7.4",
          "msgpack": "1.0.7",
          "pypdf2": "3.0.1"
        }
      }
    },
    "inputEndpoints": [
      {
        "endpointType": "FILE",
        "encoding": "JSON",
        "path": "/tmp/playground/batch-4e920f7e-e0c9-4717-9931-458098302143/null-asset.0"
      },
      {
        "endpointType": "FILE",
        "encoding": "JSON",
        "path": "/tmp/playground/batch-4e920f7e-e0c9-4717-9931-458098302143/null-asset.2"
      }
    ],
    "outputEndpoints": [
      {
        "endpointType": "FILE",
        "encoding": "JSON",
        "path": "/tmp/playground/batch-4e920f7e-e0c9-4717-9931-458098302143/test_result.json"
      }
    ],
    "tags": [
      "MONITOR",
      "default",
      "MON"
    ],
    "environmentName": "Monitoring",
    "inProduction": false,
    "lastActivity": {
      "date": "2023-12-20T07:35:25.886Z",
      "type": "JOB"
    },
    "manifoldInfo": {
      "streams": [
        {
          "descriptor": {
            "Transport": {
              "Type": "file",
              "Path": "/tmp/playground/batch-4e920f7e-e0c9-4717-9931-458098302143/null-asset.0"
            },
            "Loop": false,
            "Encoding": "json",
            "Batching": "explicit"
          },
          "eof": false,
          "name": "stream_0",
          "slot": 0
        },
        {
          "descriptor": {
            "Transport": {
              "Type": "file",
              "Path": "/tmp/playground/batch-4e920f7e-e0c9-4717-9931-458098302143/test_result.json"
            },
            "Loop": false,
            "Encoding": "json",
            "Batching": "normal"
          },
          "eof": false,
          "name": "stream_1",
          "slot": 1
        },
        {
          "descriptor": {
            "Transport": {
              "Type": "file",
              "Path": "/tmp/playground/batch-4e920f7e-e0c9-4717-9931-458098302143/null-asset.2"
            },
            "Loop": false,
            "Encoding": "json",
            "Batching": "explicit"
          },
          "eof": false,
          "name": "stream_2",
          "slot": 2
        }
      ],
      "jets": [
        {
          "busy": true
        }
      ],
      "state": "running",
      "group": "modelop",
      "initialTags": [
        "MONITOR"
      ],
      "environmentName": "Monitoring",
      "inProduction": false,
      "startTimestamp": "2023-12-19T17:16:31Z",
      "imageTag": "3.2.1-rhel8-py38-mon"
    }
  },
  "referenceModel": {
    "id": "7213898f-afeb-4fe6-9866-bde3daf687ff",
    "group": "PNC",
    "version": 5,
    "createdDate": "2023-10-18T18:20:31.214Z",
    "lastModifiedDate": "2023-10-18T18:35:13.237Z",
    "createdBy": "SYSTEM",
    "lastModifiedBy": "SYSTEM",
    "storedModel": {
      "id": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
      "group": "PNC",
      "version": 15,
      "createdDate": "2023-10-18T17:55:46.766Z",
      "lastModifiedDate": "2023-10-18T18:20:04.493Z",
      "createdBy": "Sachal.Magon.PNC",
      "lastModifiedBy": "SYSTEM",
      "modelMetaData": {
        "custom": {
          "model_NonModel": "Model",
          "Security and Data Approval": "NOT REVIEWED",
          "Owners": {
            "IT Owner": "John Smith",
            "Business Owner": "Jane Doe"
          },
          "Is Customer Facing": "false",
          "Governance Officer": {
            "Model Validator": "Sam Quinn",
            "Model Risk Officer": "Roger Lyle",
            "Governance Executive": "Jim Dean"
          },
          "Data Use Approval": "NOT REVIEWED",
          "Contains PII_PHI": "true",
          "Business Case Summary": ""
        },
        "tags": [
          "MRM"
        ],
        "name": "Young Jedi's Demo Model",
        "description": "Demo - Lab1| Sachal Magon",
        "modelStage": "DEVELOPMENT",
        "type": "USE_CASE",
        "inputSchema": [
          {
            "schemaId": "0cfe069b-96da-4a3c-be76-5f049d322774",
            "name": "schema_input.avsc",
            "schemaDefinition": {
              "type": "record",
              "name": "input_schema.avsc",
              "fields": [
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "identifier",
                  "protectedClass": false,
                  "name": "id",
                  "driftCandidate": false,
                  "dataClass": "numerical"
                },
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "duration_months",
                  "driftCandidate": true,
                  "dataClass": "numerical"
                },
                {
                  "type": "float",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "credit_amount",
                  "isAmountField": true,
                  "driftCandidate": true,
                  "dataClass": "numerical"
                },
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "installment_rate",
                  "driftCandidate": true,
                  "dataClass": "numerical"
                },
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "present_residence_since",
                  "driftCandidate": true,
                  "dataClass": "numerical"
                },
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "age_years",
                  "driftCandidate": true,
                  "dataClass": "numerical"
                },
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "number_existing_credits",
                  "driftCandidate": true,
                  "dataClass": "numerical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "checking_status",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "credit_history",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "purpose",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "savings_account",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "present_employment_since",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "debtors_guarantors",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "property",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "installment_plans",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "housing",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "job",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "number_people_liable",
                  "driftCandidate": true,
                  "dataClass": "numerical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "telephone",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": false,
                  "role": "predictor",
                  "protectedClass": false,
                  "name": "foreign_worker",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "string",
                  "specialValues": [],
                  "scoringOptional": true,
                  "role": "predictor",
                  "protectedClass": true,
                  "name": "gender",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": true,
                  "role": "label",
                  "protectedClass": false,
                  "positiveClassLabel": 1,
                  "name": "label_value",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                },
                {
                  "type": "int",
                  "specialValues": [],
                  "scoringOptional": true,
                  "role": "score",
                  "protectedClass": false,
                  "name": "score",
                  "driftCandidate": true,
                  "dataClass": "categorical"
                }
              ]
            }
          }
        ],
        "outputSchema": [
          {
            "schemaId": "0467321a-3d58-444d-8421-8b9c2cd01b00",
            "name": "schema_output.avsc",
            "schemaDefinition": {
              "type": "array",
              "items": {
                "type": "record",
                "name": "output_schema.avsc",
                "fields": [
                  {
                    "type": "int",
                    "name": "id"
                  },
                  {
                    "type": "int",
                    "name": "number_people_liable"
                  },
                  {
                    "type": "int",
                    "name": "age_years"
                  },
                  {
                    "type": "string",
                    "name": "present_employment_since"
                  },
                  {
                    "type": "string",
                    "name": "job"
                  },
                  {
                    "type": "string",
                    "name": "housing"
                  },
                  {
                    "type": "string",
                    "name": "telephone"
                  },
                  {
                    "type": "string",
                    "name": "installment_plans"
                  },
                  {
                    "type": "int",
                    "name": "number_existing_credits"
                  },
                  {
                    "type": "string",
                    "name": "credit_history"
                  },
                  {
                    "type": "string",
                    "name": "foreign_worker"
                  },
                  {
                    "type": "string",
                    "name": "property"
                  },
                  {
                    "type": "int",
                    "name": "installment_rate"
                  },
                  {
                    "type": "string",
                    "name": "purpose"
                  },
                  {
                    "type": "string",
                    "name": "checking_status"
                  },
                  {
                    "type": "int",
                    "name": "present_residence_since"
                  },
                  {
                    "type": "string",
                    "name": "debtors_guarantors"
                  },
                  {
                    "type": "string",
                    "name": "savings_account"
                  },
                  {
                    "type": "int",
                    "name": "duration_months"
                  },
                  {
                    "type": "int",
                    "name": "credit_amount"
                  },
                  {
                    "type": "string",
                    "name": "gender"
                  },
                  {
                    "type": "int",
                    "name": "label_value"
                  },
                  {
                    "type": "int",
                    "name": "score"
                  }
                ]
              }
            }
          }
        ],
        "enableInputSchemaChecking": true,
        "enableOutputSchemaChecking": true,
        "attachments": [],
        "repositoryInfo": {
          "repositoryType": "GIT_REPO",
          "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
          "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
          "repositoryBranch": "master",
          "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
          "lastSyncStatus": "SUCCESS",
          "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
          "lastSyncDate": "2023-10-18T18:20:04.492Z",
          "lastCommitDate": "2023-08-22T22:45:07Z"
        },
        "modelCategory": "BUSINESS_MODEL",
        "modelUseCategory": "unassigned",
        "modelOrganization": "company",
        "modelRisk": "Medium",
        "modelMethodology": "Classification",
        "roi": {
          "baselineMetricsTNR": 0.531,
          "baselineMetricsTPR": 0.877,
          "costMultipliersTP": 1.5,
          "costMultipliersTN": 2,
          "costMultipliersFP": -2,
          "costMultipliersFN": -1.5
        }
      },
      "modelAssets": [
        {
          "assetId": "ce508c68-5248-3500-8fd6-59e5d42a3d64",
          "name": "German_Credit_Performance_Pass.dmn",
          "assetType": "SOURCE_CODE",
          "assetRole": "TEST_RESULT_COMPARATOR",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "primaryModelSource": false,
          "sourceCode": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" xmlns:camunda=\"http://camunda.org/schema/1.0/dmn\" id=\"Definitions_0wb2acp\" name=\"DRD\" namespace=\"http://camunda.org/schema/1.0/dmn\" exporter=\"Camunda Modeler\" exporterVersion=\"4.3.0\">\n  <decision id=\"Decision_0q87m1a\" name=\"Model Test Comparator\">\n    <decisionTable id=\"decisionTable_1\" hitPolicy=\"COLLECT\">\n      <input id=\"input_1\" label=\"accuracy\" camunda:inputVariable=\"accuracy\">\n        <inputExpression id=\"inputExpression_1\" typeRef=\"double\" expressionLanguage=\"feel\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id=\"output_1\" label=\"passes\" name=\"passes\" typeRef=\"boolean\" />\n      <output id=\"OutputClause_05h1co6\" label=\"reason\" name=\"reason\" typeRef=\"string\" />\n      <output id=\"OutputClause_1ids7f5\" name=\"category\" typeRef=\"string\" />\n      <output id=\"OutputClause_0vplf2d\" name=\"myCustomVariable\" typeRef=\"string\" />\n      <rule id=\"DecisionRule_0aznir8\">\n        <inputEntry id=\"UnaryTests_1x4xf13\">\n          <text>&gt;= 0.4</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0a5bp3u\">\n          <text>true</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_07v4w07\">\n          <text>\"Passed test\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0tu87g9\">\n          <text>\"Performance\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1i5cis6\">\n          <text>\"customval\"</text>\n        </outputEntry>\n      </rule>\n    </decisionTable>\n  </decision>\n  <dmndi:DMNDI>\n    <dmndi:DMNDiagram id=\"DMNDiagram_1ut5uvy\">\n      <dmndi:DMNShape id=\"DMNShape_0dheq6y\" dmnElementRef=\"Decision_0q87m1a\">\n        <dc:Bounds height=\"80\" width=\"180\" x=\"150\" y=\"150\" />\n      </dmndi:DMNShape>\n    </dmndi:DMNDiagram>\n  </dmndi:DMNDI>\n</definitions>\n",
          "sourceCodeFilePath": "German_Credit_Performance_Pass.dmn",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "319e5b94-0e11-3daf-8f17-ad6c9ea21f96",
          "name": "German_Credit_Performance_FAIL.dmn",
          "assetType": "SOURCE_CODE",
          "assetRole": "TEST_RESULT_COMPARATOR",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "primaryModelSource": false,
          "sourceCode": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" xmlns:camunda=\"http://camunda.org/schema/1.0/dmn\" xmlns:biodi=\"http://bpmn.io/schema/dmn/biodi/2.0\" id=\"Definitions_0wb2acp\" name=\"DRD\" namespace=\"http://camunda.org/schema/1.0/dmn\" exporter=\"Camunda Modeler\" exporterVersion=\"4.3.0\">\n  <decision id=\"Decision_0q87m1a\" name=\"Model Test Comparator\">\n    <decisionTable id=\"decisionTable_1\" hitPolicy=\"COLLECT\" biodi:annotationsWidth=\"400\">\n      <input id=\"input_1\" label=\"auc\" biodi:width=\"150\" camunda:inputVariable=\"auc\">\n        <inputExpression id=\"inputExpression_1\" typeRef=\"double\" expressionLanguage=\"feel\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_08e7ybd\" label=\"precision\" biodi:width=\"150\" camunda:inputVariable=\"precision\">\n        <inputExpression id=\"LiteralExpression_0nr86e9\" typeRef=\"double\" expressionLanguage=\"feel\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1td5bzn\" label=\"recall\" biodi:width=\"150\" camunda:inputVariable=\"recall\">\n        <inputExpression id=\"LiteralExpression_0thcre4\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1kxh3gb\" label=\"f1_score\" biodi:width=\"150\" camunda:inputVariable=\"f1_score\">\n        <inputExpression id=\"LiteralExpression_1ll7pn2\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id=\"output_1\" label=\"passes\" name=\"passes\" typeRef=\"boolean\" biodi:width=\"150\" />\n      <output id=\"OutputClause_05h1co6\" label=\"reason\" name=\"reason\" typeRef=\"string\" biodi:width=\"156\" />\n      <output id=\"OutputClause_1ids7f5\" name=\"category\" typeRef=\"string\" biodi:width=\"164\" />\n      <rule id=\"DecisionRule_0aznir8\">\n        <inputEntry id=\"UnaryTests_1x4xf13\">\n          <text>&lt;= 0.7</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1wcb8sj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1i58mgp\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0dyv1md\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0a5bp3u\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_07v4w07\">\n          <text>\"auc is under threshold of 0.7\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0tu87g9\">\n          <text>\"Performance\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0ggwcp6\">\n        <inputEntry id=\"UnaryTests_0lmlprd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1u0j72q\">\n          <text>&lt;= 0.6</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0q9dwkz\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_179sa93\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1id0elh\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1qpb76t\">\n          <text>\"precision under threshold of 0.6\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_19mapv0\">\n          <text>\"Performance\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1jhzhxa\">\n        <inputEntry id=\"UnaryTests_1nyhwnh\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0hgntoq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_190evjk\">\n          <text>&lt;= 0.6</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ta1h7b\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_03mgpyq\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1pws6rq\">\n          <text>\"recall under threshold of 0.6\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0925z4o\">\n          <text>\"Performance\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1bqcu3q\">\n        <inputEntry id=\"UnaryTests_1opba2k\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_01th5pt\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0xdocdu\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0dbcggs\">\n          <text>&lt;=.7</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0su26fp\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1r9y3wj\">\n          <text>\"f1_score under threshold of 0.7\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1pfmsy2\">\n          <text>\"Performance\"</text>\n        </outputEntry>\n      </rule>\n    </decisionTable>\n  </decision>\n  <dmndi:DMNDI>\n    <dmndi:DMNDiagram id=\"DMNDiagram_1ut5uvy\">\n      <dmndi:DMNShape id=\"DMNShape_0dheq6y\" dmnElementRef=\"Decision_0q87m1a\">\n        <dc:Bounds height=\"80\" width=\"180\" x=\"150\" y=\"150\" />\n      </dmndi:DMNShape>\n    </dmndi:DMNDiagram>\n  </dmndi:DMNDI>\n</definitions>\n",
          "sourceCodeFilePath": "German_Credit_Performance_FAIL.dmn",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "64d0944b-8cf0-3df1-a224-56aac731c0a9",
          "name": "German_Credit_Stability_FAIL.dmn",
          "assetType": "SOURCE_CODE",
          "assetRole": "TEST_RESULT_COMPARATOR",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "primaryModelSource": false,
          "sourceCode": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" xmlns:camunda=\"http://camunda.org/schema/1.0/dmn\" xmlns:biodi=\"http://bpmn.io/schema/dmn/biodi/2.0\" id=\"Definitions_0wb2acp\" name=\"DRD\" namespace=\"http://camunda.org/schema/1.0/dmn\" exporter=\"Camunda Modeler\" exporterVersion=\"4.3.0\">\n  <decision id=\"Decision_0q87m1a\" name=\"Model Test Comparator\">\n    <decisionTable id=\"decisionTable_1\" hitPolicy=\"COLLECT\">\n      <input id=\"input_1\" label=\"credit_history_CSI\" biodi:width=\"153\" camunda:inputVariable=\"credit_history_CSI\">\n        <inputExpression id=\"inputExpression_1\" typeRef=\"double\" expressionLanguage=\"feel\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_08e7ybd\" label=\"purpose_CSI\" biodi:width=\"150\" camunda:inputVariable=\"purpose_CSI\">\n        <inputExpression id=\"LiteralExpression_0nr86e9\" typeRef=\"double\" expressionLanguage=\"feel\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1td5bzn\" label=\"present_employment_since_CSI\" biodi:width=\"267\" camunda:inputVariable=\"present_employment_since_CSI\">\n        <inputExpression id=\"LiteralExpression_0thcre4\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id=\"output_1\" label=\"passes\" name=\"passes\" typeRef=\"boolean\" biodi:width=\"150\" />\n      <output id=\"OutputClause_05h1co6\" label=\"reason\" name=\"reason\" typeRef=\"string\" biodi:width=\"193\" />\n      <output id=\"OutputClause_1ids7f5\" name=\"category\" typeRef=\"string\" biodi:width=\"150\" />\n      <rule id=\"DecisionRule_0aznir8\">\n        <inputEntry id=\"UnaryTests_1x4xf13\">\n          <text>&gt;= 0.0025</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1wcb8sj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1i58mgp\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0a5bp3u\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_07v4w07\">\n          <text>\"credit_history CSI above threshold of 0.0025\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0tu87g9\">\n          <text>\"Stability\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0ggwcp6\">\n        <inputEntry id=\"UnaryTests_0lmlprd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1u0j72q\">\n          <text>&gt;= 0.25</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0q9dwkz\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1id0elh\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1qpb76t\">\n          <text>\"purpose CSI above threshold of 0.25\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_19mapv0\">\n          <text>\"Stability\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1jhzhxa\">\n        <inputEntry id=\"UnaryTests_1nyhwnh\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0hgntoq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_190evjk\">\n          <text>&gt;= 0.25</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_03mgpyq\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1pws6rq\">\n          <text>\"present_employment_since CSI above threshold of 0.25\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0925z4o\">\n          <text>\"Stability\"</text>\n        </outputEntry>\n      </rule>\n    </decisionTable>\n  </decision>\n  <dmndi:DMNDI>\n    <dmndi:DMNDiagram id=\"DMNDiagram_1ut5uvy\">\n      <dmndi:DMNShape id=\"DMNShape_0dheq6y\" dmnElementRef=\"Decision_0q87m1a\">\n        <dc:Bounds height=\"80\" width=\"180\" x=\"150\" y=\"150\" />\n      </dmndi:DMNShape>\n    </dmndi:DMNDiagram>\n  </dmndi:DMNDI>\n</definitions>\n",
          "sourceCodeFilePath": "German_Credit_Stability_FAIL.dmn",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "c15ac298-4ead-3a27-adb4-6357340d2e66",
          "name": "German_Credit_Stability_Pass.dmn",
          "assetType": "SOURCE_CODE",
          "assetRole": "TEST_RESULT_COMPARATOR",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "primaryModelSource": false,
          "sourceCode": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" xmlns:camunda=\"http://camunda.org/schema/1.0/dmn\" id=\"Definitions_0wb2acp\" name=\"DRD\" namespace=\"http://camunda.org/schema/1.0/dmn\" exporter=\"Camunda Modeler\" exporterVersion=\"4.3.0\">\n  <decision id=\"Decision_0q87m1a\" name=\"Model Test Comparator\">\n    <decisionTable id=\"decisionTable_1\" hitPolicy=\"COLLECT\">\n      <input id=\"input_1\" label=\"purpose_CSI\" camunda:inputVariable=\"purpose_CSI\">\n        <inputExpression id=\"inputExpression_1\" typeRef=\"double\" expressionLanguage=\"feel\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id=\"output_1\" label=\"passes\" name=\"passes\" typeRef=\"boolean\" />\n      <output id=\"OutputClause_05h1co6\" label=\"reason\" name=\"reason\" typeRef=\"string\" />\n      <output id=\"OutputClause_1ids7f5\" name=\"category\" typeRef=\"string\" />\n      <output id=\"OutputClause_0vplf2d\" name=\"myCustomVariable\" typeRef=\"string\" />\n      <rule id=\"DecisionRule_0aznir8\">\n        <inputEntry id=\"UnaryTests_1x4xf13\">\n          <text>&gt;= 0.001</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0a5bp3u\">\n          <text>true</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_07v4w07\">\n          <text>\"Passed test\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0tu87g9\">\n          <text>\"Stability\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1i5cis6\">\n          <text>\"customval\"</text>\n        </outputEntry>\n      </rule>\n    </decisionTable>\n  </decision>\n  <dmndi:DMNDI>\n    <dmndi:DMNDiagram id=\"DMNDiagram_1ut5uvy\">\n      <dmndi:DMNShape id=\"DMNShape_0dheq6y\" dmnElementRef=\"Decision_0q87m1a\">\n        <dc:Bounds height=\"80\" width=\"180\" x=\"150\" y=\"150\" />\n      </dmndi:DMNShape>\n    </dmndi:DMNDiagram>\n  </dmndi:DMNDI>\n</definitions>\n",
          "sourceCodeFilePath": "German_Credit_Stability_Pass.dmn",
          "sourceCodeType": "MODEL"
        },
        {
          "assetId": "b25f4cf2-0333-3559-953d-68ae15a8da70",
          "name": "german_credit.py",
          "assetType": "SOURCE_CODE",
          "assetRole": "MODEL_SOURCE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "primaryModelSource": true,
          "sourceCode": "# modelop.schema.0: input_schema.avsc\n# modelop.schema.1: output_schema.avsc\n\nimport pandas as pd\nimport pickle\nimport numpy as np\n\n# Bias libraries\nfrom aequitas.preprocessing import preprocess_input_df\nfrom aequitas.group import Group\nfrom aequitas.bias import Bias \n\n\n# modelop.init\ndef begin():\n    \n    global logreg_classifier\n    \n    # load pickled logistic regression model\n    logreg_classifier = pickle.load(open(\"logreg_classifier.pickle\", \"rb\"))\n\n    \n# modelop.score\ndef action(data):\n    \n    # Turn data into DataFrame\n    data = pd.DataFrame([data])\n    \n    # There are only two unique values in data.number_people_liable.\n    # Treat it as a categorical feature\n    data.number_people_liable = data.number_people_liable.astype('object')\n\n    predictive_features = [\n        'duration_months', 'credit_amount', 'installment_rate',\n        'present_residence_since', 'age_years', 'number_existing_credits',\n        'checking_status', 'credit_history', 'purpose', 'savings_account',\n        'present_employment_since', 'debtors_guarantors', 'property',\n        'installment_plans', 'housing', 'job', 'number_people_liable',\n        'telephone', 'foreign_worker'\n    ]\n    \n    data[\"score\"] = logreg_classifier.predict(data[predictive_features])\n    \n    # MOC expects the action function to be a *yield* function\n    yield data.to_dict(orient=\"records\")\n\n\n# modelop.metrics\ndef metrics(data):\n    \n    yield {\"foo\":\"bar\"}\n",
          "sourceCodeFilePath": "german_credit.py",
          "sourceCodeType": "MODEL",
          "initFunction": "begin",
          "scoreFunction": "action",
          "metricsFunction": "metrics"
        },
        {
          "assetId": "89a59744-f49e-495a-9076-02a5b89bf645",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/89a59744-f49e-495a-9076-02a5b89bf645.bak",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "UNKNOWN",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "7e5f376117b41a6cb7d9bfd3768594f9aba3c21ce92ce6a174fcca88c41b4a4c"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/89a59744-f49e-495a-9076-02a5b89bf645.bak",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/89a59744-f49e-495a-9076-02a5b89bf645.bak",
          "filename": "model_one_thresholds.bak",
          "fileFormat": "UNKNOWN",
          "fileSize": 4720,
          "createdDate": "2023-10-18T18:14:53.413Z"
        },
        {
          "assetId": "69e50984-284d-48fd-9c8b-ae8f1ae4f3bd",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/69e50984-284d-48fd-9c8b-ae8f1ae4f3bd.pickle",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "WEIGHTS_FILE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "2933ba9685f584cab69a161193b0e4ec2050ceaa9ad93521e162daead120d473"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/69e50984-284d-48fd-9c8b-ae8f1ae4f3bd.pickle",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/69e50984-284d-48fd-9c8b-ae8f1ae4f3bd.pickle",
          "filename": "logreg_classifier.pickle",
          "fileFormat": "UNKNOWN",
          "fileSize": 16498,
          "createdDate": "2023-10-18T18:14:53.544Z"
        },
        {
          "assetId": "8e66119f-1fcb-4dc2-b997-346f79014900",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/8e66119f-1fcb-4dc2-b997-346f79014900.docx",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "MODEL_DOCUMENTATION",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "21a7e95bc7efe68efd82fcb097760d55cfa9611476ebbf22c3a995580970e204"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/8e66119f-1fcb-4dc2-b997-346f79014900.docx",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/8e66119f-1fcb-4dc2-b997-346f79014900.docx",
          "filename": "PIA_Template.docx",
          "fileFormat": "WORD",
          "fileSize": 16814,
          "createdDate": "2023-10-18T18:14:53.597Z"
        },
        {
          "assetId": "cc28d304-fe95-4029-b03d-3653e360f2fc",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/cc28d304-fe95-4029-b03d-3653e360f2fc.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "d97aa4576e0e7a492f6676ea50a23c12b040a1cdb973fc895b091cdf0858c2e8"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/cc28d304-fe95-4029-b03d-3653e360f2fc.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/cc28d304-fe95-4029-b03d-3653e360f2fc.json",
          "filename": "monitoring_parameters.json",
          "fileFormat": "JSON",
          "fileSize": 859,
          "createdDate": "2023-10-18T18:14:53.671Z"
        },
        {
          "assetId": "6055241b-74ee-45e4-9c7c-72c0ae5119ff",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/6055241b-74ee-45e4-9c7c-72c0ae5119ff.docx",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "MODEL_DOCUMENTATION",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "e472dadcb75d0a23d6401ce3c94794695063b2a6ced4e723181a816219d60bca"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/6055241b-74ee-45e4-9c7c-72c0ae5119ff.docx",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/6055241b-74ee-45e4-9c7c-72c0ae5119ff.docx",
          "filename": "ModelReviewDocument.docx",
          "fileFormat": "WORD",
          "fileSize": 16899,
          "createdDate": "2023-10-18T18:14:53.753Z"
        },
        {
          "assetId": "ecb26874-137a-4396-94b5-4279f76e581d",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/ecb26874-137a-4396-94b5-4279f76e581d.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TRAINING_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "d23455d2f14209d8d72ce82a9ada7b9e6a8f2cdb2de075ef53f03c14ccb335c7"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/ecb26874-137a-4396-94b5-4279f76e581d.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/ecb26874-137a-4396-94b5-4279f76e581d.json",
          "filename": "training_data.json",
          "fileFormat": "JSON",
          "fileSize": 95686,
          "createdDate": "2023-10-18T18:14:53.824Z"
        },
        {
          "assetId": "d3871f3d-a6a6-4697-b8d8-f2e04e3783ea",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "COMPARATOR_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "d23455d2f14209d8d72ce82a9ada7b9e6a8f2cdb2de075ef53f03c14ccb335c7"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/d3871f3d-a6a6-4697-b8d8-f2e04e3783ea.json",
          "filename": "comparator_data.json",
          "fileFormat": "JSON",
          "fileSize": 95686,
          "createdDate": "2023-10-18T18:14:53.928Z"
        },
        {
          "assetId": "ded8ba01-774a-4543-b134-b932e1efb385",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/ded8ba01-774a-4543-b134-b932e1efb385.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "TEST_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "d23455d2f14209d8d72ce82a9ada7b9e6a8f2cdb2de075ef53f03c14ccb335c7"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/ded8ba01-774a-4543-b134-b932e1efb385.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/ded8ba01-774a-4543-b134-b932e1efb385.json",
          "filename": "test_data.json",
          "fileFormat": "JSON",
          "fileSize": 95686,
          "createdDate": "2023-10-18T18:14:54.173Z"
        },
        {
          "assetId": "3d6efebd-342e-493e-8b07-c9d907049c7d",
          "name": "2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json",
          "assetType": "EXTERNAL_FILE",
          "assetRole": "BASELINE_DATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "S3_REPOSITORY",
            "secure": true,
            "host": "modelop-demo.s3.us-east-2.amazonaws.com",
            "port": 443,
            "region": "us-east-2"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "contentHash": {
            "hashType": "SHA-256",
            "hexString": "e170f8ca2360e82679d4633c35b2908f93a8b41bcd63d027cd500daa19da76d3"
          },
          "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json",
          "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/3d6efebd-342e-493e-8b07-c9d907049c7d.json",
          "filename": "baseline_data.json",
          "fileFormat": "JSON",
          "fileSize": 382615,
          "createdDate": "2023-10-18T18:14:54.332Z"
        },
        {
          "assetId": "42ca57a6-749b-4374-a8f6-43f37037d07e",
          "name": "README.md",
          "assetType": "FILE",
          "assetRole": "README_FILE",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "filename": "README.md",
          "fileFormat": "UNKNOWN",
          "localFile": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/README.md",
          "fileSize": 64,
          "fileContentString": "# lab_model_one\n1 of 3 lab models for use in guided lab sessions",
          "fileContent": "IyBsYWJfbW9kZWxfb25lCjEgb2YgMyBsYWIgbW9kZWxzIGZvciB1c2UgaW4gZ3VpZGVkIGxhYiBzZXNzaW9ucw=="
        },
        {
          "assetId": "dc415880-ef2e-4333-ad73-0d4ceebd92fe",
          "name": "requirements.txt",
          "assetType": "FILE",
          "assetRole": "REQUIRED_LIBRARIES",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "filename": "requirements.txt",
          "fileFormat": "UNKNOWN",
          "localFile": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/requirements.txt",
          "fileSize": 76,
          "fileContentString": "aequitas==0.42.0\nnumpy==1.19.5\npandas==1.1.5\nscikit-learn==0.22\nscipy==1.5.4",
          "fileContent": "YWVxdWl0YXM9PTAuNDIuMApudW1weT09MS4xOS41CnBhbmRhcz09MS4xLjUKc2Npa2l0LWxlYXJuPT0wLjIyCnNjaXB5PT0xLjUuNA=="
        },
        {
          "assetId": "cc22956c-055a-41ea-bf09-8820414bc25f",
          "name": "schema_output.avsc",
          "assetType": "FILE",
          "assetRole": "MODEL_SCHEMA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "filename": "schema_output.avsc",
          "fileFormat": "UNKNOWN",
          "localFile": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/schema_output.avsc",
          "fileSize": 2469,
          "fileContentString": "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"record\",\n        \"name\": \"output_schema.avsc\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"number_people_liable\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"age_years\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"present_employment_since\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"job\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"housing\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"telephone\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"installment_plans\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"number_existing_credits\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"credit_history\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"foreign_worker\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"property\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"installment_rate\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"purpose\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"checking_status\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"present_residence_since\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"debtors_guarantors\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"savings_account\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"duration_months\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"credit_amount\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"gender\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"label_value\",\n                \"type\": \"int\"\n            },\n            {\n              \"name\": \"score\",\n              \"type\": \"int\"\n           }\n        ]\n     }\n}\n",
          "fileContent": "ewogICAgInR5cGUiOiAiYXJyYXkiLAogICAgIml0ZW1zIjogewogICAgICAgICJ0eXBlIjogInJlY29yZCIsCiAgICAgICAgIm5hbWUiOiAib3V0cHV0X3NjaGVtYS5hdnNjIiwKICAgICAgICAiZmllbGRzIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJpZCIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJpbnQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogIm51bWJlcl9wZW9wbGVfbGlhYmxlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiYWdlX3llYXJzIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicHJlc2VudF9lbXBsb3ltZW50X3NpbmNlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiam9iIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiaG91c2luZyIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogInRlbGVwaG9uZSIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImluc3RhbGxtZW50X3BsYW5zIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAibnVtYmVyX2V4aXN0aW5nX2NyZWRpdHMiLAogICAgICAgICAgICAgICAgInR5cGUiOiAiaW50IgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJjcmVkaXRfaGlzdG9yeSIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImZvcmVpZ25fd29ya2VyIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicHJvcGVydHkiLAogICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJpbnN0YWxsbWVudF9yYXRlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicHVycG9zZSIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImNoZWNraW5nX3N0YXR1cyIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiZGVidG9yc19ndWFyYW50b3JzIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAic2F2aW5nc19hY2NvdW50IiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiZHVyYXRpb25fbW9udGhzIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiY3JlZGl0X2Ftb3VudCIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJpbnQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImdlbmRlciIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImxhYmVsX3ZhbHVlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJuYW1lIjogInNjb3JlIiwKICAgICAgICAgICAgICAidHlwZSI6ICJpbnQiCiAgICAgICAgICAgfQogICAgICAgIF0KICAgICB9Cn0K"
        },
        {
          "assetId": "67f1240a-0440-4abb-b9e0-98cac8e94746",
          "name": "schema_input.avsc",
          "assetType": "FILE",
          "assetRole": "MODEL_SCHEMA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "filename": "schema_input.avsc",
          "fileFormat": "UNKNOWN",
          "localFile": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/schema_input.avsc",
          "fileSize": 6430,
          "fileContentString": "{\n   \"name\": \"input_schema.avsc\",\n   \"type\": \"record\",\n   \"fields\": [\n      {\n         \"name\": \"id\",\n         \"type\": \"int\",\n         \"dataClass\": \"numerical\",\n         \"role\": \"identifier\",\n         \"protectedClass\": false,\n         \"driftCandidate\": false,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"duration_months\",\n         \"type\": \"int\",\n         \"dataClass\": \"numerical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"credit_amount\",\n         \"type\": \"float\",\n         \"dataClass\": \"numerical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false,\n         \"isAmountField\": true\n      },\n      {\n         \"name\": \"installment_rate\",\n         \"type\": \"int\",\n         \"dataClass\": \"numerical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"present_residence_since\",\n         \"type\": \"int\",\n         \"dataClass\": \"numerical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"age_years\",\n         \"type\": \"int\",\n         \"dataClass\": \"numerical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"number_existing_credits\",\n         \"type\": \"int\",\n         \"dataClass\": \"numerical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"checking_status\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"credit_history\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"purpose\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"savings_account\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"present_employment_since\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"debtors_guarantors\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"property\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"installment_plans\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"housing\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"job\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"number_people_liable\",\n         \"type\": \"int\",\n         \"dataClass\": \"numerical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"telephone\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"foreign_worker\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": false\n      },\n      {\n         \"name\": \"gender\",\n         \"type\": \"string\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"predictor\",\n         \"protectedClass\": true,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": true\n      },\n      {\n         \"name\": \"label_value\",\n         \"type\": \"int\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"label\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": true,\n         \"positiveClassLabel\": 1\n      },\n      {\n         \"name\": \"score\",\n         \"type\": \"int\",\n         \"dataClass\": \"categorical\",\n         \"role\": \"score\",\n         \"protectedClass\": false,\n         \"driftCandidate\": true,\n         \"specialValues\": [],\n         \"scoringOptional\": true\n      }\n   ]\n}",
          "fileContent": "ewogICAibmFtZSI6ICJpbnB1dF9zY2hlbWEuYXZzYyIsCiAgICJ0eXBlIjogInJlY29yZCIsCiAgICJmaWVsZHMiOiBbCiAgICAgIHsKICAgICAgICAgIm5hbWUiOiAiaWQiLAogICAgICAgICAidHlwZSI6ICJpbnQiLAogICAgICAgICAiZGF0YUNsYXNzIjogIm51bWVyaWNhbCIsCiAgICAgICAgICJyb2xlIjogImlkZW50aWZpZXIiLAogICAgICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogZmFsc2UsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgICB9LAogICAgICB7CiAgICAgICAgICJuYW1lIjogImR1cmF0aW9uX21vbnRocyIsCiAgICAgICAgICJ0eXBlIjogImludCIsCiAgICAgICAgICJkYXRhQ2xhc3MiOiAibnVtZXJpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgICB9LAogICAgICB7CiAgICAgICAgICJuYW1lIjogImNyZWRpdF9hbW91bnQiLAogICAgICAgICAidHlwZSI6ICJmbG9hdCIsCiAgICAgICAgICJkYXRhQ2xhc3MiOiAibnVtZXJpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZSwKICAgICAgICAgImlzQW1vdW50RmllbGQiOiB0cnVlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgIm5hbWUiOiAiaW5zdGFsbG1lbnRfcmF0ZSIsCiAgICAgICAgICJ0eXBlIjogImludCIsCiAgICAgICAgICJkYXRhQ2xhc3MiOiAibnVtZXJpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgICB9LAogICAgICB7CiAgICAgICAgICJuYW1lIjogInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlIiwKICAgICAgICAgInR5cGUiOiAiaW50IiwKICAgICAgICAgImRhdGFDbGFzcyI6ICJudW1lcmljYWwiLAogICAgICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgIm5hbWUiOiAiYWdlX3llYXJzIiwKICAgICAgICAgInR5cGUiOiAiaW50IiwKICAgICAgICAgImRhdGFDbGFzcyI6ICJudW1lcmljYWwiLAogICAgICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgIm5hbWUiOiAibnVtYmVyX2V4aXN0aW5nX2NyZWRpdHMiLAogICAgICAgICAidHlwZSI6ICJpbnQiLAogICAgICAgICAiZGF0YUNsYXNzIjogIm51bWVyaWNhbCIsCiAgICAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgICAgfSwKICAgICAgewogICAgICAgICAibmFtZSI6ICJjaGVja2luZ19zdGF0dXMiLAogICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgICB9LAogICAgICB7CiAgICAgICAgICJuYW1lIjogImNyZWRpdF9oaXN0b3J5IiwKICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgImRhdGFDbGFzcyI6ICJjYXRlZ29yaWNhbCIsCiAgICAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgICAgfSwKICAgICAgewogICAgICAgICAibmFtZSI6ICJwdXJwb3NlIiwKICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgImRhdGFDbGFzcyI6ICJjYXRlZ29yaWNhbCIsCiAgICAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgICAgfSwKICAgICAgewogICAgICAgICAibmFtZSI6ICJzYXZpbmdzX2FjY291bnQiLAogICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgICB9LAogICAgICB7CiAgICAgICAgICJuYW1lIjogInByZXNlbnRfZW1wbG95bWVudF9zaW5jZSIsCiAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgIm5hbWUiOiAiZGVidG9yc19ndWFyYW50b3JzIiwKICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgImRhdGFDbGFzcyI6ICJjYXRlZ29yaWNhbCIsCiAgICAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgICAgfSwKICAgICAgewogICAgICAgICAibmFtZSI6ICJwcm9wZXJ0eSIsCiAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgIm5hbWUiOiAiaW5zdGFsbG1lbnRfcGxhbnMiLAogICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgICB9LAogICAgICB7CiAgICAgICAgICJuYW1lIjogImhvdXNpbmciLAogICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgICB9LAogICAgICB7CiAgICAgICAgICJuYW1lIjogImpvYiIsCiAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAgIm5hbWUiOiAibnVtYmVyX3Blb3BsZV9saWFibGUiLAogICAgICAgICAidHlwZSI6ICJpbnQiLAogICAgICAgICAiZGF0YUNsYXNzIjogIm51bWVyaWNhbCIsCiAgICAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgICAgfSwKICAgICAgewogICAgICAgICAibmFtZSI6ICJ0ZWxlcGhvbmUiLAogICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgICB9LAogICAgICB7CiAgICAgICAgICJuYW1lIjogImZvcmVpZ25fd29ya2VyIiwKICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgImRhdGFDbGFzcyI6ICJjYXRlZ29yaWNhbCIsCiAgICAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgICAgfSwKICAgICAgewogICAgICAgICAibmFtZSI6ICJnZW5kZXIiLAogICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgICAgInByb3RlY3RlZENsYXNzIjogdHJ1ZSwKICAgICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgICAgInNjb3JpbmdPcHRpb25hbCI6IHRydWUKICAgICAgfSwKICAgICAgewogICAgICAgICAibmFtZSI6ICJsYWJlbF92YWx1ZSIsCiAgICAgICAgICJ0eXBlIjogImludCIsCiAgICAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAgICAicm9sZSI6ICJsYWJlbCIsCiAgICAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAgICAic2NvcmluZ09wdGlvbmFsIjogdHJ1ZSwKICAgICAgICAgInBvc2l0aXZlQ2xhc3NMYWJlbCI6IDEKICAgICAgfSwKICAgICAgewogICAgICAgICAibmFtZSI6ICJzY29yZSIsCiAgICAgICAgICJ0eXBlIjogImludCIsCiAgICAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAgICAicm9sZSI6ICJzY29yZSIsCiAgICAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAgICAic2NvcmluZ09wdGlvbmFsIjogdHJ1ZQogICAgICB9CiAgIF0KfQ=="
        },
        {
          "assetId": "11492650-b17b-4871-a4af-5e254e0ffe7e",
          "name": "metadata.json",
          "assetType": "FILE",
          "assetRole": "MODEL_METADATA",
          "metaData": {
            "custom": {},
            "tags": []
          },
          "repositoryInfo": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "importedRepository": {
            "repositoryType": "GIT_REPO",
            "repositoryDirectory": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7",
            "repositoryRemote": "https://github.com/modelop/lab_model_one.git",
            "repositoryBranch": "master",
            "lastCommitId": "d12575ce5ae43d9c1ac95090c504fbe2ded232c1",
            "lastSyncStatus": "SUCCESS",
            "lastSyncMessages": "2023-10-18T18:20:04.492Z: https://github.com/modelop/lab_model_one.git successfully updated",
            "lastSyncDate": "2023-10-18T18:20:04.492Z",
            "lastCommitDate": "2023-08-22T22:45:07Z"
          },
          "filename": "metadata.json",
          "fileFormat": "JSON",
          "localFile": "/tmp/model-manage-repos/master/2eb14517-d72a-4e6d-9a8d-b03189c2f3a7/metadata.json",
          "fileSize": 806,
          "fileContentString": "{\n    \"modelMethodology\": \"Classification\",\n    \"roi\": {\n        \"baselineMetricsTNR\": 0.531,\n        \"baselineMetricsTPR\": 0.877,\n        \"costMultipliersTP\": 1.5,\n        \"costMultipliersTN\": 2,\n        \"costMultipliersFP\": -2,\n        \"costMultipliersFN\": -1.5\n    },\n    \"custom\" : {\n      \"Business Case Summary\" : \"\",\n      \"Owners\" : {\n        \"Business Owner\" : \"Jane Doe\",\n        \"IT Owner\" : \"John Smith\"\n      },\n      \"Governance Officer\" : {\n        \"Governance Executive\" : \"Jim Dean\",\n        \"Model Risk Officer\" : \"Roger Lyle\",\n        \"Model Validator\" : \"Sam Quinn\"\n      },\n      \"Contains PII_PHI\" : \"true\",\n      \"Security and Data Approval\" : \"NOT REVIEWED\",\n      \"Data Use Approval\" : \"NOT REVIEWED\",\n      \"Is Customer Facing\" : \"false\",\n      \"model_NonModel\" : \"Model\"\n    }\n}\n",
          "fileContent": "ewogICAgIm1vZGVsTWV0aG9kb2xvZ3kiOiAiQ2xhc3NpZmljYXRpb24iLAogICAgInJvaSI6IHsKICAgICAgICAiYmFzZWxpbmVNZXRyaWNzVE5SIjogMC41MzEsCiAgICAgICAgImJhc2VsaW5lTWV0cmljc1RQUiI6IDAuODc3LAogICAgICAgICJjb3N0TXVsdGlwbGllcnNUUCI6IDEuNSwKICAgICAgICAiY29zdE11bHRpcGxpZXJzVE4iOiAyLAogICAgICAgICJjb3N0TXVsdGlwbGllcnNGUCI6IC0yLAogICAgICAgICJjb3N0TXVsdGlwbGllcnNGTiI6IC0xLjUKICAgIH0sCiAgICAiY3VzdG9tIiA6IHsKICAgICAgIkJ1c2luZXNzIENhc2UgU3VtbWFyeSIgOiAiIiwKICAgICAgIk93bmVycyIgOiB7CiAgICAgICAgIkJ1c2luZXNzIE93bmVyIiA6ICJKYW5lIERvZSIsCiAgICAgICAgIklUIE93bmVyIiA6ICJKb2huIFNtaXRoIgogICAgICB9LAogICAgICAiR292ZXJuYW5jZSBPZmZpY2VyIiA6IHsKICAgICAgICAiR292ZXJuYW5jZSBFeGVjdXRpdmUiIDogIkppbSBEZWFuIiwKICAgICAgICAiTW9kZWwgUmlzayBPZmZpY2VyIiA6ICJSb2dlciBMeWxlIiwKICAgICAgICAiTW9kZWwgVmFsaWRhdG9yIiA6ICJTYW0gUXVpbm4iCiAgICAgIH0sCiAgICAgICJDb250YWlucyBQSUlfUEhJIiA6ICJ0cnVlIiwKICAgICAgIlNlY3VyaXR5IGFuZCBEYXRhIEFwcHJvdmFsIiA6ICJOT1QgUkVWSUVXRUQiLAogICAgICAiRGF0YSBVc2UgQXBwcm92YWwiIDogIk5PVCBSRVZJRVdFRCIsCiAgICAgICJJcyBDdXN0b21lciBGYWNpbmciIDogImZhbHNlIiwKICAgICAgIm1vZGVsX05vbk1vZGVsIiA6ICJNb2RlbCIKICAgIH0KfQo="
        }
      ],
      "gitDifferences": [],
      "associatedModels": [],
      "requiredAssets": []
    },
    "metaData": {
      "custom": {},
      "tags": [
        "MRM"
      ],
      "name": "Young Jedi's Demo Model - 2023-10-18T18:20:31.201Z",
      "expirationDate": "2023-11-17T18:35:13.043Z",
      "modelStage": "QA"
    },
    "associatedModels": [],
    "modelDocuments": [
      {
        "assetId": "c5c381a4-bf8f-4674-bded-9eb1de9d2b2c",
        "name": "c5c381a4-bf8f-4674-bded-9eb1de9d2b2c.docx",
        "assetType": "EXTERNAL_FILE",
        "assetRole": "MODEL_DOCUMENTATION",
        "metaData": {
          "custom": {},
          "tags": []
        },
        "repositoryInfo": {
          "repositoryType": "S3_REPOSITORY",
          "secure": true,
          "host": "modelop-demo.s3.us-east-2.amazonaws.com",
          "port": 443,
          "region": "us-east-2"
        },
        "contentHash": {
          "hashType": "SHA-256",
          "hexString": "afd594922849e12c8cbf79f8af74d0f5be0c59df4fd502eaad10a974608155d8"
        },
        "fileUrl": "https://modelop-demo.s3.us-east-2.amazonaws.com/c5c381a4-bf8f-4674-bded-9eb1de9d2b2c.docx",
        "browserUrl": "https://s3.console.aws.amazon.com/s3/object/modelop-demo?region=us-east-2&prefix=c5c381a4-bf8f-4674-bded-9eb1de9d2b2c.docx",
        "filename": "ModelReviewDocument.docx",
        "fileFormat": "WORD",
        "fileSize": 566278,
        "createdDate": "2023-10-18T18:31:30.668Z"
      }
    ],
    "targetRuntimes": [
      {
        "engineType": "MODEL_OP_ENGINE",
        "inputEndpoints": [],
        "outputEndpoints": [],
        "tags": [
          "MRM"
        ],
        "inProduction": false,
        "lastActivity": {}
      }
    ]
  },
  "modelWritesOutput": false,
  "usePandasCSVConverter": true,
  "stopOnBadRecords": true,
  "additionalAssets": [],
  "_links": {
    "self": {
      "href": "https://lab.modelop.center/model-manage/api/modelBatchTestJob/3f6799e4-fbc9-4286-b7a4-12eb9af65690"
    },
    "modelBatchTestJob": {
      "href": "https://lab.modelop.center/model-manage/api/modelBatchTestJob/3f6799e4-fbc9-4286-b7a4-12eb9af65690"
    }
  }
}