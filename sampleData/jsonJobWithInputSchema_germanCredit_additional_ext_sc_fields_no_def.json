{
  "id" : "21e0561c-7894-4f8a-a44c-a3fff99260b1",
  "group" : "modelop",
  "version" : 4,
  "jobType" : "MODEL_BATCH_TEST_JOB",
  "createdDate" : "2022-03-31T05:59:57.765Z",
  "lastModifiedDate" : "2022-03-31T06:00:14.971Z",
  "createdBy" : "SYSTEM",
  "lastModifiedBy" : "SYSTEM",
  "jobStatus" : "COMPLETE",
  "jobResult" : "SUCCESS",
  "jobMessages" : [ "2022/3/31 5:59:59 batch job received", "2022/3/31 5:59:59 loading batch job", "2022/3/31 5:59:59 [info] Data processing function for slot 0: metrics", "2022/3/31 5:59:59 [info] Data processing function for slot 1: metrics", "2022/3/31 5:59:59 [info] Data processing function for slot 2: metrics", "2022/3/31 5:59:59 [info] input data list length:  2", "2022/3/31 5:59:59 [info] input slots list length: 2", "2022/3/31 5:59:59 [info] output data list length:  1", "2022/3/31 5:59:59 [info] output slots list length: 1", "2022/3/31 5:59:59 [info] attach_stream <<\"21e0561c-7894-4f8a-a44c-a3fff99260b1\">> 1 <<\"test_result.json\">>", "2022/3/31 5:59:59 [info] attach_stream (external file) <<\"21e0561c-7894-4f8a-a44c-a3fff99260b1\">> 0 <<\"baseline_data.json\">>", "2022/3/31 5:59:59 [info] sensor activated: manifold.1.records.count [<0.214.0>]", "2022/3/31 5:59:59 [info] sensor activated: manifold.1.records.size [<0.215.0>]", "2022/3/31 5:59:59 [info] sensor activated: manifold.1.records.rejected.by.encoding [<0.212.0>]", "2022/3/31 5:59:59 [info] sensor activated: manifold.1.records.rejected.by.schema [<0.218.0>]", "2022/3/31 5:59:59 [info] get_credentials for: <<\"modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/fd534a54-69a2-478a-8f19-0cc0a191cc11.json\">>", "2022/3/31 5:59:59 [info] credentials found with path: <<>>", "2022/3/31 5:59:59 [info] attach_stream (external file) <<\"21e0561c-7894-4f8a-a44c-a3fff99260b1\">> 2 <<\"comparator_data.json\">>", "2022/3/31 5:59:59 [info] sensor activated: manifold.0.records.count [<0.217.0>]", "2022/3/31 5:59:59 [info] sensor activated: manifold.0.records.size [<0.211.0>]", "2022/3/31 5:59:59 [info] sensor activated: manifold.0.records.rejected.by.encoding [<0.210.0>]", "2022/3/31 5:59:59 [info] sensor activated: manifold.0.records.rejected.by.schema [<0.213.0>]", "2022/3/31 5:59:59 [info] get_credentials for: <<\"modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/768bf3ca-7160-416c-bd43-2e9d5ac443d4.json\">>", "2022/3/31 5:59:59 [info] credentials found with path: <<>>", "2022/3/31 5:59:59 [info] Batch 21e0561c-7894-4f8a-a44c-a3fff99260b1 has been fully loaded", "2022/3/31 5:59:59 [info] Batch 21e0561c-7894-4f8a-a44c-a3fff99260b1 loaded..", "2022/3/31 5:59:59 [info] Directory, /tmp/playground/104506596/outputDir, successfully created", "2022/3/31 5:59:59 [info] fetching file \"sampleData/jsonJobGermanCredit_withInputSchema_error.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/cbe970c0-97a2-4628-a924-66a1163e839f.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 5:59:59 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/cbe970c0-97a2-4628-a924-66a1163e839f.json\">>", "2022/3/31 5:59:59 [info] credentials found with path: <<>>", "2022/3/31 5:59:59 [info] fetch of file \"sampleData/jsonJobGermanCredit_withInputSchema_error.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/cbe970c0-97a2-4628-a924-66a1163e839f.json\" complete: ok", "2022/3/31 5:59:59 [info] fetching file \"sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/ab92bd05-5598-4b3f-8bfe-5c815ea07cf5.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 5:59:59 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/ab92bd05-5598-4b3f-8bfe-5c815ea07cf5.json\">>", "2022/3/31 5:59:59 [info] credentials found with path: <<>>", "2022/3/31 5:59:59 [info] fetch of file \"sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/ab92bd05-5598-4b3f-8bfe-5c815ea07cf5.json\" complete: ok", "2022/3/31 5:59:59 [info] fetching file \"sampleData/df_baseline_scored.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/af051dbb-ae2d-4deb-9b61-bca6d93c6591.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 5:59:59 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/af051dbb-ae2d-4deb-9b61-bca6d93c6591.json\">>", "2022/3/31 5:59:59 [info] credentials found with path: <<>>", "2022/3/31 5:59:59 [info] fetch of file \"sampleData/df_baseline_scored.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/af051dbb-ae2d-4deb-9b61-bca6d93c6591.json\" complete: ok", "2022/3/31 5:59:59 [info] fetching file \"sampleData/jsonJobGermanCredit_without_input_schema_error.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/d6a8fd2f-7d5a-4b1a-8076-ccaa3ac1f986.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 5:59:59 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/d6a8fd2f-7d5a-4b1a-8076-ccaa3ac1f986.json\">>", "2022/3/31 5:59:59 [info] credentials found with path: <<>>", "2022/3/31 5:59:59 [info] fetch of file \"sampleData/jsonJobGermanCredit_without_input_schema_error.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/d6a8fd2f-7d5a-4b1a-8076-ccaa3ac1f986.json\" complete: ok", "2022/3/31 5:59:59 [info] fetching file \"sampleData/df_sample.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/3bc0e9a0-d346-48d8-91c3-7a7f52382641.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 5:59:59 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/3bc0e9a0-d346-48d8-91c3-7a7f52382641.json\">>", "2022/3/31 5:59:59 [info] credentials found with path: <<>>", "2022/3/31 6:00:00 [info] fetch of file \"sampleData/df_sample.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/3bc0e9a0-d346-48d8-91c3-7a7f52382641.json\" complete: ok", "2022/3/31 6:00:00 [info] fetching file \"sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/6e70592b-cb44-4c91-b127-c4f0bfe8f7d7.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 6:00:00 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/6e70592b-cb44-4c91-b127-c4f0bfe8f7d7.json\">>", "2022/3/31 6:00:00 [info] credentials found with path: <<>>", "2022/3/31 6:00:00 [info] fetch of file \"sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/6e70592b-cb44-4c91-b127-c4f0bfe8f7d7.json\" complete: ok", "2022/3/31 6:00:00 [info] fetching file \"sampleData/df_baseline.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/9bb2e768-efe2-4c16-8a30-57058d9b2051.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 6:00:00 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/9bb2e768-efe2-4c16-8a30-57058d9b2051.json\">>", "2022/3/31 6:00:00 [info] credentials found with path: <<>>", "2022/3/31 6:00:00 [info] fetch of file \"sampleData/df_baseline.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/9bb2e768-efe2-4c16-8a30-57058d9b2051.json\" complete: ok", "2022/3/31 6:00:00 [info] fetching file \"sampleData/jsonJobWithInputSchema_germanCredit_updated.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/afb1ab17-c3b2-41be-aa80-e80bf6ea197e.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 6:00:00 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/afb1ab17-c3b2-41be-aa80-e80bf6ea197e.json\">>", "2022/3/31 6:00:00 [info] credentials found with path: <<>>", "2022/3/31 6:00:00 [info] fetch of file \"sampleData/jsonJobWithInputSchema_germanCredit_updated.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/afb1ab17-c3b2-41be-aa80-e80bf6ea197e.json\" complete: ok", "2022/3/31 6:00:00 [info] fetching file \"sampleData/df_sample_scored.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/e8155821-2c32-4ae2-b7d1-8dd7d88601f2.json\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 6:00:00 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/e8155821-2c32-4ae2-b7d1-8dd7d88601f2.json\">>", "2022/3/31 6:00:00 [info] credentials found with path: <<>>", "2022/3/31 6:00:00 [info] fetch of file \"sampleData/df_sample_scored.json\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/e8155821-2c32-4ae2-b7d1-8dd7d88601f2.json\" complete: ok", "2022/3/31 6:00:00 [info] fetching file \".gitignore\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/a02385bd-f56d-4ee1-9bf8-761ff74d064b.gitignore\" and placing it here: \"/tmp/playground/104506596\"", "2022/3/31 6:00:00 [info] get_credentials for: <<\"modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/a02385bd-f56d-4ee1-9bf8-761ff74d064b.gitignore\">>", "2022/3/31 6:00:00 [info] credentials found with path: <<>>", "2022/3/31 6:00:00 [info] fetch of file \".gitignore\" from \"http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/a02385bd-f56d-4ee1-9bf8-761ff74d064b.gitignore\" complete: ok", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/requirements.txt\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/README.md\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/metadata.json\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/required_assets.json\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/__moc_runtime/model_definition.job.json\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/__moc_runtime/required_libraries_filenames.txt\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/volumetrics_identifier_comparison_monitor.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/dashboard_model.dmn\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/bias_disparity_monitor.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/performance_monitor.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/data_drift_monitor.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/dashboard_service.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/test_main_dashboard.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/concept_drift_monitor.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/volumetrics_count_monitor.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/actual_roi_monitor.py\">>", "2022/3/31 6:00:00 [info] Attempting to write to file: <<\"/tmp/playground/104506596/stability_monitor.py\">>", "2022/3/31 6:00:00 [info] (pre) MODEL-CONSOLE: using 'python3 -m venv' to create local env for requirements file(s)", "2022/3/31 6:00:00 [info] (pre) MODEL-CONSOLE: env created and activated", "2022/3/31 6:00:00 [info] (pre) MODEL-CONSOLE: About to install reqs from file: requirements.txt", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: modelop_sdk>=0.3.2 in /usr/local/lib/python3.8/site-packages (from -r requirements.txt (line 1)) (0.3.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: modelop>=0.13.0 in /usr/local/lib/python3.8/site-packages (from -r requirements.txt (line 2)) (0.13.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pandas<=1.2.3,>=1.0.0 in /usr/local/lib/python3.8/site-packages (from modelop_sdk>=0.3.2->-r requirements.txt (line 1)) (1.2.3)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: requests==2.26.0 in /usr/local/lib/python3.8/site-packages (from modelop_sdk>=0.3.2->-r requirements.txt (line 1)) (2.26.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.8/site-packages (from requests==2.26.0->modelop_sdk>=0.3.2->-r requirements.txt (line 1)) (2.0.12)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.8/site-packages (from requests==2.26.0->modelop_sdk>=0.3.2->-r requirements.txt (line 1)) (3.3)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/site-packages (from requests==2.26.0->modelop_sdk>=0.3.2->-r requirements.txt (line 1)) (1.26.9)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/site-packages (from requests==2.26.0->modelop_sdk>=0.3.2->-r requirements.txt (line 1)) (2021.10.8)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: statsmodels==0.12.2 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (0.12.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: scikit-learn==0.22 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (0.22)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: numpy>=1.0.0 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (1.22.3)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: aequitas==0.42.0 in /usr/local/lib/python3.8/site-packages (from modelop>=0.13.0->-r requirements.txt (line 2)) (0.42.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: millify==0.1.1 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.1.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: Flask==0.12.2 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.12.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: markdown2==2.3.5 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.3.5)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: Flask-Bootstrap==3.3.7.1 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.3.7.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: xhtml2pdf==0.2.2 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.2.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: matplotlib>=3.0.3 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.5.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: tabulate==0.8.2 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.8.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: seaborn>=0.9.0 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.11.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: ohio>=0.2.0 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.5.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: SQLAlchemy>=1.1.1 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.4.32)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (6.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: altair==4.1.0 in /usr/local/lib/python3.8/site-packages (from aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (4.1.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: scipy>=0.17.0 in /usr/local/lib/python3.8/site-packages (from scikit-learn==0.22->modelop>=0.13.0->-r requirements.txt (line 2)) (1.8.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.8/site-packages (from scikit-learn==0.22->modelop>=0.13.0->-r requirements.txt (line 2)) (1.1.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: patsy>=0.5 in /usr/local/lib/python3.8/site-packages (from statsmodels==0.12.2->modelop>=0.13.0->-r requirements.txt (line 2)) (0.5.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: jsonschema in /usr/local/lib/python3.8/site-packages (from altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (4.4.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: toolz in /usr/local/lib/python3.8/site-packages (from altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.11.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: entrypoints in /usr/local/lib/python3.8/site-packages (from altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.4)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: jinja2 in /usr/local/lib/python3.8/site-packages (from altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.0.3)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: itsdangerous>=0.21 in /usr/local/lib/python3.8/site-packages (from Flask==0.12.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.1.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: Werkzeug>=0.7 in /usr/local/lib/python3.8/site-packages (from Flask==0.12.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.0.3)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: click>=2.0 in /usr/local/lib/python3.8/site-packages (from Flask==0.12.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (8.0.4)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: dominate in /usr/local/lib/python3.8/site-packages (from Flask-Bootstrap==3.3.7.1->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.6.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: visitor in /usr/local/lib/python3.8/site-packages (from Flask-Bootstrap==3.3.7.1->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.1.3)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: html5lib>=1.0 in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: httplib2 in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.20.4)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pyPdf2 in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.26.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: Pillow in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (9.0.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: reportlab>=3.0 in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.6.8)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: six in /usr/local/lib/python3.8/site-packages (from xhtml2pdf==0.2.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.16.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/site-packages (from pandas<=1.2.3,>=1.0.0->modelop_sdk>=0.3.2->-r requirements.txt (line 1)) (2021.3)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/site-packages (from pandas<=1.2.3,>=1.0.0->modelop_sdk>=0.3.2->-r requirements.txt (line 1)) (2.8.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.11.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pyparsing>=2.2.1 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.0.7)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.4.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (21.3)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.8/site-packages (from matplotlib>=3.0.3->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (4.30.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.8/site-packages (from SQLAlchemy>=1.1.1->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (1.1.2)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: webencodings in /usr/local/lib/python3.8/site-packages (from html5lib>=1.0->xhtml2pdf==0.2.2->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.5.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.8/site-packages (from jinja2->altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (2.1.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.8/site-packages (from jsonschema->altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (21.4.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: importlib-resources>=1.4.0 in /usr/local/lib/python3.8/site-packages (from jsonschema->altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (5.4.0)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.8/site-packages (from jsonschema->altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (0.18.1)", "2022/3/31 6:00:01 [info] (pre) MODEL-CONSOLE: Requirement already satisfied: zipp>=3.1.0 in /usr/local/lib/python3.8/site-packages (from importlib-resources>=1.4.0->jsonschema->altair==4.1.0->aequitas==0.42.0->modelop>=0.13.0->-r requirements.txt (line 2)) (3.7.0)", "2022/3/31 6:00:02 [info] (pre) MODEL-CONSOLE: installation via requirements.txt complete", "2022/3/31 6:00:03 [info] (pre) MODEL-CONSOLE: FastScore model runner for Python", "2022/3/31 6:00:03 [info] state changes to RUNNING", "2022/3/31 6:00:04 [info] MODEL-CONSOLE: [2022-03-31 06:00:04 +0000] WARNING - Matplotlib created a temporary config/cache directory at /tmp/matplotlib-bh57j7xj because the default path (/fastscore/.cache/matplotlib) is not a writable directory; it is highly recommended to set the MPLCONFIGDIR environment variable to a writable directory, in particular to speed up the import of Matplotlib and to better support multiprocessing.", "2022/3/31 6:00:05 [info] MODEL-CONSOLE: [2022-03-31 06:00:05 +0000] INFO - generated new fontManager", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: (RecordsetBatcher) threshold set to 2", "2022/3/31 6:00:06 [info] init succeeded", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: (RecordsetBatcher) adding recordset at slot 2", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: (RecordsetBatcher) current size: 1", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: (RecordsetBatcher) threshold not reached", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: (RecordsetBatcher) adding recordset at slot 0", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: (RecordsetBatcher) current size: 2", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: (RecordsetBatcher) deliver recordsets", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Building monitors", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Executing monitors", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - ROI parameters: {'costMultipliersTP': 1.5, 'costMultipliersTN': 2.0, 'costMultipliersFP': -2.0, 'costMultipliersFN': -1.5, 'baselineMetricsTPR': 0.531, 'baselineMetricsTNR': 0.877}", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] ERROR - Something went wrong with the ROI monitor: 'Error while extracting required model_metadata.monitoring.performance.positive_class_label from model_metadata None fields found marked as `positiveClassLabel` '", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Executing Data Drift KS monitor", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Input schema definition: {'type': 'record', 'name': 'input_schema.avsc', 'fields': [{'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'identifier', 'protectedClass': False, 'name': 'id', 'driftCandidate': False, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'duration_months', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'float', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_amount', 'isAmountField': True, 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_rate', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_residence_since', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'age_years', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_existing_credits', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'checking_status', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_history', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'purpose', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'savings_account', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_employment_since', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'debtors_guarantors', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'property', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_plans', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'housing', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'job', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_people_liable', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'telephone', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'foreign_worker', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': True, 'role': 'predictor', 'protectedClass': True, 'name': 'gender', 'driftCandidate':...", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - numerical_columns: ['duration_months', 'credit_amount', 'installment_rate', 'present_residence_since', 'age_years', 'number_existing_credits', 'number_people_liable']", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - categorical_columns: ['checking_status', 'credit_history', 'purpose', 'savings_account', 'present_employment_since', 'debtors_guarantors', 'property', 'installment_plans', 'housing', 'job', 'telephone', 'foreign_worker', 'gender']", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO -  data_drift_ks_result {'data_drift_max_p_value': 0.9989}", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Data Drift KS monitor successfully executed", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Input schema definition: {'type': 'record', 'name': 'input_schema.avsc', 'fields': [{'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'identifier', 'protectedClass': False, 'name': 'id', 'driftCandidate': False, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'duration_months', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'float', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_amount', 'isAmountField': True, 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_rate', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_residence_since', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'age_years', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_existing_credits', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'checking_status', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_history', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'purpose', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'savings_account', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_employment_since', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'debtors_guarantors', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'property', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_plans', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'housing', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'job', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_people_liable', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'telephone', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'foreign_worker', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': True, 'role': 'predictor', 'protectedClass': True, 'name': 'gender', 'driftCandidate':...", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Input schema definition: {'type': 'record', 'name': 'input_schema.avsc', 'fields': [{'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'identifier', 'protectedClass': False, 'name': 'id', 'driftCandidate': False, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'duration_months', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'float', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_amount', 'isAmountField': True, 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_rate', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_residence_since', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'age_years', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_existing_credits', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'checking_status', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_history', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'purpose', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'savings_account', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_employment_since', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'debtors_guarantors', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'property', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_plans', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'housing', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'job', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_people_liable', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'telephone', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'foreign_worker', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': True, 'role': 'predictor', 'protectedClass': True, 'name': 'gender', 'driftCandidate':...", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - numerical_columns: ['duration_months', 'credit_amount', 'installment_rate', 'present_residence_since', 'age_years', 'number_existing_credits', 'number_people_liable']", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - categorical_columns: ['checking_status', 'credit_history', 'purpose', 'savings_account', 'present_employment_since', 'debtors_guarantors', 'property', 'installment_plans', 'housing', 'job', 'telephone', 'foreign_worker', 'gender']", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - target_column: score", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - output_type: categorical", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Input schema definition: {'type': 'record', 'name': 'input_schema.avsc', 'fields': [{'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'identifier', 'protectedClass': False, 'name': 'id', 'driftCandidate': False, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'duration_months', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'float', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_amount', 'isAmountField': True, 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_rate', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_residence_since', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'age_years', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_existing_credits', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'checking_status', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_history', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'purpose', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'savings_account', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_employment_since', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'debtors_guarantors', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'property', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_plans', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'housing', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'job', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_people_liable', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'telephone', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'foreign_worker', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': True, 'role': 'predictor', 'protectedClass': True, 'name': 'gender', 'driftCandidate':...", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - label_column: label_value", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - score_column: score", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Input schema definition: {'type': 'record', 'name': 'input_schema.avsc', 'fields': [{'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'identifier', 'protectedClass': False, 'name': 'id', 'driftCandidate': False, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'duration_months', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'float', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_amount', 'isAmountField': True, 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_rate', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_residence_since', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'age_years', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_existing_credits', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'checking_status', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_history', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'purpose', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'savings_account', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_employment_since', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'debtors_guarantors', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'property', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_plans', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'housing', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'job', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_people_liable', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'telephone', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'foreign_worker', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': True, 'role': 'predictor', 'protectedClass': True, 'name': 'gender', 'driftCandidate':...", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - predictors: ['checking_status', 'credit_history', 'purpose', 'savings_account', 'present_employment_since', 'debtors_guarantors', 'property', 'installment_plans', 'housing', 'job', 'telephone', 'foreign_worker', 'gender', 'duration_months', 'credit_amount', 'installment_rate', 'present_residence_since', 'age_years', 'number_existing_credits', 'number_people_liable']", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - feature_dataclass: {'duration_months': 'numerical', 'credit_amount': 'numerical', 'installment_rate': 'numerical', 'present_residence_since': 'numerical', 'age_years': 'numerical', 'number_existing_credits': 'numerical', 'checking_status': 'categorical', 'credit_history': 'categorical', 'purpose': 'categorical', 'savings_account': 'categorical', 'present_employment_since': 'categorical', 'debtors_guarantors': 'categorical', 'property': 'categorical', 'installment_plans': 'categorical', 'housing': 'categorical', 'job': 'categorical', 'number_people_liable': 'numerical', 'telephone': 'categorical', 'foreign_worker': 'categorical', 'gender': 'categorical', 'score': 'categorical'}", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - special_values: {'duration_months': [], 'credit_amount': [], 'installment_rate': [], 'present_residence_since': [], 'age_years': [], 'number_existing_credits': [], 'checking_status': [], 'credit_history': [], 'purpose': [], 'savings_account': [], 'present_employment_since': [], 'debtors_guarantors': [], 'property': [], 'installment_plans': [], 'housing': [], 'job': [], 'number_people_liable': [], 'telephone': [], 'foreign_worker': [], 'gender': [], 'score': []}", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - score_column: score", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - label_column: label_value", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - weight_column: None", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for checking_status: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for credit_history: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for purpose: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] WARNING - Zero Encountered in log(eval_percent/train_percent) for purpose=A410.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: train_percent=0.013750", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: eval_percent=0.000000.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: Setting psi_calc to None.                        This bucket will be IGNORED when aggregating PSI!", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] WARNING - Zero Encountered in log(eval_percent/train_percent) for purpose=A44.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: train_percent=0.012500", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: eval_percent=0.000000.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: Setting psi_calc to None.                        This bucket will be IGNORED when aggregating PSI!", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] WARNING - Zero Encountered in log(eval_percent/train_percent) for purpose=A48.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: train_percent=0.010000", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: eval_percent=0.000000.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: Setting psi_calc to None.                        This bucket will be IGNORED when aggregating PSI!", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for savings_account: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for present_employment_since: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for debtors_guarantors: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for property: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for installment_plans: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for housing: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] INFO - Dropping the __MISSING__ bucket for job: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:06 [info] MODEL-CONSOLE: [2022-03-31 06:00:06 +0000] WARNING - Zero Encountered in log(eval_percent/train_percent) for job=A171.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: train_percent=0.023750", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: eval_percent=0.000000.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: Setting psi_calc to None.                        This bucket will be IGNORED when aggregating PSI!", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for telephone: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for foreign_worker: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for gender: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for duration_months: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for credit_amount: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for installment_rate: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for present_residence_since: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for age_years: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for number_existing_credits: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for number_people_liable: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Dropping the __MISSING__ bucket for score: no NULLs in baseline or sample DFs.", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO -  characteristic_stability_max_csi_result {'characteristic_stability_max_stability_index': 0.241827}", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Input schema definition: {'type': 'record', 'name': 'input_schema.avsc', 'fields': [{'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'identifier', 'protectedClass': False, 'name': 'id', 'driftCandidate': False, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'duration_months', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'float', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_amount', 'isAmountField': True, 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_rate', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_residence_since', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'age_years', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_existing_credits', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'checking_status', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'credit_history', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'purpose', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'savings_account', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'present_employment_since', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'debtors_guarantors', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'property', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'installment_plans', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'housing', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'job', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'int', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'number_people_liable', 'driftCandidate': True, 'dataClass': 'numerical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'telephone', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': False, 'role': 'predictor', 'protectedClass': False, 'name': 'foreign_worker', 'driftCandidate': True, 'dataClass': 'categorical'}, {'type': 'string', 'specialValues': [], 'scoringOptional': True, 'role': 'predictor', 'protectedClass': True, 'name': 'gender', 'driftCandidate':...", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - label_column: label_value", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - score_column: score", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - protected_classes: ['gender']", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] WARNING - reference_group for gender was not provided. Setting it to first observation in data: male", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - getcrosstabs: attribute columns to perform crosstabs:gender", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO -  ethical_fairness_max_ppr_disparity_result {'ethical_fairness_max_ppr_disparity': 1.0, 'ethical_fairness_min_ppr_disparity': 0.5714}", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Performing DMN evaluation", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Performing DMN evaluation using dashboard_model.dmn", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Using mocBaseURL value modelop:8090 - from MODELOP_GATEWAY_LOCATION", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - ModelOp center URL: http://modelop:8090", "2022/3/31 6:00:07 [info] MODEL-CONSOLE: [2022-03-31 06:00:07 +0000] INFO - Unsecured mode active", "2022/3/31 6:00:08 [info] MODEL-CONSOLE: [2022-03-31 06:00:08 +0000] INFO - Generating heatMap", "2022/3/31 6:00:08 [info] MODEL-CONSOLE: [2022-03-31 06:00:08 +0000] WARNING - Duplicated evaluated DMN entries found for Ethical Fairness, ignoring entry: {'color': 'Green', 'monitor_name': 'Ethical Fairness'}, and keeping first found: {'testResult': 'Red'}", "2022/3/31 6:00:08 [info] MODEL-CONSOLE: [2022-03-31 06:00:08 +0000] WARNING - Duplicated evaluated DMN entries found for Output Integrity, ignoring entry: {'color': 'Gray', 'monitor_name': 'Output Integrity'}, and keeping first found: {'testResult': 'Red'}", "2022/3/31 6:00:08 [info] MODEL-CONSOLE: [2022-03-31 06:00:08 +0000] INFO - Generating summary", "2022/3/31 6:00:08 [info] MODEL-CONSOLE: [2022-03-31 06:00:08 +0000] INFO - Generating MTR", "2022/3/31 6:00:08 [info] state changes to FINISHING", "2022/3/31 6:00:08 [info] (post) MODEL-CONSOLE: get_disparity_predefined_group()", "2022/3/31 6:00:08 [info] (post) MODEL-CONSOLE: Model runner exits", "2022/3/31 6:00:08 [info] state changes to FINISHED", "2022/3/31 6:00:08 [info] flushing slot 0", "2022/3/31 6:00:08 [info] slot 0 flushed", "2022/3/31 6:00:08 [info] flushing slot 1", "2022/3/31 6:00:08 [info] slot 1 flushed", "2022/3/31 6:00:08 [info] flushing slot 2", "2022/3/31 6:00:09 [info] slot 2 flushed", "2022/3/31 6:00:09 [info] closing file: <<\"/tmp/playground/batch-21e0561c-7894-4f8a-a44c-a3fff99260b1/test_result.json\">>", "2022/3/31 6:00:09 [info] state changes to INIT", "2022/3/31 6:00:09 batch job complete" ],
  "enableInputSchemaChecking" : false,
  "enableOutputSchemaChecking" : false,
  "jobRunTime" : 1648706399061,
  "jobWaitTime" : 1648706399043,
  "jobEndTime" : 1648706409342,
  "lastUpdateFromRuntime" : "2022-03-31T06:00:14.971Z",
  "jobParameters" : { },
  "inputData" : [ {
    "assetId" : "fd534a54-69a2-478a-8f19-0cc0a191cc11",
    "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/fd534a54-69a2-478a-8f19-0cc0a191cc11.json",
    "assetType" : "EXTERNAL_FILE",
    "assetRole" : "BASELINE_DATA",
    "metaData" : {
      "custom" : { },
      "tags" : [ ]
    },
    "repositoryInfo" : {
      "repositoryType" : "S3_REPOSITORY",
      "secure" : false,
      "host" : "modelop",
      "port" : 9000,
      "region" : "default-region"
    },
    "importedRepository" : {
      "repositoryType" : "GIT_REPO",
      "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
      "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
      "repositoryBranch" : "dashboard",
      "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
      "lastSyncStatus" : "SUCCESS",
      "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
      "lastSyncDate" : "2022-03-31T05:56:12.358Z",
      "lastCommitDate" : "2022-03-31T05:54:30Z"
    },
    "contentHash" : {
      "hashType" : "SHA-256",
      "hexString" : "e170f8ca2360e82679d4633c35b2908f93a8b41bcd63d027cd500daa19da76d3"
    },
    "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/fd534a54-69a2-478a-8f19-0cc0a191cc11.json",
    "filename" : "baseline_data.json",
    "fileFormat" : "JSON",
    "fileSize" : 382615
  }, {
    "assetId" : "768bf3ca-7160-416c-bd43-2e9d5ac443d4",
    "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/768bf3ca-7160-416c-bd43-2e9d5ac443d4.json",
    "assetType" : "EXTERNAL_FILE",
    "assetRole" : "COMPARATOR_DATA",
    "metaData" : {
      "custom" : { },
      "tags" : [ ]
    },
    "repositoryInfo" : {
      "repositoryType" : "S3_REPOSITORY",
      "secure" : false,
      "host" : "modelop",
      "port" : 9000,
      "region" : "default-region"
    },
    "importedRepository" : {
      "repositoryType" : "GIT_REPO",
      "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
      "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
      "repositoryBranch" : "dashboard",
      "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
      "lastSyncStatus" : "SUCCESS",
      "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
      "lastSyncDate" : "2022-03-31T05:56:12.358Z",
      "lastCommitDate" : "2022-03-31T05:54:30Z"
    },
    "contentHash" : {
      "hashType" : "SHA-256",
      "hexString" : "ff72c27d90eda63f11d1d21988329cae50d44101ce02d2a506b034b14d9aa3d1"
    },
    "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/768bf3ca-7160-416c-bd43-2e9d5ac443d4.json",
    "filename" : "comparator_data.json",
    "fileFormat" : "JSON",
    "fileSize" : 47857
  } ],
  "outputData" : [ {
    "assetId" : "bf4f8d5e-9d74-4055-bf92-81f47be006b3",
    "name" : "test_result.json",
    "assetType" : "FILE",
    "assetRole" : "UNKNOWN",
    "metaData" : {
      "custom" : { },
      "tags" : [ ]
    },
    "filename" : "test_result.json",
    "fileFormat" : "JSON",
    "fileSize" : 37496,
    "fileContent" : "eyJjcmVhdGVkRGF0ZSI6ICIwMy8zMS8yMDIyIDA2OjAwOjA4IiwgImFjdHVhbFJPSUFsbFRpbWUiOiAiTi9BIiwgImFsbFZvbHVtZXRyaWNNb25pdG9yUmVjb3JkQ291bnQiOiAxMDAsICJkdXJhdGlvbl9tb250aHNfa3NfcHZhbHVlIjogMC4wNjg0LCAiY3JlZGl0X2Ftb3VudF9rc19wdmFsdWUiOiAwLjAwMTIsICJpbnN0YWxsbWVudF9yYXRlX2tzX3B2YWx1ZSI6IDAuNjU3OSwgInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlX2tzX3B2YWx1ZSI6IDAuOTk4MSwgImFnZV95ZWFyc19rc19wdmFsdWUiOiAwLjk3MzQsICJudW1iZXJfZXhpc3RpbmdfY3JlZGl0c19rc19wdmFsdWUiOiAwLjg3NzEsICJudW1iZXJfcGVvcGxlX2xpYWJsZV9rc19wdmFsdWUiOiAwLjk5ODksICJkYXRhX2RyaWZ0IjogW3sidGVzdF9uYW1lIjogIktvbG1vZ29yb3YtU21pcm5vdiIsICJ0ZXN0X2NhdGVnb3J5IjogImRhdGFfZHJpZnQiLCAidGVzdF90eXBlIjogImtvbG1vZ29yb3Zfc21pcm5vdiIsICJtZXRyaWMiOiAicF92YWx1ZSIsICJ0ZXN0X2lkIjogImRhdGFfZHJpZnRfa29sbW9nb3Jvdl9zbWlybm92X3BfdmFsdWUiLCAidmFsdWVzIjogeyJkdXJhdGlvbl9tb250aHMiOiAwLjA2ODQsICJjcmVkaXRfYW1vdW50IjogMC4wMDEyLCAiaW5zdGFsbG1lbnRfcmF0ZSI6IDAuNjU3OSwgInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlIjogMC45OTgxLCAiYWdlX3llYXJzIjogMC45NzM0LCAibnVtYmVyX2V4aXN0aW5nX2NyZWRpdHMiOiAwLjg3NzEsICJudW1iZXJfcGVvcGxlX2xpYWJsZSI6IDAuOTk4OX19XSwgImRhdGFfZHJpZnRfbWF4X3BfdmFsdWUiOiAwLjk5ODksICJpZGVudGlmaWVyc19tYXRjaCI6IGZhbHNlLCAidm9sdW1ldHJpY3MiOiBbeyJ0ZXN0X25hbWUiOiAiSWRlbnRpZmllciBDb21wYXJpc29uIiwgInRlc3RfY2F0ZWdvcnkiOiAidm9sdW1ldHJpY3MiLCAidGVzdF90eXBlIjogImlkZW50aWZpZXJfY29tcGFyaXNvbiIsICJ0ZXN0X2lkIjogInZvbHVtZXRyaWNzX2lkZW50aWZpZXJfY29tcGFyaXNvbiIsICJ2YWx1ZXMiOiB7ImlkZW50aWZpZXJzX21hdGNoIjogZmFsc2UsICJkYXRhZnJhbWVfMSI6IHsiaWRlbnRpZmllcl9jb2x1bW5zIjogWyJpZCJdLCAicmVjb3JkX2NvdW50IjogODAwLCAidW5pcXVlX2lkZW50aWZpZXJfY291bnQiOiA4MDAsICJleHRyYV9pZGVudGlmaWVycyI6IHsidG90YWwiOiA4MDAsICJicmVha2Rvd24iOiB7IjAiOiAxLCAiMTAiOiAxLCAiMTAwIjogMSwgIjEwMiI6IDEsICIxMDQiOiAxLCAiMTA1IjogMSwgIjEwNiI6IDEsICIxMDciOiAxLCAiMTA5IjogMSwgIjExIjogMSwgIjExMCI6IDEsICIxMTEiOiAxLCAiMTEyIjogMSwgIjExMyI6IDEsICIxMTQiOiAxLCAiMTE1IjogMSwgIjExNiI6IDEsICIxMTciOiAxLCAiMTE4IjogMSwgIjExOSI6IDEsICIxMiI6IDEsICIxMjAiOiAxLCAiMTIxIjogMSwgIjEyMyI6IDEsICIxMjQiOiAxLCAiMTI1IjogMSwgIjEyNiI6IDEsICIxMjciOiAxLCAiMTI4IjogMSwgIjEyOSI6IDEsICIxMyI6IDEsICIxMzAiOiAxLCAiMTMxIjogMSwgIjEzMiI6IDEsICIxMzMiOiAxLCAiMTM0IjogMSwgIjEzNSI6IDEsICIxMzYiOiAxLCAiMTM3IjogMSwgIjEzOCI6IDEsICIxMzkiOiAxLCAiMTQwIjogMSwgIjE0MyI6IDEsICIxNDYiOiAxLCAiMTQ3IjogMSwgIjE0OCI6IDEsICIxNDkiOiAxLCAiMTUiOiAxLCAiMTUxIjogMSwgIjE1MiI6IDEsICIxNTMiOiAxLCAiMTU0IjogMSwgIjE1NSI6IDEsICIxNTYiOiAxLCAiMTU3IjogMSwgIjE1OCI6IDEsICIxNTkiOiAxLCAiMTYiOiAxLCAiMTYwIjogMSwgIjE2MSI6IDEsICIxNjIiOiAxLCAiMTYzIjogMSwgIjE2NCI6IDEsICIxNjUiOiAxLCAiMTY2IjogMSwgIjE2NyI6IDEsICIxNjgiOiAxLCAiMTY5IjogMSwgIjE3IjogMSwgIjE3MCI6IDEsICIxNzEiOiAxLCAiMTcyIjogMSwgIjE3MyI6IDEsICIxNzQiOiAxLCAiMTc2IjogMSwgIjE3NyI6IDEsICIxNzgiOiAxLCAiMTc5IjogMSwgIjE4IjogMSwgIjE4MCI6IDEsICIxODEiOiAxLCAiMTgyIjogMSwgIjE4MyI6IDEsICIxODQiOiAxLCAiMTg1IjogMSwgIjE4NiI6IDEsICIxODciOiAxLCAiMTg4IjogMSwgIjE4OSI6IDEsICIxOSI6IDEsICIxOTAiOiAxLCAiMTkxIjogMSwgIjE5MiI6IDEsICIxOTMiOiAxLCAiMTk0IjogMSwgIjE5NSI6IDEsICIxOTciOiAxLCAiMTk4IjogMSwgIjE5OSI6IDEsICIyIjogMSwgIjIwIjogMSwgIjIwMCI6IDEsICIyMDEiOiAxLCAiMjAzIjogMSwgIjIwNSI6IDEsICIyMDYiOiAxLCAiMjA3IjogMSwgIjIwOCI6IDEsICIyMDkiOiAxLCAiMjEiOiAxLCAiMjEwIjogMSwgIjIxMSI6IDEsICIyMTIiOiAxLCAiMjEzIjogMSwgIjIxNiI6IDEsICIyMTciOiAxLCAiMjE4IjogMSwgIjIxOSI6IDEsICIyMiI6IDEsICIyMjAiOiAxLCAiMjIxIjogMSwgIjIyMiI6IDEsICIyMjMiOiAxLCAiMjI0IjogMSwgIjIyNSI6IDEsICIyMjYiOiAxLCAiMjI3IjogMSwgIjIyOCI6IDEsICIyMjkiOiAxLCAiMjMiOiAxLCAiMjMyIjogMSwgIjIzMyI6IDEsICIyMzQiOiAxLCAiMjM1IjogMSwgIjIzNyI6IDEsICIyMzgiOiAxLCAiMjQiOiAxLCAiMjQxIjogMSwgIjI0MiI6IDEsICIyNDMiOiAxLCAiMjQ0IjogMSwgIjI0NSI6IDEsICIyNDYiOiAxLCAiMjQ4IjogMSwgIjI1IjogMSwgIjI1MCI6IDEsICIyNTMiOiAxLCAiMjU0IjogMSwgIjI1NiI6IDEsICIyNTciOiAxLCAiMjU4IjogMSwgIjI1OSI6IDEsICIyNiI6IDEsICIyNjAiOiAxLCAiMjYzIjogMSwgIjI2NSI6IDEsICIyNjYiOiAxLCAiMjY4IjogMSwgIjI2OSI6IDEsICIyNzMiOiAxLCAiMjc0IjogMSwgIjI3NSI6IDEsICIyNzYiOiAxLCAiMjc3IjogMSwgIjI4IjogMSwgIjI4MCI6IDEsICIyODEiOiAxLCAiMjgyIjogMSwgIjI4NCI6IDEsICIyODUiOiAxLCAiMjg2IjogMSwgIjI4NyI6IDEsICIyODgiOiAxLCAiMjg5IjogMSwgIjI5IjogMSwgIjI5MCI6IDEsICIyOTEiOiAxLCAiMjkyIjogMSwgIjI5MyI6IDEsICIyOTQiOiAxLCAiMjk2IjogMSwgIjI5NyI6IDEsICIzIjogMSwgIjMwMCI6IDEsICIzMDEiOiAxLCAiMzAyIjogMSwgIjMwMyI6IDEsICIzMDQiOiAxLCAiMzA1IjogMSwgIjMwNyI6IDEsICIzMDgiOiAxLCAiMzA5IjogMSwgIjMxMyI6IDEsICIzMTQiOiAxLCAiMzE4IjogMSwgIjMyIjogMSwgIjMyMSI6IDEsICIzMjIiOiAxLCAiMzIzIjogMSwgIjMyNCI6IDEsICIzMjUiOiAxLCAiMzI2IjogMSwgIjMyNyI6IDEsICIzMjgiOiAxLCAiMzI5IjogMSwgIjMzIjogMSwgIjMzMCI6IDEsICIzMzIiOiAxLCAiMzMzIjogMSwgIjMzNCI6IDEsICIzMzUiOiAxLCAiMzM2IjogMSwgIjMzNyI6IDEsICIzMzgiOiAxLCAiMzM5IjogMSwgIjM0MCI6IDEsICIzNDEiOiAxLCAiMzQyIjogMSwgIjM0MyI6IDEsICIzNDQiOiAxLCAiMzQ1IjogMSwgIjM0NiI6IDEsICIzNDciOiAxLCAiMzQ4IjogMSwgIjM0OSI6IDEsICIzNSI6IDEsICIzNTAiOiAxLCAiMzUyIjogMSwgIjM1MyI6IDEsICIzNTQiOiAxLCAiMzU1IjogMSwgIjM1NiI6IDEsICIzNTciOiAxLCAiMzU4IjogMSwgIjM1OSI6IDEsICIzNiI6IDEsICIzNjAiOiAxLCAiMzYxIjogMSwgIjM2MyI6IDEsICIzNjQiOiAxLCAiMzY1IjogMSwgIjM2OCI6IDEsICIzNjkiOiAxLCAiMzciOiAxLCAiMzcwIjogMSwgIjM3MSI6IDEsICIzNzMiOiAxLCAiMzc0IjogMSwgIjM3NSI6IDEsICIzNzYiOiAxLCAiMzc3IjogMSwgIjM3OSI6IDEsICIzOCI6IDEsICIzODAiOiAxLCAiMzgxIjogMSwgIjM4MyI6IDEsICIzODciOiAxLCAiMzg4IjogMSwgIjM5IjogMSwgIjM5MCI6IDEsICIzOTEiOiAxLCAiMzkyIjogMSwgIjM5MyI6IDEsICIzOTQiOiAxLCAiMzk2IjogMSwgIjM5NyI6IDEsICIzOTgiOiAxLCAiMzk5IjogMSwgIjQiOiAxLCAiNDAiOiAxLCAiNDAwIjogMSwgIjQwMSI6IDEsICI0MDIiOiAxLCAiNDA0IjogMSwgIjQwNSI6IDEsICI0MDYiOiAxLCAiNDA3IjogMSwgIjQwOSI6IDEsICI0MSI6IDEsICI0MTAiOiAxLCAiNDExIjogMSwgIjQxNCI6IDEsICI0MTUiOiAxLCAiNDE2IjogMSwgIjQxNyI6IDEsICI0MTkiOiAxLCAiNDIiOiAxLCAiNDIwIjogMSwgIjQyMSI6IDEsICI0MjIiOiAxLCAiNDIzIjogMSwgIjQyNSI6IDEsICI0MjYiOiAxLCAiNDI3IjogMSwgIjQyOCI6IDEsICI0MjkiOiAxLCAiNDMiOiAxLCAiNDMwIjogMSwgIjQzMSI6IDEsICI0MzMiOiAxLCAiNDM0IjogMSwgIjQzNiI6IDEsICI0MzciOiAxLCAiNDM4IjogMSwgIjQzOSI6IDEsICI0NCI6IDEsICI0NDAiOiAxLCAiNDQxIjogMSwgIjQ0MiI6IDEsICI0NDMiOiAxLCAiNDQ0IjogMSwgIjQ0NSI6IDEsICI0NDYiOiAxLCAiNDQ3IjogMSwgIjQ0OCI6IDEsICI0NDkiOiAxLCAiNDUwIjogMSwgIjQ1MSI6IDEsICI0NTMiOiAxLCAiNDU0IjogMSwgIjQ1NSI6IDEsICI0NTkiOiAxLCAiNDYiOiAxLCAiNDYwIjogMSwgIjQ2MSI6IDEsICI0NjIiOiAxLCAiNDYzIjogMSwgIjQ2NCI6IDEsICI0NjUiOiAxLCAiNDY4IjogMSwgIjQ2OSI6IDEsICI0NyI6IDEsICI0NzAiOiAxLCAiNDcxIjogMSwgIjQ3MiI6IDEsICI0NzMiOiAxLCAiNDc0IjogMSwgIjQ3NSI6IDEsICI0NzYiOiAxLCAiNDc3IjogMSwgIjQ3OCI6IDEsICI0NzkiOiAxLCAiNDgiOiAxLCAiNDgwIjogMSwgIjQ4MiI6IDEsICI0ODQiOiAxLCAiNDg2IjogMSwgIjQ4NyI6IDEsICI0ODgiOiAxLCAiNDkiOiAxLCAiNDkwIjogMSwgIjQ5MSI6IDEsICI0OTMiOiAxLCAiNDk4IjogMSwgIjQ5OSI6IDEsICI1MCI6IDEsICI1MDAiOiAxLCAiNTAyIjogMSwgIjUwMyI6IDEsICI1MDQiOiAxLCAiNTA1IjogMSwgIjUwNiI6IDEsICI1MDciOiAxLCAiNTA4IjogMSwgIjUwOSI6IDEsICI1MSI6IDEsICI1MTAiOiAxLCAiNTExIjogMSwgIjUxMiI6IDEsICI1MTQiOiAxLCAiNTE1IjogMSwgIjUxNiI6IDEsICI1MTciOiAxLCAiNTE4IjogMSwgIjUxOSI6IDEsICI1MiI6IDEsICI1MjEiOiAxLCAiNTIyIjogMSwgIjUyNCI6IDEsICI1MjUiOiAxLCAiNTI2IjogMSwgIjUyNyI6IDEsICI1MjgiOiAxLCAiNTMiOiAxLCAiNTMwIjogMSwgIjUzMiI6IDEsICI1MzMiOiAxLCAiNTM0IjogMSwgIjUzNSI6IDEsICI1MzYiOiAxLCAiNTM3IjogMSwgIjUzOCI6IDEsICI1MzkiOiAxLCAiNTQwIjogMSwgIjU0MSI6IDEsICI1NDIiOiAxLCAiNTQzIjogMSwgIjU0NCI6IDEsICI1NDYiOiAxLCAiNTQ3IjogMSwgIjU0OCI6IDEsICI1NDkiOiAxLCAiNTUwIjogMSwgIjU1MSI6IDEsICI1NTIiOiAxLCAiNTU0IjogMSwgIjU1NSI6IDEsICI1NTYiOiAxLCAiNTU3IjogMSwgIjU1OSI6IDEsICI1NiI6IDEsICI1NjAiOiAxLCAiNTYxIjogMSwgIjU2MiI6IDEsICI1NjMiOiAxLCAiNTY0IjogMSwgIjU2NSI6IDEsICI1NjYiOiAxLCAiNTY3IjogMSwgIjU3IjogMSwgIjU3MCI6IDEsICI1NzEiOiAxLCAiNTcyIjogMSwgIjU3MyI6IDEsICI1NzQiOiAxLCAiNTc1IjogMSwgIjU3NyI6IDEsICI1NzkiOiAxLCAiNTgiOiAxLCAiNTgxIjogMSwgIjU4NCI6IDEsICI1ODUiOiAxLCAiNTg2IjogMSwgIjU4OCI6IDEsICI1ODkiOiAxLCAiNTkiOiAxLCAiNTkwIjogMSwgIjU5MSI6IDEsICI1OTIiOiAxLCAiNTkzIjogMSwgIjU5NCI6IDEsICI1OTUiOiAxLCAiNTk3IjogMSwgIjU5OCI6IDEsICI1OTkiOiAxLCAiNiI6IDEsICI2MDAiOiAxLCAiNjAyIjogMSwgIjYwMyI6IDEsICI2MDQiOiAxLCAiNjA1IjogMSwgIjYwNiI6IDEsICI2MDciOiAxLCAiNjA5IjogMSwgIjYxIjogMSwgIjYxMCI6IDEsICI2MTEiOiAxLCAiNjEyIjogMSwgIjYxMyI6IDEsICI2MTYiOiAxLCAiNjE3IjogMSwgIjYxOCI6IDEsICI2MTkiOiAxLCAiNjIiOiAxLCAiNjIwIjogMSwgIjYyMSI6IDEsICI2MjIiOiAxLCAiNjIzIjogMSwgIjYyNSI6IDEsICI2MjYiOiAxLCAiNjI3IjogMSwgIjYyOCI6IDEsICI2MjkiOiAxLCAiNjMiOiAxLCAiNjMxIjogMSwgIjYzMiI6IDEsICI2MzMiOiAxLCAiNjM0IjogMSwgIjYzNyI6IDEsICI2MzkiOiAxLCAiNjQiOiAxLCAiNjQwIjogMSwgIjY0MSI6IDEsICI2NDIiOiAxLCAiNjQ1IjogMSwgIjY0NiI6IDEsICI2NDciOiAxLCAiNjQ5IjogMSwgIjY1MCI6IDEsICI2NTEiOiAxLCAiNjUyIjogMSwgIjY1NSI6IDEsICI2NTYiOiAxLCAiNjU3IjogMSwgIjY1OCI6IDEsICI2NTkiOiAxLCAiNjYiOiAxLCAiNjYwIjogMSwgIjY2MSI6IDEsICI2NjIiOiAxLCAiNjYzIjogMSwgIjY2NCI6IDEsICI2NjUiOiAxLCAiNjY3IjogMSwgIjY2OCI6IDEsICI2NjkiOiAxLCAiNjciOiAxLCAiNjcwIjogMSwgIjY3MSI6IDEsICI2NzMiOiAxLCAiNjc0IjogMSwgIjY3NSI6IDEsICI2NzYiOiAxLCAiNjc3IjogMSwgIjY3OCI6IDEsICI2OCI6IDEsICI2ODAiOiAxLCAiNjgxIjogMSwgIjY4MiI6IDEsICI2ODMiOiAxLCAiNjg0IjogMSwgIjY4NSI6IDEsICI2ODYiOiAxLCAiNjg3IjogMSwgIjY4OSI6IDEsICI2OSI6IDEsICI2OTAiOiAxLCAiNjkxIjogMSwgIjY5MiI6IDEsICI2OTQiOiAxLCAiNjk1IjogMSwgIjY5NiI6IDEsICI2OTciOiAxLCAiNjk5IjogMSwgIjciOiAxLCAiNzAiOiAxLCAiNzAwIjogMSwgIjcwMSI6IDEsICI3MDIiOiAxLCAiNzAzIjogMSwgIjcwNCI6IDEsICI3MDUiOiAxLCAiNzA3IjogMSwgIjcwOCI6IDEsICI3MDkiOiAxLCAiNzEiOiAxLCAiNzExIjogMSwgIjcxMiI6IDEsICI3MTQiOiAxLCAiNzE1IjogMSwgIjcxNiI6IDEsICI3MTgiOiAxLCAiNzE5IjogMSwgIjcyIjogMSwgIjcyMCI6IDEsICI3MjEiOiAxLCAiNzIzIjogMSwgIjcyNCI6IDEsICI3MjUiOiAxLCAiNzI2IjogMSwgIjcyNyI6IDEsICI3MjgiOiAxLCAiNzI5IjogMSwgIjczIjogMSwgIjczMCI6IDEsICI3MzEiOiAxLCAiNzMyIjogMSwgIjczMyI6IDEsICI3MzQiOiAxLCAiNzM1IjogMSwgIjczNyI6IDEsICI3MzkiOiAxLCAiNzQiOiAxLCAiNzQxIjogMSwgIjc0MiI6IDEsICI3NDMiOiAxLCAiNzQ0IjogMSwgIjc0NSI6IDEsICI3NDYiOiAxLCAiNzQ3IjogMSwgIjc0OCI6IDEsICI3NDkiOiAxLCAiNzUiOiAxLCAiNzUwIjogMSwgIjc1MiI6IDEsICI3NTQiOiAxLCAiNzU1IjogMSwgIjc1NiI6IDEsICI3NTgiOiAxLCAiNzU5IjogMSwgIjc2IjogMSwgIjc2MSI6IDEsICI3NjIiOiAxLCAiNzYzIjogMSwgIjc2NCI6IDEsICI3NjUiOiAxLCAiNzY2IjogMSwgIjc2OCI6IDEsICI3NzAiOiAxLCAiNzcxIjogMSwgIjc3MiI6IDEsICI3NzQiOiAxLCAiNzc1IjogMSwgIjc3NiI6IDEsICI3NzciOiAxLCAiNzc4IjogMSwgIjc3OSI6IDEsICI3OCI6IDEsICI3ODEiOiAxLCAiNzgyIjogMSwgIjc4NiI6IDEsICI3ODciOiAxLCAiNzkiOiAxLCAiNzkxIjogMSwgIjc5MiI6IDEsICI3OTMiOiAxLCAiNzk0IjogMSwgIjc5NyI6IDEsICI3OTgiOiAxLCAiNzk5IjogMSwgIjgwIjogMSwgIjgwMCI6IDEsICI4MDEiOiAxLCAiODAyIjogMSwgIjgwMyI6IDEsICI4MDQiOiAxLCAiODA1IjogMSwgIjgwNiI6IDEsICI4MDciOiAxLCAiODA4IjogMSwgIjgwOSI6IDEsICI4MSI6IDEsICI4MTAiOiAxLCAiODExIjogMSwgIjgxMiI6IDEsICI4MTMiOiAxLCAiODE0IjogMSwgIjgxNSI6IDEsICI4MTYiOiAxLCAiODE3IjogMSwgIjgxOCI6IDEsICI4MiI6IDEsICI4MjAiOiAxLCAiODIxIjogMSwgIjgyMiI6IDEsICI4MjQiOiAxLCAiODI1IjogMSwgIjgyNyI6IDEsICI4MjgiOiAxLCAiODI5IjogMSwgIjgzIjogMSwgIjgzMCI6IDEsICI4MzEiOiAxLCAiODMzIjogMSwgIjgzNSI6IDEsICI4MzYiOiAxLCAiODM3IjogMSwgIjgzOCI6IDEsICI4MzkiOiAxLCAiODQiOiAxLCAiODQwIjogMSwgIjg0MSI6IDEsICI4NDIiOiAxLCAiODQzIjogMSwgIjg0NSI6IDEsICI4NDYiOiAxLCAiODQ3IjogMSwgIjg0OCI6IDEsICI4NDkiOiAxLCAiODUiOiAxLCAiODUwIjogMSwgIjg1MSI6IDEsICI4NTIiOiAxLCAiODUzIjogMSwgIjg1NCI6IDEsICI4NTUiOiAxLCAiODU2IjogMSwgIjg1NyI6IDEsICI4NTgiOiAxLCAiODYiOiAxLCAiODYxIjogMSwgIjg2MyI6IDEsICI4NjUiOiAxLCAiODY2IjogMSwgIjg2NyI6IDEsICI4NjgiOiAxLCAiODY5IjogMSwgIjg3IjogMSwgIjg3MCI6IDEsICI4NzEiOiAxLCAiODcyIjogMSwgIjg3NSI6IDEsICI4NzciOiAxLCAiODc4IjogMSwgIjg3OSI6IDEsICI4OCI6IDEsICI4ODAiOiAxLCAiODgxIjogMSwgIjg4MiI6IDEsICI4ODQiOiAxLCAiODg1IjogMSwgIjg4NyI6IDEsICI4ODgiOiAxLCAiODg5IjogMSwgIjg5IjogMSwgIjg5MCI6IDEsICI4OTEiOiAxLCAiODkyIjogMSwgIjg5MyI6IDEsICI4OTQiOiAxLCAiODk1IjogMSwgIjg5NiI6IDEsICI4OTciOiAxLCAiODk4IjogMSwgIjg5OSI6IDEsICI5IjogMSwgIjkwIjogMSwgIjkwMCI6IDEsICI5MDEiOiAxLCAiOTAzIjogMSwgIjkwNSI6IDEsICI5MDciOiAxLCAiOTA4IjogMSwgIjkxIjogMSwgIjkxMCI6IDEsICI5MTEiOiAxLCAiOTEyIjogMSwgIjkxMyI6IDEsICI5MTQiOiAxLCAiOTE1IjogMSwgIjkxNiI6IDEsICI5MTciOiAxLCAiOTE5IjogMSwgIjkyIjogMSwgIjkyMCI6IDEsICI5MjEiOiAxLCAiOTI0IjogMSwgIjkyNSI6IDEsICI5MjgiOiAxLCAiOTI5IjogMSwgIjkzIjogMSwgIjkzMCI6IDEsICI5MzEiOiAxLCAiOTMyIjogMSwgIjkzMyI6IDEsICI5MzQiOiAxLCAiOTM1IjogMSwgIjkzNiI6IDEsICI5MzciOiAxLCAiOTM4IjogMSwgIjk0IjogMSwgIjk0MCI6IDEsICI5NDEiOiAxLCAiOTQzIjogMSwgIjk0NCI6IDEsICI5NDciOiAxLCAiOTQ4IjogMSwgIjk0OSI6IDEsICI5NSI6IDEsICI5NTAiOiAxLCAiOTUxIjogMSwgIjk1MiI6IDEsICI5NTMiOiAxLCAiOTU0IjogMSwgIjk1NSI6IDEsICI5NTYiOiAxLCAiOTU5IjogMSwgIjk2IjogMSwgIjk2MCI6IDEsICI5NjEiOiAxLCAiOTYyIjogMSwgIjk2MyI6IDEsICI5NjQiOiAxLCAiOTY1IjogMSwgIjk2NiI6IDEsICI5NjciOiAxLCAiOTY4IjogMSwgIjk2OSI6IDEsICI5NzAiOiAxLCAiOTcyIjogMSwgIjk3MyI6IDEsICI5NzQiOiAxLCAiOTc2IjogMSwgIjk3NyI6IDEsICI5NzgiOiAxLCAiOTc5IjogMSwgIjk4IjogMSwgIjk4MCI6IDEsICI5ODEiOiAxLCAiOTgzIjogMSwgIjk4NCI6IDEsICI5ODUiOiAxLCAiOTg4IjogMSwgIjk5IjogMSwgIjk5MSI6IDEsICI5OTIiOiAxLCAiOTk0IjogMSwgIjk5NSI6IDEsICI5OTciOiAxLCAiOTk4IjogMX19fSwgImRhdGFmcmFtZV8yIjogeyJpZGVudGlmaWVyX2NvbHVtbnMiOiBbImlkIl0sICJyZWNvcmRfY291bnQiOiAxMDAsICJ1bmlxdWVfaWRlbnRpZmllcl9jb3VudCI6IDEwMCwgImV4dHJhX2lkZW50aWZpZXJzIjogeyJ0b3RhbCI6IDEwMCwgImJyZWFrZG93biI6IHsiMSI6IDEsICIxMDgiOiAxLCAiMTQxIjogMSwgIjE0MiI6IDEsICIxNDQiOiAxLCAiMjA0IjogMSwgIjIxNCI6IDEsICIyMzAiOiAxLCAiMjM5IjogMSwgIjI1MSI6IDEsICIyNTIiOiAxLCAiMjYxIjogMSwgIjI2NyI6IDEsICIyNzAiOiAxLCAiMjcxIjogMSwgIjI3OCI6IDEsICIyODMiOiAxLCAiMjk1IjogMSwgIjI5OCI6IDEsICIzMCI6IDEsICIzMSI6IDEsICIzMTEiOiAxLCAiMzEyIjogMSwgIjMxNyI6IDEsICIzMzEiOiAxLCAiMzQiOiAxLCAiMzY3IjogMSwgIjM3MiI6IDEsICIzNzgiOiAxLCAiMzg1IjogMSwgIjQwOCI6IDEsICI0MTMiOiAxLCAiNDE4IjogMSwgIjQyNCI6IDEsICI0MzUiOiAxLCAiNDUiOiAxLCAiNDUyIjogMSwgIjQ1NiI6IDEsICI0NjciOiAxLCAiNDgxIjogMSwgIjQ5NSI6IDEsICI0OTciOiAxLCAiNSI6IDEsICI1MDEiOiAxLCAiNTIwIjogMSwgIjUzMSI6IDEsICI1NTMiOiAxLCAiNTU4IjogMSwgIjU2OCI6IDEsICI1NjkiOiAxLCAiNTc4IjogMSwgIjU4NyI6IDEsICI2MDgiOiAxLCAiNjE1IjogMSwgIjYyNCI6IDEsICI2MzAiOiAxLCAiNjM1IjogMSwgIjYzOCI6IDEsICI2NDMiOiAxLCAiNjQ0IjogMSwgIjY1IjogMSwgIjY1MyI6IDEsICI2NjYiOiAxLCAiNjcyIjogMSwgIjY3OSI6IDEsICI2ODgiOiAxLCAiNjkzIjogMSwgIjY5OCI6IDEsICI3MTciOiAxLCAiNzU3IjogMSwgIjc2MCI6IDEsICI3NjkiOiAxLCAiNzczIjogMSwgIjc4MCI6IDEsICI3ODUiOiAxLCAiNzg5IjogMSwgIjc5MCI6IDEsICI3OTUiOiAxLCAiOCI6IDEsICI4MTkiOiAxLCAiODI2IjogMSwgIjgzNCI6IDEsICI4NDQiOiAxLCAiODYyIjogMSwgIjg2NCI6IDEsICI4NzQiOiAxLCAiODg2IjogMSwgIjkwMiI6IDEsICI5MDYiOiAxLCAiOTA5IjogMSwgIjkxOCI6IDEsICI5MjIiOiAxLCAiOTU4IjogMSwgIjk3IjogMSwgIjk3MSI6IDEsICI5NzUiOiAxLCAiOTgyIjogMSwgIjk4OSI6IDEsICI5OTAiOiAxLCAiOTkzIjogMX19fX19XSwgInNjb3JlX2tzX3B2YWx1ZSI6IDEuMCwgImNvbmNlcHRfZHJpZnQiOiBbeyJ0ZXN0X25hbWUiOiAiS29sbW9nb3Jvdi1TbWlybm92IiwgInRlc3RfY2F0ZWdvcnkiOiAiY29uY2VwdF9kcmlmdCIsICJ0ZXN0X3R5cGUiOiAia29sbW9nb3Jvdl9zbWlybm92IiwgIm1ldHJpYyI6ICJwX3ZhbHVlIiwgInRlc3RfaWQiOiAiY29uY2VwdF9kcmlmdF9rb2xtb2dvcm92X3NtaXJub3ZfcF92YWx1ZSIsICJ2YWx1ZXMiOiB7InNjb3JlIjogMS4wfX1dLCAiY29uY2VwdF9kcmlmdF9tYXhfcF92YWx1ZSI6IDEuMCwgInN0YXRpc3RpY2FsX3BlcmZvcm1hbmNlX2F1YyI6IDAuNjY1NywgInNjb3JlX1BTSSI6IDAuMCwgImNoZWNraW5nX3N0YXR1c19DU0kiOiAwLjAwOTg1MiwgImNyZWRpdF9oaXN0b3J5X0NTSSI6IDAuMTY3ODk2LCAicHVycG9zZV9DU0kiOiAwLjI0MTgyNywgInNhdmluZ3NfYWNjb3VudF9DU0kiOiAwLjAxMzMxNSwgInByZXNlbnRfZW1wbG95bWVudF9zaW5jZV9DU0kiOiAwLjA4NTk2NywgImRlYnRvcnNfZ3VhcmFudG9yc19DU0kiOiAwLjAwMzkxMiwgInByb3BlcnR5X0NTSSI6IDAuMDUwMjA4LCAiaW5zdGFsbG1lbnRfcGxhbnNfQ1NJIjogMC4wMDUxMDIsICJob3VzaW5nX0NTSSI6IDAuMDY3NTc1LCAiam9iX0NTSSI6IDAuMDAxNTYxLCAidGVsZXBob25lX0NTSSI6IDAuMDAwNTI1LCAiZm9yZWlnbl93b3JrZXJfQ1NJIjogMC4wMDA2OTQsICJnZW5kZXJfQ1NJIjogMC4wMTc3NDIsICJkdXJhdGlvbl9tb250aHNfQ1NJIjogMC4wMjAzNjEsICJjcmVkaXRfYW1vdW50X0NTSSI6IDAuMDY5MTg5LCAiaW5zdGFsbG1lbnRfcmF0ZV9DU0kiOiAwLjAyMzU1OCwgInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlX0NTSSI6IDAuMDAyMzQ3LCAiYWdlX3llYXJzX0NTSSI6IDAuMDAxNiwgIm51bWJlcl9leGlzdGluZ19jcmVkaXRzX0NTSSI6IDAuMDE2NzM4LCAibnVtYmVyX3Blb3BsZV9saWFibGVfQ1NJIjogMC4wMTA2NDksICJzdGFiaWxpdHkiOiBbeyJ0ZXN0X25hbWUiOiAiU3RhYmlsaXR5IEFuYWx5c2lzIiwgInRlc3RfY2F0ZWdvcnkiOiAic3RhYmlsaXR5IiwgInRlc3RfdHlwZSI6ICJzdGFiaWxpdHlfYW5hbHlzaXMiLCAidGVzdF9pZCI6ICJzdGFiaWxpdHlfc3RhYmlsaXR5X2FuYWx5c2lzIiwgInZhbHVlcyI6IHsiY2hlY2tpbmdfc3RhdHVzIjogeyJzdGFiaWxpdHlfYW5hbHlzaXNfdGFibGUiOiBbeyJidWNrZXQiOiAiQTExIiwgInRyYWluX2NvdW50IjogMjIyLCAiZXZhbF9jb3VudCI6IDI2LCAidHJhaW5fcGVyY2VudCI6IDAuMjc3NSwgImV2YWxfcGVyY2VudCI6IDAuMjYsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC44NjkzNjksICJldmFsX21lYW5fc2NvcmUiOiAwLjg4NDYxNSwgInNjb3JlX21lYW5fZGlmZiI6IDAuMDE1MjQ2LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjI3NzUsICJldmFsX2N1bV9wZXJjZW50IjogMC4yNiwgImtzX2NhbGMiOiAwLjAxNzUsICJjaGlzcV9jYWxjIjogMC4wMDExMDQsICJwc2lfY2FsYyI6IDAuMDAxMTR9LCB7ImJ1Y2tldCI6ICJBMTIiLCAidHJhaW5fY291bnQiOiAyMTQsICJldmFsX2NvdW50IjogMjQsICJ0cmFpbl9wZXJjZW50IjogMC4yNjc1LCAiZXZhbF9wZXJjZW50IjogMC4yNCwgInRyYWluX21lYW5fc2NvcmUiOiAwLjYxNjgyMiwgImV2YWxfbWVhbl9zY29yZSI6IDAuNjI1LCAic2NvcmVfbWVhbl9kaWZmIjogMC4wMDgxNzgsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuNTQ1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNSwgImtzX2NhbGMiOiAwLjA0NSwgImNoaXNxX2NhbGMiOiAwLjAwMjgyNywgInBzaV9jYWxjIjogMC4wMDI5ODN9LCB7ImJ1Y2tldCI6ICJBMTMiLCAidHJhaW5fY291bnQiOiA1MSwgImV2YWxfY291bnQiOiA4LCAidHJhaW5fcGVyY2VudCI6IDAuMDYzNzUsICJldmFsX3BlcmNlbnQiOiAwLjA4LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMzkyMTU3LCAiZXZhbF9tZWFuX3Njb3JlIjogMC42MjUsICJzY29yZV9tZWFuX2RpZmYiOiAwLjIzMjg0MywgInRyYWluX2N1bV9wZXJjZW50IjogMC42MDg3NSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjU4LCAia3NfY2FsYyI6IDAuMDI4NzUsICJjaGlzcV9jYWxjIjogMC4wMDQxNDIsICJwc2lfY2FsYyI6IDAuMDAzNjl9LCB7ImJ1Y2tldCI6ICJBMTQiLCAidHJhaW5fY291bnQiOiAzMTMsICJldmFsX2NvdW50IjogNDIsICJ0cmFpbl9wZXJjZW50IjogMC4zOTEyNSwgImV2YWxfcGVyY2VudCI6IDAuNDIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC4wMjIzNjQsICJldmFsX21lYW5fc2NvcmUiOiAwLjAyMzgxLCAic2NvcmVfbWVhbl9kaWZmIjogMC4wMDE0NDUsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMDAyMTEzLCAicHNpX2NhbGMiOiAwLjAwMjAzOX1dLCAic3RhYmlsaXR5X2luZGV4IjogMC4wMDk4NTIsICJzdGFiaWxpdHlfY2hpc3EiOiAwLjAxMDE4NiwgInN0YWJpbGl0eV9rcyI6IDAuMDQ1fSwgImNyZWRpdF9oaXN0b3J5IjogeyJzdGFiaWxpdHlfYW5hbHlzaXNfdGFibGUiOiBbeyJidWNrZXQiOiAiQTMwIiwgInRyYWluX2NvdW50IjogMzQsICJldmFsX2NvdW50IjogMiwgInRyYWluX3BlcmNlbnQiOiAwLjA0MjUsICJldmFsX3BlcmNlbnQiOiAwLjAyLCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNzY0NzA2LCAiZXZhbF9tZWFuX3Njb3JlIjogMC41LCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMjY0NzA2LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjA0MjUsICJldmFsX2N1bV9wZXJjZW50IjogMC4wMiwgImtzX2NhbGMiOiAwLjAyMjUsICJjaGlzcV9jYWxjIjogMC4wMTE5MTIsICJwc2lfY2FsYyI6IDAuMDE2OTZ9LCB7ImJ1Y2tldCI6ICJBMzEiLCAidHJhaW5fY291bnQiOiAzOCwgImV2YWxfY291bnQiOiAyLCAidHJhaW5fcGVyY2VudCI6IDAuMDQ3NSwgImV2YWxfcGVyY2VudCI6IDAuMDIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC44MTU3ODksICJldmFsX21lYW5fc2NvcmUiOiAxLjAsICJzY29yZV9tZWFuX2RpZmYiOiAwLjE4NDIxMSwgInRyYWluX2N1bV9wZXJjZW50IjogMC4wOSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjA0LCAia3NfY2FsYyI6IDAuMDUsICJjaGlzcV9jYWxjIjogMC4wMTU5MjEsICJwc2lfY2FsYyI6IDAuMDIzNzg3fSwgeyJidWNrZXQiOiAiQTMyIiwgInRyYWluX2NvdW50IjogNDE5LCAiZXZhbF9jb3VudCI6IDY1LCAidHJhaW5fcGVyY2VudCI6IDAuNTIzNzUsICJldmFsX3BlcmNlbnQiOiAwLjY1LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNTA4MzUzLCAiZXZhbF9tZWFuX3Njb3JlIjogMC41MjMwNzcsICJzY29yZV9tZWFuX2RpZmYiOiAwLjAxNDcyNCwgInRyYWluX2N1bV9wZXJjZW50IjogMC42MTM3NSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjY5LCAia3NfY2FsYyI6IDAuMDc2MjUsICJjaGlzcV9jYWxjIjogMC4wMzA0MzMsICJwc2lfY2FsYyI6IDAuMDI3MjY1fSwgeyJidWNrZXQiOiAiQTMzIiwgInRyYWluX2NvdW50IjogNzAsICJldmFsX2NvdW50IjogMiwgInRyYWluX3BlcmNlbnQiOiAwLjA4NzUsICJldmFsX3BlcmNlbnQiOiAwLjAyLCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNDQyODU3LCAiZXZhbF9tZWFuX3Njb3JlIjogMC41LCAic2NvcmVfbWVhbl9kaWZmIjogMC4wNTcxNDMsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuNzAxMjUsICJldmFsX2N1bV9wZXJjZW50IjogMC43MSwgImtzX2NhbGMiOiAwLjAwODc1LCAiY2hpc3FfY2FsYyI6IDAuMDUyMDcxLCAicHNpX2NhbGMiOiAwLjA5OTYyNH0sIHsiYnVja2V0IjogIkEzNCIsICJ0cmFpbl9jb3VudCI6IDIzOSwgImV2YWxfY291bnQiOiAyOSwgInRyYWluX3BlcmNlbnQiOiAwLjI5ODc1LCAiZXZhbF9wZXJjZW50IjogMC4yOSwgInRyYWluX21lYW5fc2NvcmUiOiAwLjIxMzM4OSwgImV2YWxfbWVhbl9zY29yZSI6IDAuMjA2ODk3LCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMDA2NDkzLCAidHJhaW5fY3VtX3BlcmNlbnQiOiAxLjAsICJldmFsX2N1bV9wZXJjZW50IjogMS4wLCAia3NfY2FsYyI6IDAuMCwgImNoaXNxX2NhbGMiOiAwLjAwMDI1NiwgInBzaV9jYWxjIjogMC4wMDAyNn1dLCAic3RhYmlsaXR5X2luZGV4IjogMC4xNjc4OTYsICJzdGFiaWxpdHlfY2hpc3EiOiAwLjExMDU5MywgInN0YWJpbGl0eV9rcyI6IDAuMDc2MjV9LCAicHVycG9zZSI6IHsic3RhYmlsaXR5X2FuYWx5c2lzX3RhYmxlIjogW3siYnVja2V0IjogIkE0MCIsICJ0cmFpbl9jb3VudCI6IDE4MCwgImV2YWxfY291bnQiOiAyMiwgInRyYWluX3BlcmNlbnQiOiAwLjIyNSwgImV2YWxfcGVyY2VudCI6IDAuMjIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC41NDQ0NDQsICJldmFsX21lYW5fc2NvcmUiOiAwLjUsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4wNDQ0NDQsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuMjI1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuMjIsICJrc19jYWxjIjogMC4wMDUsICJjaGlzcV9jYWxjIjogMC4wMDAxMTEsICJwc2lfY2FsYyI6IDAuMDAwMTEyfSwgeyJidWNrZXQiOiAiQTQxIiwgInRyYWluX2NvdW50IjogODYsICJldmFsX2NvdW50IjogMiwgInRyYWluX3BlcmNlbnQiOiAwLjEwNzUsICJldmFsX3BlcmNlbnQiOiAwLjAyLCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMzEzOTUzLCAiZXZhbF9tZWFuX3Njb3JlIjogMC41LCAic2NvcmVfbWVhbl9kaWZmIjogMC4xODYwNDcsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuMzMyNSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjI0LCAia3NfY2FsYyI6IDAuMDkyNSwgImNoaXNxX2NhbGMiOiAwLjA3MTIyMSwgInBzaV9jYWxjIjogMC4xNDcxNTR9LCB7ImJ1Y2tldCI6ICJBNDEwIiwgInRyYWluX2NvdW50IjogMTEsICJldmFsX2NvdW50IjogMCwgInRyYWluX3BlcmNlbnQiOiAwLjAxMzc1LCAiZXZhbF9wZXJjZW50IjogMC4wLCAidHJhaW5fbWVhbl9zY29yZSI6IDAuODE4MTgyLCAiZXZhbF9tZWFuX3Njb3JlIjogbnVsbCwgInNjb3JlX21lYW5fZGlmZiI6IG51bGwsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuMzQ2MjUsICJldmFsX2N1bV9wZXJjZW50IjogMC4yNCwgImtzX2NhbGMiOiAwLjEwNjI1LCAiY2hpc3FfY2FsYyI6IDAuMDEzNzUsICJwc2lfY2FsYyI6IG51bGx9LCB7ImJ1Y2tldCI6ICJBNDIiLCAidHJhaW5fY291bnQiOiAxMzcsICJldmFsX2NvdW50IjogMjgsICJ0cmFpbl9wZXJjZW50IjogMC4xNzEyNSwgImV2YWxfcGVyY2VudCI6IDAuMjgsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC41NzY2NDIsICJldmFsX21lYW5fc2NvcmUiOiAwLjQ2NDI4NiwgInNjb3JlX21lYW5fZGlmZiI6IC0wLjExMjM1NywgInRyYWluX2N1bV9wZXJjZW50IjogMC41MTc1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNTIsICJrc19jYWxjIjogMC4wMDI1LCAiY2hpc3FfY2FsYyI6IDAuMDY5MDYsICJwc2lfY2FsYyI6IDAuMDUzNDY5fSwgeyJidWNrZXQiOiAiQTQzIiwgInRyYWluX2NvdW50IjogMjIzLCAiZXZhbF9jb3VudCI6IDM1LCAidHJhaW5fcGVyY2VudCI6IDAuMjc4NzUsICJldmFsX3BlcmNlbnQiOiAwLjM1LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMjc4MDI3LCAiZXZhbF9tZWFuX3Njb3JlIjogMC4zNzE0MjksICJzY29yZV9tZWFuX2RpZmYiOiAwLjA5MzQwMiwgInRyYWluX2N1bV9wZXJjZW50IjogMC43OTYyNSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjg3LCAia3NfY2FsYyI6IDAuMDczNzUsICJjaGlzcV9jYWxjIjogMC4wMTgyMTIsICJwc2lfY2FsYyI6IDAuMDE2MjE4fSwgeyJidWNrZXQiOiAiQTQ0IiwgInRyYWluX2NvdW50IjogMTAsICJldmFsX2NvdW50IjogMCwgInRyYWluX3BlcmNlbnQiOiAwLjAxMjUsICJldmFsX3BlcmNlbnQiOiAwLjAsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC41LCAiZXZhbF9tZWFuX3Njb3JlIjogbnVsbCwgInNjb3JlX21lYW5fZGlmZiI6IG51bGwsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuODA4NzUsICJldmFsX2N1bV9wZXJjZW50IjogMC44NywgImtzX2NhbGMiOiAwLjA2MTI1LCAiY2hpc3FfY2FsYyI6IDAuMDEyNSwgInBzaV9jYWxjIjogbnVsbH0sIHsiYnVja2V0IjogIkE0NSIsICJ0cmFpbl9jb3VudCI6IDE5LCAiZXZhbF9jb3VudCI6IDIsICJ0cmFpbl9wZXJjZW50IjogMC4wMjM3NSwgImV2YWxfcGVyY2VudCI6IDAuMDIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40NzM2ODQsICJldmFsX21lYW5fc2NvcmUiOiAwLjAsICJzY29yZV9tZWFuX2RpZmYiOiAtMC40NzM2ODQsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuODMyNSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjg5LCAia3NfY2FsYyI6IDAuMDU3NSwgImNoaXNxX2NhbGMiOiAwLjAwMDU5MiwgInBzaV9jYWxjIjogMC4wMDA2NDR9LCB7ImJ1Y2tldCI6ICJBNDYiLCAidHJhaW5fY291bnQiOiA0MywgImV2YWxfY291bnQiOiA1LCAidHJhaW5fcGVyY2VudCI6IDAuMDUzNzUsICJldmFsX3BlcmNlbnQiOiAwLjA1LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNTgxMzk1LCAiZXZhbF9tZWFuX3Njb3JlIjogMC4yLCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMzgxMzk1LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjg4NjI1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuOTQsICJrc19jYWxjIjogMC4wNTM3NSwgImNoaXNxX2NhbGMiOiAwLjAwMDI2MiwgInBzaV9jYWxjIjogMC4wMDAyNzF9LCB7ImJ1Y2tldCI6ICJBNDgiLCAidHJhaW5fY291bnQiOiA4LCAiZXZhbF9jb3VudCI6IDAsICJ0cmFpbl9wZXJjZW50IjogMC4wMSwgImV2YWxfcGVyY2VudCI6IDAuMCwgInRyYWluX21lYW5fc2NvcmUiOiAwLjI1LCAiZXZhbF9tZWFuX3Njb3JlIjogbnVsbCwgInNjb3JlX21lYW5fZGlmZiI6IG51bGwsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuODk2MjUsICJldmFsX2N1bV9wZXJjZW50IjogMC45NCwgImtzX2NhbGMiOiAwLjA0Mzc1LCAiY2hpc3FfY2FsYyI6IDAuMDEsICJwc2lfY2FsYyI6IG51bGx9LCB7ImJ1Y2tldCI6ICJBNDkiLCAidHJhaW5fY291bnQiOiA4MywgImV2YWxfY291bnQiOiA2LCAidHJhaW5fcGVyY2VudCI6IDAuMTAzNzUsICJldmFsX3BlcmNlbnQiOiAwLjA2LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNDMzNzM1LCAiZXZhbF9tZWFuX3Njb3JlIjogMC44MzMzMzMsICJzY29yZV9tZWFuX2RpZmYiOiAwLjM5OTU5OCwgInRyYWluX2N1bV9wZXJjZW50IjogMS4wLCAiZXZhbF9jdW1fcGVyY2VudCI6IDEuMCwgImtzX2NhbGMiOiAwLjAsICJjaGlzcV9jYWxjIjogMC4wMTg0NDksICJwc2lfY2FsYyI6IDAuMDIzOTU5fV0sICJzdGFiaWxpdHlfaW5kZXgiOiAwLjI0MTgyNywgInN0YWJpbGl0eV9jaGlzcSI6IDAuMjE0MTU3LCAic3RhYmlsaXR5X2tzIjogMC4xMDYyNX0sICJzYXZpbmdzX2FjY291bnQiOiB7InN0YWJpbGl0eV9hbmFseXNpc190YWJsZSI6IFt7ImJ1Y2tldCI6ICJBNjEiLCAidHJhaW5fY291bnQiOiA0ODUsICJldmFsX2NvdW50IjogNTksICJ0cmFpbl9wZXJjZW50IjogMC42MDYyNSwgImV2YWxfcGVyY2VudCI6IDAuNTksICJ0cmFpbl9tZWFuX3Njb3JlIjogMC41NjA4MjUsICJldmFsX21lYW5fc2NvcmUiOiAwLjU1OTMyMiwgInNjb3JlX21lYW5fZGlmZiI6IC0wLjAwMTUwMywgInRyYWluX2N1bV9wZXJjZW50IjogMC42MDYyNSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjU5LCAia3NfY2FsYyI6IDAuMDE2MjUsICJjaGlzcV9jYWxjIjogMC4wMDA0MzYsICJwc2lfY2FsYyI6IDAuMDAwNDQyfSwgeyJidWNrZXQiOiAiQTYyIiwgInRyYWluX2NvdW50IjogNzcsICJldmFsX2NvdW50IjogMTEsICJ0cmFpbl9wZXJjZW50IjogMC4wOTYyNSwgImV2YWxfcGVyY2VudCI6IDAuMTEsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40NDE1NTgsICJldmFsX21lYW5fc2NvcmUiOiAwLjU0NTQ1NSwgInNjb3JlX21lYW5fZGlmZiI6IDAuMTAzODk2LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjcwMjUsICJldmFsX2N1bV9wZXJjZW50IjogMC43LCAia3NfY2FsYyI6IDAuMDAyNSwgImNoaXNxX2NhbGMiOiAwLjAwMTk2NCwgInBzaV9jYWxjIjogMC4wMDE4MzZ9LCB7ImJ1Y2tldCI6ICJBNjMiLCAidHJhaW5fY291bnQiOiA1MywgImV2YWxfY291bnQiOiA1LCAidHJhaW5fcGVyY2VudCI6IDAuMDY2MjUsICJldmFsX3BlcmNlbnQiOiAwLjA1LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMTUwOTQzLCAiZXZhbF9tZWFuX3Njb3JlIjogMC4wLCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMTUwOTQzLCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjc2ODc1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNzUsICJrc19jYWxjIjogMC4wMTg3NSwgImNoaXNxX2NhbGMiOiAwLjAwMzk4NiwgInBzaV9jYWxjIjogMC4wMDQ1NzN9LCB7ImJ1Y2tldCI6ICJBNjQiLCAidHJhaW5fY291bnQiOiA0MCwgImV2YWxfY291bnQiOiA0LCAidHJhaW5fcGVyY2VudCI6IDAuMDUsICJldmFsX3BlcmNlbnQiOiAwLjA0LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMiwgImV2YWxfbWVhbl9zY29yZSI6IDAuNzUsICJzY29yZV9tZWFuX2RpZmYiOiAwLjU1LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjgxODc1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNzksICJrc19jYWxjIjogMC4wMjg3NSwgImNoaXNxX2NhbGMiOiAwLjAwMiwgInBzaV9jYWxjIjogMC4wMDIyMzF9LCB7ImJ1Y2tldCI6ICJBNjUiLCAidHJhaW5fY291bnQiOiAxNDUsICJldmFsX2NvdW50IjogMjEsICJ0cmFpbl9wZXJjZW50IjogMC4xODEyNSwgImV2YWxfcGVyY2VudCI6IDAuMjEsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC4yMDY4OTcsICJldmFsX21lYW5fc2NvcmUiOiAwLjA5NTIzOCwgInNjb3JlX21lYW5fZGlmZiI6IC0wLjExMTY1OCwgInRyYWluX2N1bV9wZXJjZW50IjogMS4wLCAiZXZhbF9jdW1fcGVyY2VudCI6IDEuMCwgImtzX2NhbGMiOiAwLjAsICJjaGlzcV9jYWxjIjogMC4wMDQ1NiwgInBzaV9jYWxjIjogMC4wMDQyMzN9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDEzMzE1LCAic3RhYmlsaXR5X2NoaXNxIjogMC4wMTI5NDYsICJzdGFiaWxpdHlfa3MiOiAwLjAyODc1fSwgInByZXNlbnRfZW1wbG95bWVudF9zaW5jZSI6IHsic3RhYmlsaXR5X2FuYWx5c2lzX3RhYmxlIjogW3siYnVja2V0IjogIkE3MSIsICJ0cmFpbl9jb3VudCI6IDQ2LCAiZXZhbF9jb3VudCI6IDIsICJ0cmFpbl9wZXJjZW50IjogMC4wNTc1LCAiZXZhbF9wZXJjZW50IjogMC4wMiwgInRyYWluX21lYW5fc2NvcmUiOiAwLjY5NTY1MiwgImV2YWxfbWVhbl9zY29yZSI6IDEuMCwgInNjb3JlX21lYW5fZGlmZiI6IDAuMzA0MzQ4LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjA1NzUsICJldmFsX2N1bV9wZXJjZW50IjogMC4wMiwgImtzX2NhbGMiOiAwLjAzNzUsICJjaGlzcV9jYWxjIjogMC4wMjQ0NTcsICJwc2lfY2FsYyI6IDAuMDM5NjAyfSwgeyJidWNrZXQiOiAiQTcyIiwgInRyYWluX2NvdW50IjogMTMzLCAiZXZhbF9jb3VudCI6IDI0LCAidHJhaW5fcGVyY2VudCI6IDAuMTY2MjUsICJldmFsX3BlcmNlbnQiOiAwLjI0LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNjU0MTM1LCAiZXZhbF9tZWFuX3Njb3JlIjogMC40NTgzMzMsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4xOTU4MDIsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuMjIzNzUsICJldmFsX2N1bV9wZXJjZW50IjogMC4yNiwgImtzX2NhbGMiOiAwLjAzNjI1LCAiY2hpc3FfY2FsYyI6IDAuMDMyNzE2LCAicHNpX2NhbGMiOiAwLjAyNzA3N30sIHsiYnVja2V0IjogIkE3MyIsICJ0cmFpbl9jb3VudCI6IDI3NSwgImV2YWxfY291bnQiOiAzNywgInRyYWluX3BlcmNlbnQiOiAwLjM0Mzc1LCAiZXZhbF9wZXJjZW50IjogMC4zNywgInRyYWluX21lYW5fc2NvcmUiOiAwLjQzNjM2NCwgImV2YWxfbWVhbl9zY29yZSI6IDAuNTk0NTk1LCAic2NvcmVfbWVhbl9kaWZmIjogMC4xNTgyMzEsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuNTY3NSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjYzLCAia3NfY2FsYyI6IDAuMDYyNSwgImNoaXNxX2NhbGMiOiAwLjAwMjAwNSwgInBzaV9jYWxjIjogMC4wMDE5MzJ9LCB7ImJ1Y2tldCI6ICJBNzQiLCAidHJhaW5fY291bnQiOiAxMzUsICJldmFsX2NvdW50IjogMTIsICJ0cmFpbl9wZXJjZW50IjogMC4xNjg3NSwgImV2YWxfcGVyY2VudCI6IDAuMTIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC4zMzMzMzMsICJldmFsX21lYW5fc2NvcmUiOiAwLjE2NjY2NywgInNjb3JlX21lYW5fZGlmZiI6IC0wLjE2NjY2NywgInRyYWluX2N1bV9wZXJjZW50IjogMC43MzYyNSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjc1LCAia3NfY2FsYyI6IDAuMDEzNzUsICJjaGlzcV9jYWxjIjogMC4wMTQwODMsICJwc2lfY2FsYyI6IDAuMDE2NjJ9LCB7ImJ1Y2tldCI6ICJBNzUiLCAidHJhaW5fY291bnQiOiAyMTEsICJldmFsX2NvdW50IjogMjUsICJ0cmFpbl9wZXJjZW50IjogMC4yNjM3NSwgImV2YWxfcGVyY2VudCI6IDAuMjUsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC4zMjIyNzUsICJldmFsX21lYW5fc2NvcmUiOiAwLjI4LCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMDQyMjc1LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAxLjAsICJldmFsX2N1bV9wZXJjZW50IjogMS4wLCAia3NfY2FsYyI6IDAuMCwgImNoaXNxX2NhbGMiOiAwLjAwMDcxNywgInBzaV9jYWxjIjogMC4wMDA3MzZ9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDg1OTY3LCAic3RhYmlsaXR5X2NoaXNxIjogMC4wNzM5NzgsICJzdGFiaWxpdHlfa3MiOiAwLjA2MjV9LCAiZGVidG9yc19ndWFyYW50b3JzIjogeyJzdGFiaWxpdHlfYW5hbHlzaXNfdGFibGUiOiBbeyJidWNrZXQiOiAiQTEwMSIsICJ0cmFpbl9jb3VudCI6IDcyNSwgImV2YWxfY291bnQiOiA5MiwgInRyYWluX3BlcmNlbnQiOiAwLjkwNjI1LCAiZXZhbF9wZXJjZW50IjogMC45MiwgInRyYWluX21lYW5fc2NvcmUiOiAwLjQyODk2NiwgImV2YWxfbWVhbl9zY29yZSI6IDAuNDM0NzgzLCAic2NvcmVfbWVhbl9kaWZmIjogMC4wMDU4MTcsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuOTA2MjUsICJldmFsX2N1bV9wZXJjZW50IjogMC45MiwgImtzX2NhbGMiOiAwLjAxMzc1LCAiY2hpc3FfY2FsYyI6IDAuMDAwMjA5LCAicHNpX2NhbGMiOiAwLjAwMDIwN30sIHsiYnVja2V0IjogIkExMDIiLCAidHJhaW5fY291bnQiOiAzMywgImV2YWxfY291bnQiOiAzLCAidHJhaW5fcGVyY2VudCI6IDAuMDQxMjUsICJldmFsX3BlcmNlbnQiOiAwLjAzLCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNjM2MzY0LCAiZXZhbF9tZWFuX3Njb3JlIjogMC4zMzMzMzMsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4zMDMwMywgInRyYWluX2N1bV9wZXJjZW50IjogMC45NDc1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuOTUsICJrc19jYWxjIjogMC4wMDI1LCAiY2hpc3FfY2FsYyI6IDAuMDAzMDY4LCAicHNpX2NhbGMiOiAwLjAwMzU4M30sIHsiYnVja2V0IjogIkExMDMiLCAidHJhaW5fY291bnQiOiA0MiwgImV2YWxfY291bnQiOiA1LCAidHJhaW5fcGVyY2VudCI6IDAuMDUyNSwgImV2YWxfcGVyY2VudCI6IDAuMDUsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40NzYxOSwgImV2YWxfbWVhbl9zY29yZSI6IDAuNiwgInNjb3JlX21lYW5fZGlmZiI6IDAuMTIzODEsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMDAwMTE5LCAicHNpX2NhbGMiOiAwLjAwMDEyMn1dLCAic3RhYmlsaXR5X2luZGV4IjogMC4wMDM5MTIsICJzdGFiaWxpdHlfY2hpc3EiOiAwLjAwMzM5NiwgInN0YWJpbGl0eV9rcyI6IDAuMDEzNzV9LCAicHJvcGVydHkiOiB7InN0YWJpbGl0eV9hbmFseXNpc190YWJsZSI6IFt7ImJ1Y2tldCI6ICJBMTIxIiwgInRyYWluX2NvdW50IjogMjMyLCAiZXZhbF9jb3VudCI6IDIxLCAidHJhaW5fcGVyY2VudCI6IDAuMjksICJldmFsX3BlcmNlbnQiOiAwLjIxLCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMjk3NDE0LCAiZXZhbF9tZWFuX3Njb3JlIjogMC4yMzgwOTUsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4wNTkzMTksICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuMjksICJldmFsX2N1bV9wZXJjZW50IjogMC4yMSwgImtzX2NhbGMiOiAwLjA4LCAiY2hpc3FfY2FsYyI6IDAuMDIyMDY5LCAicHNpX2NhbGMiOiAwLjAyNTgyMn0sIHsiYnVja2V0IjogIkExMjIiLCAidHJhaW5fY291bnQiOiAxODEsICJldmFsX2NvdW50IjogMjksICJ0cmFpbl9wZXJjZW50IjogMC4yMjYyNSwgImV2YWxfcGVyY2VudCI6IDAuMjksICJ0cmFpbl9tZWFuX3Njb3JlIjogMC41NDE0MzYsICJldmFsX21lYW5fc2NvcmUiOiAwLjM3OTMxLCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMTYyMTI2LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjUxNjI1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNSwgImtzX2NhbGMiOiAwLjAxNjI1LCAiY2hpc3FfY2FsYyI6IDAuMDE3OTYzLCAicHNpX2NhbGMiOiAwLjAxNTgyNX0sIHsiYnVja2V0IjogIkExMjMiLCAidHJhaW5fY291bnQiOiAyNjQsICJldmFsX2NvdW50IjogMzcsICJ0cmFpbl9wZXJjZW50IjogMC4zMywgImV2YWxfcGVyY2VudCI6IDAuMzcsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40MDE1MTUsICJldmFsX21lYW5fc2NvcmUiOiAwLjU2NzU2OCwgInNjb3JlX21lYW5fZGlmZiI6IDAuMTY2MDUyLCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjg0NjI1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuODcsICJrc19jYWxjIjogMC4wMjM3NSwgImNoaXNxX2NhbGMiOiAwLjAwNDg0OCwgInBzaV9jYWxjIjogMC4wMDQ1NzZ9LCB7ImJ1Y2tldCI6ICJBMTI0IiwgInRyYWluX2NvdW50IjogMTIzLCAiZXZhbF9jb3VudCI6IDEzLCAidHJhaW5fcGVyY2VudCI6IDAuMTUzNzUsICJldmFsX3BlcmNlbnQiOiAwLjEzLCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNjQyMjc2LCAiZXZhbF9tZWFuX3Njb3JlIjogMC41Mzg0NjIsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4xMDM4MTUsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMDAzNjY5LCAicHNpX2NhbGMiOiAwLjAwMzk4NX1dLCAic3RhYmlsaXR5X2luZGV4IjogMC4wNTAyMDgsICJzdGFiaWxpdHlfY2hpc3EiOiAwLjA0ODU0OSwgInN0YWJpbGl0eV9rcyI6IDAuMDh9LCAiaW5zdGFsbG1lbnRfcGxhbnMiOiB7InN0YWJpbGl0eV9hbmFseXNpc190YWJsZSI6IFt7ImJ1Y2tldCI6ICJBMTQxIiwgInRyYWluX2NvdW50IjogMTA5LCAiZXZhbF9jb3VudCI6IDE2LCAidHJhaW5fcGVyY2VudCI6IDAuMTM2MjUsICJldmFsX3BlcmNlbnQiOiAwLjE2LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNTg3MTU2LCAiZXZhbF9tZWFuX3Njb3JlIjogMC41NjI1LCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMDI0NjU2LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjEzNjI1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuMTYsICJrc19jYWxjIjogMC4wMjM3NSwgImNoaXNxX2NhbGMiOiAwLjAwNDE0LCAicHNpX2NhbGMiOiAwLjAwMzgxNn0sIHsiYnVja2V0IjogIkExNDIiLCAidHJhaW5fY291bnQiOiAzNywgImV2YWxfY291bnQiOiA0LCAidHJhaW5fcGVyY2VudCI6IDAuMDQ2MjUsICJldmFsX3BlcmNlbnQiOiAwLjA0LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNjc1Njc2LCAiZXZhbF9tZWFuX3Njb3JlIjogMC41LCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMTc1Njc2LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjE4MjUsICJldmFsX2N1bV9wZXJjZW50IjogMC4yLCAia3NfY2FsYyI6IDAuMDE3NSwgImNoaXNxX2NhbGMiOiAwLjAwMDg0NSwgInBzaV9jYWxjIjogMC4wMDA5MDd9LCB7ImJ1Y2tldCI6ICJBMTQzIiwgInRyYWluX2NvdW50IjogNjU0LCAiZXZhbF9jb3VudCI6IDgwLCAidHJhaW5fcGVyY2VudCI6IDAuODE3NSwgImV2YWxfcGVyY2VudCI6IDAuOCwgInRyYWluX21lYW5fc2NvcmUiOiAwLjQwMjE0MSwgImV2YWxfbWVhbl9zY29yZSI6IDAuNDEyNSwgInNjb3JlX21lYW5fZGlmZiI6IDAuMDEwMzU5LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAxLjAsICJldmFsX2N1bV9wZXJjZW50IjogMS4wLCAia3NfY2FsYyI6IDAuMCwgImNoaXNxX2NhbGMiOiAwLjAwMDM3NSwgInBzaV9jYWxjIjogMC4wMDAzNzl9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDA1MTAyLCAic3RhYmlsaXR5X2NoaXNxIjogMC4wMDUzNiwgInN0YWJpbGl0eV9rcyI6IDAuMDIzNzV9LCAiaG91c2luZyI6IHsic3RhYmlsaXR5X2FuYWx5c2lzX3RhYmxlIjogW3siYnVja2V0IjogIkExNTEiLCAidHJhaW5fY291bnQiOiAxNDMsICJldmFsX2NvdW50IjogMTAsICJ0cmFpbl9wZXJjZW50IjogMC4xNzg3NSwgImV2YWxfcGVyY2VudCI6IDAuMSwgInRyYWluX21lYW5fc2NvcmUiOiAwLjY1MDM1LCAiZXZhbF9tZWFuX3Njb3JlIjogMC41LCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMTUwMzUsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuMTc4NzUsICJldmFsX2N1bV9wZXJjZW50IjogMC4xLCAia3NfY2FsYyI6IDAuMDc4NzUsICJjaGlzcV9jYWxjIjogMC4wMzQ2OTQsICJwc2lfY2FsYyI6IDAuMDQ1NzM5fSwgeyJidWNrZXQiOiAiQTE1MiIsICJ0cmFpbl9jb3VudCI6IDU3MiwgImV2YWxfY291bnQiOiA4MiwgInRyYWluX3BlcmNlbnQiOiAwLjcxNSwgImV2YWxfcGVyY2VudCI6IDAuODIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC4zNDk2NSwgImV2YWxfbWVhbl9zY29yZSI6IDAuNDI2ODI5LCAic2NvcmVfbWVhbl9kaWZmIjogMC4wNzcxNzksICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuODkzNzUsICJldmFsX2N1bV9wZXJjZW50IjogMC45MiwgImtzX2NhbGMiOiAwLjAyNjI1LCAiY2hpc3FfY2FsYyI6IDAuMDE1NDIsICJwc2lfY2FsYyI6IDAuMDE0Mzg3fSwgeyJidWNrZXQiOiAiQTE1MyIsICJ0cmFpbl9jb3VudCI6IDg1LCAiZXZhbF9jb3VudCI6IDgsICJ0cmFpbl9wZXJjZW50IjogMC4xMDYyNSwgImV2YWxfcGVyY2VudCI6IDAuMDgsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC42OTQxMTgsICJldmFsX21lYW5fc2NvcmUiOiAwLjUsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4xOTQxMTgsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMDA2NDg1LCAicHNpX2NhbGMiOiAwLjAwNzQ0OX1dLCAic3RhYmlsaXR5X2luZGV4IjogMC4wNjc1NzUsICJzdGFiaWxpdHlfY2hpc3EiOiAwLjA1NjU5OSwgInN0YWJpbGl0eV9rcyI6IDAuMDc4NzV9LCAiam9iIjogeyJzdGFiaWxpdHlfYW5hbHlzaXNfdGFibGUiOiBbeyJidWNrZXQiOiAiQTE3MSIsICJ0cmFpbl9jb3VudCI6IDE5LCAiZXZhbF9jb3VudCI6IDAsICJ0cmFpbl9wZXJjZW50IjogMC4wMjM3NSwgImV2YWxfcGVyY2VudCI6IDAuMCwgInRyYWluX21lYW5fc2NvcmUiOiAwLjY4NDIxMSwgImV2YWxfbWVhbl9zY29yZSI6IG51bGwsICJzY29yZV9tZWFuX2RpZmYiOiBudWxsLCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjAyMzc1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuMCwgImtzX2NhbGMiOiAwLjAyMzc1LCAiY2hpc3FfY2FsYyI6IDAuMDIzNzUsICJwc2lfY2FsYyI6IG51bGx9LCB7ImJ1Y2tldCI6ICJBMTcyIiwgInRyYWluX2NvdW50IjogMTU5LCAiZXZhbF9jb3VudCI6IDIwLCAidHJhaW5fcGVyY2VudCI6IDAuMTk4NzUsICJldmFsX3BlcmNlbnQiOiAwLjIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40NjU0MDksICJldmFsX21lYW5fc2NvcmUiOiAwLjI1LCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMjE1NDA5LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjIyMjUsICJldmFsX2N1bV9wZXJjZW50IjogMC4yLCAia3NfY2FsYyI6IDAuMDIyNSwgImNoaXNxX2NhbGMiOiA4ZS0wNiwgInBzaV9jYWxjIjogOGUtMDZ9LCB7ImJ1Y2tldCI6ICJBMTczIiwgInRyYWluX2NvdW50IjogNTA1LCAiZXZhbF9jb3VudCI6IDY2LCAidHJhaW5fcGVyY2VudCI6IDAuNjMxMjUsICJldmFsX3BlcmNlbnQiOiAwLjY2LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMzk4MDIsICJldmFsX21lYW5fc2NvcmUiOiAwLjQzOTM5NCwgInNjb3JlX21lYW5fZGlmZiI6IDAuMDQxMzc0LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjg1Mzc1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuODYsICJrc19jYWxjIjogMC4wMDYyNSwgImNoaXNxX2NhbGMiOiAwLjAwMTMwOSwgInBzaV9jYWxjIjogMC4wMDEyOH0sIHsiYnVja2V0IjogIkExNzQiLCAidHJhaW5fY291bnQiOiAxMTcsICJldmFsX2NvdW50IjogMTQsICJ0cmFpbl9wZXJjZW50IjogMC4xNDYyNSwgImV2YWxfcGVyY2VudCI6IDAuMTQsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC41NDcwMDksICJldmFsX21lYW5fc2NvcmUiOiAwLjcxNDI4NiwgInNjb3JlX21lYW5fZGlmZiI6IDAuMTY3Mjc3LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAxLjAsICJldmFsX2N1bV9wZXJjZW50IjogMS4wLCAia3NfY2FsYyI6IDAuMCwgImNoaXNxX2NhbGMiOiAwLjAwMDI2NywgInBzaV9jYWxjIjogMC4wMDAyNzN9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDAxNTYxLCAic3RhYmlsaXR5X2NoaXNxIjogMC4wMjUzMzQsICJzdGFiaWxpdHlfa3MiOiAwLjAyMzc1fSwgInRlbGVwaG9uZSI6IHsic3RhYmlsaXR5X2FuYWx5c2lzX3RhYmxlIjogW3siYnVja2V0IjogIkExOTEiLCAidHJhaW5fY291bnQiOiA0NzEsICJldmFsX2NvdW50IjogNjAsICJ0cmFpbl9wZXJjZW50IjogMC41ODg3NSwgImV2YWxfcGVyY2VudCI6IDAuNiwgInRyYWluX21lYW5fc2NvcmUiOiAwLjQ3NzcwNywgImV2YWxfbWVhbl9zY29yZSI6IDAuNDMzMzMzLCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMDQ0Mzc0LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjU4ODc1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNiwgImtzX2NhbGMiOiAwLjAxMTI1LCAiY2hpc3FfY2FsYyI6IDAuMDAwMjE1LCAicHNpX2NhbGMiOiAwLjAwMDIxM30sIHsiYnVja2V0IjogIkExOTIiLCAidHJhaW5fY291bnQiOiAzMjksICJldmFsX2NvdW50IjogNDAsICJ0cmFpbl9wZXJjZW50IjogMC40MTEyNSwgImV2YWxfcGVyY2VudCI6IDAuNCwgInRyYWluX21lYW5fc2NvcmUiOiAwLjM4NjAxOCwgImV2YWxfbWVhbl9zY29yZSI6IDAuNDUsICJzY29yZV9tZWFuX2RpZmYiOiAwLjA2Mzk4MiwgInRyYWluX2N1bV9wZXJjZW50IjogMS4wLCAiZXZhbF9jdW1fcGVyY2VudCI6IDEuMCwgImtzX2NhbGMiOiAwLjAsICJjaGlzcV9jYWxjIjogMC4wMDAzMDgsICJwc2lfY2FsYyI6IDAuMDAwMzEyfV0sICJzdGFiaWxpdHlfaW5kZXgiOiAwLjAwMDUyNSwgInN0YWJpbGl0eV9jaGlzcSI6IDAuMDAwNTIzLCAic3RhYmlsaXR5X2tzIjogMC4wMTEyNX0sICJmb3JlaWduX3dvcmtlciI6IHsic3RhYmlsaXR5X2FuYWx5c2lzX3RhYmxlIjogW3siYnVja2V0IjogIkEyMDEiLCAidHJhaW5fY291bnQiOiA3NzIsICJldmFsX2NvdW50IjogOTYsICJ0cmFpbl9wZXJjZW50IjogMC45NjUsICJldmFsX3BlcmNlbnQiOiAwLjk2LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNDQzMDA1LCAiZXZhbF9tZWFuX3Njb3JlIjogMC40NTgzMzMsICJzY29yZV9tZWFuX2RpZmYiOiAwLjAxNTMyOCwgInRyYWluX2N1bV9wZXJjZW50IjogMC45NjUsICJldmFsX2N1bV9wZXJjZW50IjogMC45NiwgImtzX2NhbGMiOiAwLjAwNSwgImNoaXNxX2NhbGMiOiAyLjZlLTA1LCAicHNpX2NhbGMiOiAyLjZlLTA1fSwgeyJidWNrZXQiOiAiQTIwMiIsICJ0cmFpbl9jb3VudCI6IDI4LCAiZXZhbF9jb3VudCI6IDQsICJ0cmFpbl9wZXJjZW50IjogMC4wMzUsICJldmFsX3BlcmNlbnQiOiAwLjA0LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMzU3MTQzLCAiZXZhbF9tZWFuX3Njb3JlIjogMC4wLCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMzU3MTQzLCAidHJhaW5fY3VtX3BlcmNlbnQiOiAxLjAsICJldmFsX2N1bV9wZXJjZW50IjogMS4wLCAia3NfY2FsYyI6IDAuMCwgImNoaXNxX2NhbGMiOiAwLjAwMDcxNCwgInBzaV9jYWxjIjogMC4wMDA2Njh9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDAwNjk0LCAic3RhYmlsaXR5X2NoaXNxIjogMC4wMDA3NCwgInN0YWJpbGl0eV9rcyI6IDAuMDA1fSwgImdlbmRlciI6IHsic3RhYmlsaXR5X2FuYWx5c2lzX3RhYmxlIjogW3siYnVja2V0IjogImZlbWFsZSIsICJ0cmFpbl9jb3VudCI6IDIzOCwgImV2YWxfY291bnQiOiAzNiwgInRyYWluX3BlcmNlbnQiOiAwLjI5NzUsICJldmFsX3BlcmNlbnQiOiAwLjM2LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNDk1Nzk4LCAiZXZhbF9tZWFuX3Njb3JlIjogMC40NDQ0NDQsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4wNTEzNTQsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuMjk3NSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjM2LCAia3NfY2FsYyI6IDAuMDYyNSwgImNoaXNxX2NhbGMiOiAwLjAxMzEzLCAicHNpX2NhbGMiOiAwLjAxMTkxOH0sIHsiYnVja2V0IjogIm1hbGUiLCAidHJhaW5fY291bnQiOiA1NjIsICJldmFsX2NvdW50IjogNjQsICJ0cmFpbl9wZXJjZW50IjogMC43MDI1LCAiZXZhbF9wZXJjZW50IjogMC42NCwgInRyYWluX21lYW5fc2NvcmUiOiAwLjQxNjM3LCAiZXZhbF9tZWFuX3Njb3JlIjogMC40Mzc1LCAic2NvcmVfbWVhbl9kaWZmIjogMC4wMjExMywgInRyYWluX2N1bV9wZXJjZW50IjogMS4wLCAiZXZhbF9jdW1fcGVyY2VudCI6IDEuMCwgImtzX2NhbGMiOiAwLjAsICJjaGlzcV9jYWxjIjogMC4wMDU1NiwgInBzaV9jYWxjIjogMC4wMDU4MjR9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDE3NzQyLCAic3RhYmlsaXR5X2NoaXNxIjogMC4wMTg2OSwgInN0YWJpbGl0eV9rcyI6IDAuMDYyNX0sICJkdXJhdGlvbl9tb250aHMiOiB7InN0YWJpbGl0eV9hbmFseXNpc190YWJsZSI6IFt7ImJ1Y2tldCI6ICIoLWluZiwgMTguMF0iLCAidHJhaW5fY291bnQiOiA0NDEsICJldmFsX2NvdW50IjogNDgsICJ0cmFpbl9wZXJjZW50IjogMC41NTEyNSwgImV2YWxfcGVyY2VudCI6IDAuNDgsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40MjE3NjksICJldmFsX21lYW5fc2NvcmUiOiAwLjM1NDE2NywgInNjb3JlX21lYW5fZGlmZiI6IC0wLjA2NzYwMiwgInRyYWluX2N1bV9wZXJjZW50IjogMC41NTEyNSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjQ4LCAia3NfY2FsYyI6IDAuMDcxMjUsICJjaGlzcV9jYWxjIjogMC4wMDkyMDksICJwc2lfY2FsYyI6IDAuMDA5ODYxfSwgeyJidWNrZXQiOiAiKDE4LjAsIGluZl0iLCAidHJhaW5fY291bnQiOiAzNTksICJldmFsX2NvdW50IjogNTIsICJ0cmFpbl9wZXJjZW50IjogMC40NDg3NSwgImV2YWxfcGVyY2VudCI6IDAuNTIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40NjIzOTYsICJldmFsX21lYW5fc2NvcmUiOiAwLjUxOTIzMSwgInNjb3JlX21lYW5fZGlmZiI6IDAuMDU2ODM1LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAxLjAsICJldmFsX2N1bV9wZXJjZW50IjogMS4wLCAia3NfY2FsYyI6IDAuMCwgImNoaXNxX2NhbGMiOiAwLjAxMTMxMywgInBzaV9jYWxjIjogMC4wMTA1fV0sICJzdGFiaWxpdHlfaW5kZXgiOiAwLjAyMDM2MSwgInN0YWJpbGl0eV9jaGlzcSI6IDAuMDIwNTIyLCAic3RhYmlsaXR5X2tzIjogMC4wNzEyNX0sICJjcmVkaXRfYW1vdW50IjogeyJzdGFiaWxpdHlfYW5hbHlzaXNfdGFibGUiOiBbeyJidWNrZXQiOiAiKC1pbmYsIDIyODEuMF0iLCAidHJhaW5fY291bnQiOiA0MDAsICJldmFsX2NvdW50IjogMzcsICJ0cmFpbl9wZXJjZW50IjogMC41LCAiZXZhbF9wZXJjZW50IjogMC4zNywgInRyYWluX21lYW5fc2NvcmUiOiAwLjQxLCAiZXZhbF9tZWFuX3Njb3JlIjogMC4zNzgzNzgsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4wMzE2MjIsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuNSwgImV2YWxfY3VtX3BlcmNlbnQiOiAwLjM3LCAia3NfY2FsYyI6IDAuMTMsICJjaGlzcV9jYWxjIjogMC4wMzM4LCAicHNpX2NhbGMiOiAwLjAzOTE0NH0sIHsiYnVja2V0IjogIigyMjgxLjAsIGluZl0iLCAidHJhaW5fY291bnQiOiA0MDAsICJldmFsX2NvdW50IjogNjMsICJ0cmFpbl9wZXJjZW50IjogMC41LCAiZXZhbF9wZXJjZW50IjogMC42MywgInRyYWluX21lYW5fc2NvcmUiOiAwLjQ3LCAiZXZhbF9tZWFuX3Njb3JlIjogMC40NzYxOSwgInNjb3JlX21lYW5fZGlmZiI6IDAuMDA2MTksICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMDMzOCwgInBzaV9jYWxjIjogMC4wMzAwNDV9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDY5MTg5LCAic3RhYmlsaXR5X2NoaXNxIjogMC4wNjc2LCAic3RhYmlsaXR5X2tzIjogMC4xM30sICJpbnN0YWxsbWVudF9yYXRlIjogeyJzdGFiaWxpdHlfYW5hbHlzaXNfdGFibGUiOiBbeyJidWNrZXQiOiAiKC1pbmYsIDMuMF0iLCAidHJhaW5fY291bnQiOiA0MTEsICJldmFsX2NvdW50IjogNTksICJ0cmFpbl9wZXJjZW50IjogMC41MTM3NSwgImV2YWxfcGVyY2VudCI6IDAuNTksICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40MTg0OTEsICJldmFsX21lYW5fc2NvcmUiOiAwLjQwNjc4LCAic2NvcmVfbWVhbl9kaWZmIjogLTAuMDExNzEyLCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjUxMzc1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNTksICJrc19jYWxjIjogMC4wNzYyNSwgImNoaXNxX2NhbGMiOiAwLjAxMTMxNywgInBzaV9jYWxjIjogMC4wMTA1NTJ9LCB7ImJ1Y2tldCI6ICIoMy4wLCBpbmZdIiwgInRyYWluX2NvdW50IjogMzg5LCAiZXZhbF9jb3VudCI6IDQxLCAidHJhaW5fcGVyY2VudCI6IDAuNDg2MjUsICJldmFsX3BlcmNlbnQiOiAwLjQxLCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNDYyNzI1LCAiZXZhbF9tZWFuX3Njb3JlIjogMC40ODc4MDUsICJzY29yZV9tZWFuX2RpZmYiOiAwLjAyNTA4LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAxLjAsICJldmFsX2N1bV9wZXJjZW50IjogMS4wLCAia3NfY2FsYyI6IDAuMCwgImNoaXNxX2NhbGMiOiAwLjAxMTk1NywgInBzaV9jYWxjIjogMC4wMTMwMDZ9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDIzNTU4LCAic3RhYmlsaXR5X2NoaXNxIjogMC4wMjMyNzQsICJzdGFiaWxpdHlfa3MiOiAwLjA3NjI1fSwgInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlIjogeyJzdGFiaWxpdHlfYW5hbHlzaXNfdGFibGUiOiBbeyJidWNrZXQiOiAiKC1pbmYsIDMuMF0iLCAidHJhaW5fY291bnQiOiA0NjksICJldmFsX2NvdW50IjogNjEsICJ0cmFpbl9wZXJjZW50IjogMC41ODYyNSwgImV2YWxfcGVyY2VudCI6IDAuNjEsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40MzkyMzIsICJldmFsX21lYW5fc2NvcmUiOiAwLjQ1OTAxNiwgInNjb3JlX21lYW5fZGlmZiI6IDAuMDE5Nzg0LCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjU4NjI1LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNjEsICJrc19jYWxjIjogMC4wMjM3NSwgImNoaXNxX2NhbGMiOiAwLjAwMDk2MiwgInBzaV9jYWxjIjogMC4wMDA5NDN9LCB7ImJ1Y2tldCI6ICIoMy4wLCBpbmZdIiwgInRyYWluX2NvdW50IjogMzMxLCAiZXZhbF9jb3VudCI6IDM5LCAidHJhaW5fcGVyY2VudCI6IDAuNDEzNzUsICJldmFsX3BlcmNlbnQiOiAwLjM5LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuNDQxMDg4LCAiZXZhbF9tZWFuX3Njb3JlIjogMC40MTAyNTYsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4wMzA4MzEsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMDAxMzYzLCAicHNpX2NhbGMiOiAwLjAwMTQwNH1dLCAic3RhYmlsaXR5X2luZGV4IjogMC4wMDIzNDcsICJzdGFiaWxpdHlfY2hpc3EiOiAwLjAwMjMyNSwgInN0YWJpbGl0eV9rcyI6IDAuMDIzNzV9LCAiYWdlX3llYXJzIjogeyJzdGFiaWxpdHlfYW5hbHlzaXNfdGFibGUiOiBbeyJidWNrZXQiOiAiKC1pbmYsIDMzLjBdIiwgInRyYWluX2NvdW50IjogNDAwLCAiZXZhbF9jb3VudCI6IDUyLCAidHJhaW5fcGVyY2VudCI6IDAuNSwgImV2YWxfcGVyY2VudCI6IDAuNTIsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC40OTUsICJldmFsX21lYW5fc2NvcmUiOiAwLjUzODQ2MiwgInNjb3JlX21lYW5fZGlmZiI6IDAuMDQzNDYyLCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjUsICJldmFsX2N1bV9wZXJjZW50IjogMC41MiwgImtzX2NhbGMiOiAwLjAyLCAiY2hpc3FfY2FsYyI6IDAuMDAwOCwgInBzaV9jYWxjIjogMC4wMDA3ODR9LCB7ImJ1Y2tldCI6ICIoMzMuMCwgaW5mXSIsICJ0cmFpbl9jb3VudCI6IDQwMCwgImV2YWxfY291bnQiOiA0OCwgInRyYWluX3BlcmNlbnQiOiAwLjUsICJldmFsX3BlcmNlbnQiOiAwLjQ4LCAidHJhaW5fbWVhbl9zY29yZSI6IDAuMzg1LCAiZXZhbF9tZWFuX3Njb3JlIjogMC4zMzMzMzMsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4wNTE2NjcsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMDAwOCwgInBzaV9jYWxjIjogMC4wMDA4MTZ9XSwgInN0YWJpbGl0eV9pbmRleCI6IDAuMDAxNiwgInN0YWJpbGl0eV9jaGlzcSI6IDAuMDAxNiwgInN0YWJpbGl0eV9rcyI6IDAuMDJ9LCAibnVtYmVyX2V4aXN0aW5nX2NyZWRpdHMiOiB7InN0YWJpbGl0eV9hbmFseXNpc190YWJsZSI6IFt7ImJ1Y2tldCI6ICIoLWluZiwgMS4wXSIsICJ0cmFpbl9jb3VudCI6IDUwMywgImV2YWxfY291bnQiOiA2OSwgInRyYWluX3BlcmNlbnQiOiAwLjYyODc1LCAiZXZhbF9wZXJjZW50IjogMC42OSwgInRyYWluX21lYW5fc2NvcmUiOiAwLjUwMDk5NCwgImV2YWxfbWVhbl9zY29yZSI6IDAuNTM2MjMyLCAic2NvcmVfbWVhbl9kaWZmIjogMC4wMzUyMzgsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuNjI4NzUsICJldmFsX2N1bV9wZXJjZW50IjogMC42OSwgImtzX2NhbGMiOiAwLjA2MTI1LCAiY2hpc3FfY2FsYyI6IDAuMDA1OTY3LCAicHNpX2NhbGMiOiAwLjAwNTY5NH0sIHsiYnVja2V0IjogIigxLjAsIGluZl0iLCAidHJhaW5fY291bnQiOiAyOTcsICJldmFsX2NvdW50IjogMzEsICJ0cmFpbl9wZXJjZW50IjogMC4zNzEyNSwgImV2YWxfcGVyY2VudCI6IDAuMzEsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC4zMzY3LCAiZXZhbF9tZWFuX3Njb3JlIjogMC4yMjU4MDYsICJzY29yZV9tZWFuX2RpZmYiOiAtMC4xMTA4OTQsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMDEwMTA1LCAicHNpX2NhbGMiOiAwLjAxMTA0NH1dLCAic3RhYmlsaXR5X2luZGV4IjogMC4wMTY3MzgsICJzdGFiaWxpdHlfY2hpc3EiOiAwLjAxNjA3MiwgInN0YWJpbGl0eV9rcyI6IDAuMDYxMjV9LCAibnVtYmVyX3Blb3BsZV9saWFibGUiOiB7InN0YWJpbGl0eV9hbmFseXNpc190YWJsZSI6IFt7ImJ1Y2tldCI6ICIoLWluZiwgMS4wXSIsICJ0cmFpbl9jb3VudCI6IDY3OSwgImV2YWxfY291bnQiOiA4MSwgInRyYWluX3BlcmNlbnQiOiAwLjg0ODc1LCAiZXZhbF9wZXJjZW50IjogMC44MSwgInRyYWluX21lYW5fc2NvcmUiOiAwLjQyNzA5OSwgImV2YWxfbWVhbl9zY29yZSI6IDAuNDY5MTM2LCAic2NvcmVfbWVhbl9kaWZmIjogMC4wNDIwMzcsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDAuODQ4NzUsICJldmFsX2N1bV9wZXJjZW50IjogMC44MSwgImtzX2NhbGMiOiAwLjAzODc1LCAiY2hpc3FfY2FsYyI6IDAuMDAxNzY5LCAicHNpX2NhbGMiOiAwLjAwMTgxMX0sIHsiYnVja2V0IjogIigxLjAsIGluZl0iLCAidHJhaW5fY291bnQiOiAxMjEsICJldmFsX2NvdW50IjogMTksICJ0cmFpbl9wZXJjZW50IjogMC4xNTEyNSwgImV2YWxfcGVyY2VudCI6IDAuMTksICJ0cmFpbl9tZWFuX3Njb3JlIjogMC41MTIzOTcsICJldmFsX21lYW5fc2NvcmUiOiAwLjMxNTc4OSwgInNjb3JlX21lYW5fZGlmZiI6IC0wLjE5NjYwNywgInRyYWluX2N1bV9wZXJjZW50IjogMS4wLCAiZXZhbF9jdW1fcGVyY2VudCI6IDEuMCwgImtzX2NhbGMiOiAwLjAsICJjaGlzcV9jYWxjIjogMC4wMDk5MjgsICJwc2lfY2FsYyI6IDAuMDA4ODM4fV0sICJzdGFiaWxpdHlfaW5kZXgiOiAwLjAxMDY0OSwgInN0YWJpbGl0eV9jaGlzcSI6IDAuMDExNjk3LCAic3RhYmlsaXR5X2tzIjogMC4wMzg3NX0sICJzY29yZSI6IHsic3RhYmlsaXR5X2FuYWx5c2lzX3RhYmxlIjogW3siYnVja2V0IjogIjAiLCAidHJhaW5fY291bnQiOiA0NDgsICJldmFsX2NvdW50IjogNTYsICJ0cmFpbl9wZXJjZW50IjogMC41NiwgImV2YWxfcGVyY2VudCI6IDAuNTYsICJ0cmFpbl9tZWFuX3Njb3JlIjogMC4wLCAiZXZhbF9tZWFuX3Njb3JlIjogMC4wLCAic2NvcmVfbWVhbl9kaWZmIjogMC4wLCAidHJhaW5fY3VtX3BlcmNlbnQiOiAwLjU2LCAiZXZhbF9jdW1fcGVyY2VudCI6IDAuNTYsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMCwgInBzaV9jYWxjIjogMC4wfSwgeyJidWNrZXQiOiAiMSIsICJ0cmFpbl9jb3VudCI6IDM1MiwgImV2YWxfY291bnQiOiA0NCwgInRyYWluX3BlcmNlbnQiOiAwLjQ0LCAiZXZhbF9wZXJjZW50IjogMC40NCwgInRyYWluX21lYW5fc2NvcmUiOiAxLjAsICJldmFsX21lYW5fc2NvcmUiOiAxLjAsICJzY29yZV9tZWFuX2RpZmYiOiAwLjAsICJ0cmFpbl9jdW1fcGVyY2VudCI6IDEuMCwgImV2YWxfY3VtX3BlcmNlbnQiOiAxLjAsICJrc19jYWxjIjogMC4wLCAiY2hpc3FfY2FsYyI6IDAuMCwgInBzaV9jYWxjIjogMC4wfV0sICJzdGFiaWxpdHlfaW5kZXgiOiAwLjAsICJzdGFiaWxpdHlfY2hpc3EiOiAwLjAsICJzdGFiaWxpdHlfa3MiOiAwLjB9fX1dLCAiY2hhcmFjdGVyaXN0aWNfc3RhYmlsaXR5X21heF9zdGFiaWxpdHlfaW5kZXgiOiAwLjI0MTgyNywgImJpYXMiOiBbeyJ0ZXN0X25hbWUiOiAiQWVxdWl0YXMgQmlhcyIsICJ0ZXN0X2NhdGVnb3J5IjogImJpYXMiLCAidGVzdF90eXBlIjogImJpYXMiLCAicHJvdGVjdGVkX2NsYXNzIjogImdlbmRlciIsICJ0ZXN0X2lkIjogImJpYXNfYmlhc19nZW5kZXIiLCAicmVmZXJlbmNlX2dyb3VwIjogIm1hbGUiLCAidGhyZXNob2xkcyI6IHsibWluIjogMC44LCAibWF4IjogMS4yNX0sICJ2YWx1ZXMiOiBbeyJhdHRyaWJ1dGVfbmFtZSI6ICJnZW5kZXIiLCAiYXR0cmlidXRlX3ZhbHVlIjogImZlbWFsZSIsICJwcHJfZGlzcGFyaXR5IjogMC41NzE0LCAicHByZXZfZGlzcGFyaXR5IjogMS4wMTU5LCAicHJlY2lzaW9uX2Rpc3Bhcml0eSI6IDEuMjcyNywgImZkcl9kaXNwYXJpdHkiOiAwLjgyMzUsICJmb3JfZGlzcGFyaXR5IjogMi4yNSwgImZwcl9kaXNwYXJpdHkiOiAxLjAwMjYsICJmbnJfZGlzcGFyaXR5IjogMS40NDIzLCAidHByX2Rpc3Bhcml0eSI6IDAuODM5MiwgInRucl9kaXNwYXJpdHkiOiAwLjk5ODYsICJucHZfZGlzcGFyaXR5IjogMC44NDM4fSwgeyJhdHRyaWJ1dGVfbmFtZSI6ICJnZW5kZXIiLCAiYXR0cmlidXRlX3ZhbHVlIjogIm1hbGUiLCAicHByX2Rpc3Bhcml0eSI6IDEuMCwgInBwcmV2X2Rpc3Bhcml0eSI6IDEuMCwgInByZWNpc2lvbl9kaXNwYXJpdHkiOiAxLjAsICJmZHJfZGlzcGFyaXR5IjogMS4wLCAiZm9yX2Rpc3Bhcml0eSI6IDEuMCwgImZwcl9kaXNwYXJpdHkiOiAxLjAsICJmbnJfZGlzcGFyaXR5IjogMS4wLCAidHByX2Rpc3Bhcml0eSI6IDEuMCwgInRucl9kaXNwYXJpdHkiOiAxLjAsICJucHZfZGlzcGFyaXR5IjogMS4wfV19XSwgImdlbmRlcl9mZW1hbGVfc3RhdGlzdGljYWxfcGFyaXR5IjogMC41NzE0LCAiZ2VuZGVyX2ZlbWFsZV9pbXBhY3RfcGFyaXR5IjogMS4wMTU5LCAiZ2VuZGVyX21hbGVfc3RhdGlzdGljYWxfcGFyaXR5IjogMS4wLCAiZ2VuZGVyX21hbGVfaW1wYWN0X3Bhcml0eSI6IDEuMCwgImV0aGljYWxfZmFpcm5lc3NfbWF4X3Bwcl9kaXNwYXJpdHkiOiAxLjAsICJldGhpY2FsX2ZhaXJuZXNzX21pbl9wcHJfZGlzcGFyaXR5IjogMC41NzE0LCAibW9kZWxVc2VDYXRlZ29yeSI6ICJ1bmFzc2lnbmVkIiwgIm1vZGVsT3JnYW5pemF0aW9uIjogIm1vZGVsb3AiLCAibW9kZWxSaXNrIjogInVuYXNzaWduZWQiLCAiaGVhdE1hcCI6IHsiU3VtbWFyeSI6IHsidGVzdFJlc3VsdCI6ICJSZWQiLCAiZGVzY3JpcHRpb24iOiAiTW9uaXRvcnMgc3VtbWFyeSIsICJtb25pdG9yUmVzdWx0cyI6IHsiR3JheSI6IDAsICJHcmVlbiI6IDIsICJZZWxsb3ciOiAxLCAiUmVkIjogM319LCAiQ2hhcmFjdGVyaXN0aWMgU3RhYmlsaXR5IjogeyJ0ZXN0UmVzdWx0IjogIlJlZCJ9LCAiUGVyZm9ybWFuY2UgTW9uaXRvciI6IHsidGVzdFJlc3VsdCI6ICJZZWxsb3cifSwgIkV0aGljYWwgRmFpcm5lc3MiOiB7InRlc3RSZXN1bHQiOiAiUmVkIn0sICJEYXRhIERyaWZ0IjogeyJ0ZXN0UmVzdWx0IjogIkdyZWVuIn0sICJPdXRwdXQgSW50ZWdyaXR5IjogeyJ0ZXN0UmVzdWx0IjogIlJlZCJ9LCAiQ29uY2VwdCBEcmlmdCI6IHsidGVzdFJlc3VsdCI6ICJHcmVlbiJ9fSwgImhlYXRNYXBfU3VtbWFyeV90ZXN0UmVzdWx0IjogIlJlZCIsICJoZWF0TWFwX1N1bW1hcnlfZGVzY3JpcHRpb24iOiAiTW9uaXRvcnMgc3VtbWFyeSIsICJoZWF0TWFwX1N1bW1hcnlfbW9uaXRvclJlc3VsdHNfR3JheSI6IDAsICJoZWF0TWFwX1N1bW1hcnlfbW9uaXRvclJlc3VsdHNfR3JlZW4iOiAyLCAiaGVhdE1hcF9TdW1tYXJ5X21vbml0b3JSZXN1bHRzX1llbGxvdyI6IDEsICJoZWF0TWFwX1N1bW1hcnlfbW9uaXRvclJlc3VsdHNfUmVkIjogMywgImhlYXRNYXBfQ2hhcmFjdGVyaXN0aWNfU3RhYmlsaXR5X3Rlc3RSZXN1bHQiOiAiUmVkIiwgImhlYXRNYXBfUGVyZm9ybWFuY2VfTW9uaXRvcl90ZXN0UmVzdWx0IjogIlllbGxvdyIsICJoZWF0TWFwX0V0aGljYWxfRmFpcm5lc3NfdGVzdFJlc3VsdCI6ICJSZWQiLCAiaGVhdE1hcF9EYXRhX0RyaWZ0X3Rlc3RSZXN1bHQiOiAiR3JlZW4iLCAiaGVhdE1hcF9PdXRwdXRfSW50ZWdyaXR5X3Rlc3RSZXN1bHQiOiAiUmVkIiwgImhlYXRNYXBfQ29uY2VwdF9EcmlmdF90ZXN0UmVzdWx0IjogIkdyZWVuIiwgImV4ZWN1dGlvbkVycm9ycyI6IFsiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgUk9JIG1vbml0b3I6ICdFcnJvciB3aGlsZSBleHRyYWN0aW5nIHJlcXVpcmVkIG1vZGVsX21ldGFkYXRhLm1vbml0b3JpbmcucGVyZm9ybWFuY2UucG9zaXRpdmVfY2xhc3NfbGFiZWwgZnJvbSBtb2RlbF9tZXRhZGF0YSBOb25lIGZpZWxkcyBmb3VuZCBtYXJrZWQgYXMgYHBvc2l0aXZlQ2xhc3NMYWJlbGAgJyJdfQo="
  } ],
  "model" : {
    "id" : "f8386ca9-e328-4ace-b722-d5ba6e5b62ad",
    "group" : "modelop",
    "version" : 16,
    "createdDate" : "2022-03-31T05:57:42.879Z",
    "lastModifiedDate" : "2022-03-31T05:59:29.608Z",
    "createdBy" : "SYSTEM",
    "lastModifiedBy" : "SYSTEM",
    "storedModel" : {
      "id" : "73da91e4-d3ab-43e6-a524-082e975cc701",
      "group" : "modelop",
      "version" : 1,
      "createdDate" : "2022-03-31T05:57:08.935Z",
      "lastModifiedDate" : "2022-03-31T05:57:09.015Z",
      "createdBy" : "SYSTEM",
      "lastModifiedBy" : "SYSTEM",
      "modelMetaData" : {
        "custom" : {
          "modelopPackageVersion" : "0.13.0"
        },
        "tags" : [ ],
        "name" : "Default Dashboard Model",
        "description" : "Runs default monitors on a base business model generating data for the main MOC Dashboard",
        "type" : "PYTHON",
        "inputSchema" : [ ],
        "outputSchema" : [ ],
        "enableInputSchemaChecking" : false,
        "enableOutputSchemaChecking" : false,
        "attachments" : [ ],
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "modelCategory" : "MODEL_MONITORING_MODEL",
        "defaultAssociationRole" : "METRICS_MODEL",
        "frequentlyUsed" : true
      },
      "modelAssets" : [ {
        "assetId" : "bbef7300-5e34-32db-a42c-e0187b24a6ad",
        "name" : "volumetrics_identifier_comparison_monitor.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "import modelop_sdk.utils.logging as logger\nfrom modelop.ootb_monitors.volumetrics_identifier_comparison import volumetrics_identifier_comparison\nimport dashboard_service as dashboard_service\n\n\ndef calculate_volumetrics_identifier_comparison(baseline, comparator, init_param) -> dict:\n    \"\"\"\n    Source : https://github.com/modelop/moc_monitors/tree/main/src/modelop/ootb_monitors/volumetrics_identifier_comparison\n\n    Evaluation Metrics (Source:https://modelop.atlassian.net/wiki/spaces/~355140182/pages/2286944283/Dashboard+3.0+monitors):\n        identifiers_match\n    ---- Heatmap criteria\n        identifiers_match = true → GREEN\n        identifiers_match = false → RED\n        identifiers_match is NULL or Monitor error → GRAY\n    \"\"\"\n    LOG = logger.configure_logger()\n\n    dashboard_service.assert_df_not_none_and_not_empty(baseline, \"Required baseline\")\n    dashboard_service.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    volumetrics_identifier_comparison.init(init_param)\n\n    monitor_results = volumetrics_identifier_comparison.metrics(baseline, comparator)\n    for result in monitor_results:\n        vol_id_comp_results = result\n    LOG.debug(vol_id_comp_results)\n    return vol_id_comp_results\n",
        "sourceCodeFilePath" : "volumetrics_identifier_comparison_monitor.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "ac7ebd2b-8864-30b3-b982-fc44d9768324",
        "name" : "dashboard_model.dmn",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "TEST_RESULT_COMPARATOR",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" xmlns:biodi=\"http://bpmn.io/schema/dmn/biodi/2.0\" xmlns:camunda=\"http://camunda.org/schema/1.0/dmn\" id=\"Definitions_0bxelj4\" name=\"DRD\" namespace=\"http://camunda.org/schema/1.0/dmn\" exporter=\"Camunda Modeler\" exporterVersion=\"4.11.0\">\n  <decision id=\"Decision_02utv17\" name=\"dashboard_model_demo\">\n    <decisionTable id=\"DecisionTable_0yjalvc\" hitPolicy=\"COLLECT\">\n      <input id=\"Input_1\" label=\"characteristic_stability_max_stability_index\" biodi:width=\"340\" camunda:inputVariable=\"characteristic_stability_max_stability_index\">\n        <inputExpression id=\"InputExpression_1\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1u41e4h\" label=\"characteristic_stability_max_stability_index\" camunda:inputVariable=\"characteristic_stability_max_stability_index\">\n        <inputExpression id=\"LiteralExpression_12yce8l\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1q3su5i\" label=\"statistical_performance_auc\" camunda:inputVariable=\"statistical_performance_auc\">\n        <inputExpression id=\"LiteralExpression_10l3nt5\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1pxpd07\" label=\"statistical_performance_auc\" camunda:inputVariable=\"statistical_performance_auc\">\n        <inputExpression id=\"LiteralExpression_1j8u4wm\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_0wpn5rv\" label=\"ethical_fairness_max_ppr_disparity\" biodi:width=\"368\" camunda:inputVariable=\"ethical_fairness_max_ppr_disparity\">\n        <inputExpression id=\"LiteralExpression_0pb81pe\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_1dacs67\" label=\"ethical_fairness_min_ppr_disparity\" biodi:width=\"389\" camunda:inputVariable=\"ethical_fairness_min_ppr_disparity\">\n        <inputExpression id=\"LiteralExpression_0z9ot5d\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_0iv8e1h\" label=\"data_drift_max_p_value\" camunda:inputVariable=\"data_drift_max_p_value\">\n        <inputExpression id=\"LiteralExpression_1dslyhs\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_14xegnu\" label=\"data_drift_max_p_value\" camunda:inputVariable=\"data_drift_max_p_value\">\n        <inputExpression id=\"LiteralExpression_1gjlz1t\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_11tzzxu\" label=\"identifiers_match\" camunda:inputVariable=\"identifiers_match\">\n        <inputExpression id=\"LiteralExpression_1jq2897\" typeRef=\"boolean\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_199qxyr\" label=\"concept_drift_max_p_value\" camunda:inputVariable=\"concept_drift_max_p_value\">\n        <inputExpression id=\"LiteralExpression_0lzy7lw\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_0drgidx\" label=\"concept_drift_max_p_value\" camunda:inputVariable=\"concept_drift_max_p_value\">\n        <inputExpression id=\"LiteralExpression_152ytu5\" typeRef=\"double\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id=\"Output_1\" label=\"monitor_name\" name=\"monitor_name\" typeRef=\"string\" />\n      <output id=\"OutputClause_0vfqo80\" label=\"color\" name=\"color\" typeRef=\"string\">\n        <outputValues id=\"UnaryTests_1yx2fn3\">\n          <text>\"Gray\",\"Green\",\"Yellow\",\"Red\"</text>\n        </outputValues>\n      </output>\n      <rule id=\"DecisionRule_11vsejr\">\n        <inputEntry id=\"UnaryTests_0qcg9a0\">\n          <text>&lt; 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0nrjnfj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1dxwrxk\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_10mxusk\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0y2ly43\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1uzlwlb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0tiyjdn\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0gcdodd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0puf0wl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0uwpron\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1vq3teu\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_08ugghi\">\n          <text>\"Characteristic Stabilityr\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1nu3d11\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1jkyop0\">\n        <inputEntry id=\"UnaryTests_1jvrf16\">\n          <text>&gt;= 0.2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0h4pw8u\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_00znlsw\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0cgcg9m\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0hhs6b1\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1fixvqf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1smddv9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_09a3ujf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0wae1qu\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_024h460\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0et6a05\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0ykjcej\">\n          <text>\"Characteristic Stability\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1tz97js\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0xw926m\">\n        <inputEntry id=\"UnaryTests_1swjqhz\">\n          <text>&gt; 0.1</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_05jzki1\">\n          <text>&lt; 0.2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_07pmxoe\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0buupt1\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1gftcxe\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0h17xki\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_14d7x05\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0fprkg4\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1q1nj1l\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1e3kf5r\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_06xt3mu\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1utcpgl\">\n          <text>\"Characteristic Stability\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1uhnl0t\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0y8t1sz\">\n        <inputEntry id=\"UnaryTests_1xi59wc\">\n          <text>&gt;= 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1w3633g\">\n          <text>&lt;= 0.1</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0d9pboj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ydcj7u\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1vho0ph\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0yc82cx\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_07u8pae\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1qcrh7u\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1a7nd66\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1yztfoj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1avw3tg\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1ygoxfj\">\n          <text>\"Characteristic Stability\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0cjk2rn\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0wynp12\">\n        <inputEntry id=\"UnaryTests_1rqrt09\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0yktvh9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0tzmewz\">\n          <text>&lt; 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_11pctge\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1lg4x7e\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1n20xf2\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_17tfarm\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_052ym99\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1xjjds2\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1uzlkkl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_015c1s1\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0o8tbuh\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0s6i2gl\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_10vrxl6\">\n        <inputEntry id=\"UnaryTests_04px0ey\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1lpm2ol\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0nvbvoa\">\n          <text>&lt;= 0.6</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ibi0nl\">\n          <text>&gt;= 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1jds0kz\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1r1n49e\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_13ralmm\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_054p77g\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0kza6ic\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0oy17o2\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0hsqkrt\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1xecrzk\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0vx1a5p\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0um6qv0\">\n        <inputEntry id=\"UnaryTests_1ghxgeb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0sl5n2m\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_18tqy6y\">\n          <text>&lt; 0.7</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_06sanax\">\n          <text>&gt; 0.6</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ej5eag\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0b5iro4\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1m2qigq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0hv5dob\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0fraxf0\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0yl3s19\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1dyfij7\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_14ajjy0\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_068x0k7\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_19xn0zs\">\n        <inputEntry id=\"UnaryTests_0280vv3\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0pqlwmo\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_013qhqz\">\n          <text>&gt;= 0.7</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_01zc5nj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_18bdcwj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0xr8qrb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1s9qsve\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_05zqv1i\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0tuc7wj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1v9y403\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_07a3cep\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_03uqir3\">\n          <text>\"Performance Monitor\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0bdsds2\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0ehyz8b\">\n        <inputEntry id=\"UnaryTests_0nbpa63\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0d2bprd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ucle33\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0705tz9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1mmnp1q\">\n          <text>&gt; 1.2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0l5m63b\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0z5ged6\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0aqkyy4\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_16ellvl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_08jeo62\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_02b0g76\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1cklqvk\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_152opby\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1f15dp8\">\n        <inputEntry id=\"UnaryTests_05e8ts3\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_02aodq9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ipxx3e\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_063nmp1\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1dehbnh\">\n          <text>&gt;= 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0m3mleq\">\n          <text>&lt; 0.8</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0mb3vtg\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1pr9oys\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1fpmkiz\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0dj5ydu\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1aijysf\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0mcd0gz\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0zmbjwd\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0th0gsq\">\n        <inputEntry id=\"UnaryTests_1848wbr\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_07j0wjk\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_18c6xi6\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1x8czpn\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1htzgp1\">\n          <text>&lt;= 1.2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_099o08o\">\n          <text>&gt;= 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0k3fb74\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0eaih4w\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1n6533o\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1oxgy0s\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ub9f5x\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1w9pem5\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0b137v2\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0bkkqqg\">\n        <inputEntry id=\"UnaryTests_1c48kxo\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ztcuyb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_12waidt\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_10n3yis\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1qzowau\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1yax6wc\">\n          <text>&gt;= 0.8</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ic2s52\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0nm3055\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1nxhmpu\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1fnwh8i\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_19ol1ph\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_187nwu4\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_18y8vbs\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1gbboyq\">\n        <inputEntry id=\"UnaryTests_0k25jlx\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0gge3nf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0qftdep\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_02lnai3\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0k7t36n\">\n          <text>-1</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_028d40j\">\n          <text>-1</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ff6mew\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_02zj0ok\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0087zop\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_14zcmw4\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0nn7osd\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_02f19u4\">\n          <text>\"Ethical Fairness\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1flj3mt\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0kvafgc\">\n        <inputEntry id=\"UnaryTests_0g6zrwi\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1baa8ox\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_15lhlsf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1adgjta\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_19kpu0z\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_09antdr\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_08cniwr\">\n          <text>&gt;= 2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1w2mmx9\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_005jwin\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1gg92lj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0abmvhm\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0xigkom\">\n          <text>\"Data Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1hyus77\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1c3xwwg\">\n        <inputEntry id=\"UnaryTests_1arbpxg\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_15sikpu\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0rugj67\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1c4h95l\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0fan13p\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1apn2vp\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0qsjymr\">\n          <text>&lt;= 1</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0yauqz9\">\n          <text>&gt;= 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1r1lhlz\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0y4fprk\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0eoc5m0\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0qakz3u\">\n          <text>\"Data Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0od8u5e\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1oie9g2\">\n        <inputEntry id=\"UnaryTests_1x8nn79\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1dmwyzg\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_16pulaj\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1mfc368\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1c9q0nf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ajy1kd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_03hndpv\">\n          <text>&gt; 1</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0fkkbz1\">\n          <text>&lt; 2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0lb4dge\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_065yaq8\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0zv2uc5\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0xmueus\">\n          <text>\"Data Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_19vkc2u\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0vts9ei\">\n        <inputEntry id=\"UnaryTests_1ssg5up\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1pif3jy\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1sfimtl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0b42qah\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0eg2nr1\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1gt0h8o\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0y6jhgl\">\n          <text>&lt; 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0c0w6ak\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_14zlwtf\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0y5c0sb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_011u7fa\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1udukqr\">\n          <text>\"Data Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1d5oqea\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0rtkmje\">\n        <inputEntry id=\"UnaryTests_05k69ke\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1a9gdms\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0wrgwg5\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_13w4j6d\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0bizc6a\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_12wtfeu\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1cp9b7u\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_058k37y\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0z3a6vq\">\n          <text>true</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0xwepev\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0sw4znl\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_179pfhc\">\n          <text>\"Output Integrity\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_0gbvfmx\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1iwwymo\">\n        <inputEntry id=\"UnaryTests_1t5ix3o\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_07apmhs\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0jloxgh\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_11wz7y8\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1yi43je\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0p5vu5f\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1m1arbi\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_16852yl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_03b33oc\">\n          <text>false</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_06pg1zs\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1f82c83\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0gksgd1\">\n          <text>\"Output Integrity\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1uuspou\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_18gsiul\">\n        <inputEntry id=\"UnaryTests_089mj7l\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0tr31lb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1vx1srh\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_009jpwo\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0ya3v6v\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0tplu6p\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1c4w1qs\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1fs6gmb\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_10hgcqn\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0848u6w\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_09wxa5s\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1evzzar\">\n          <text>\"Output Integrity\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1szrs0g\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1yx6glj\">\n        <inputEntry id=\"UnaryTests_1dgr0sm\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_14mp8h0\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_11obcuq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_03fb1xv\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0l6y55t\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_09s5x8k\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1rtas7h\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_184j3o5\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1mficzs\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1ez7amt\">\n          <text>&gt;= 2</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0f3xxpp\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_18aubzc\">\n          <text>\"Concept Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_14054rh\">\n          <text>\"Red\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1qa59v7\">\n        <inputEntry id=\"UnaryTests_0io5u0y\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0btqf2c\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0bxlhtl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0c28a22\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0f6a9wl\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_00ca40z\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1j3li7q\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1qhsmsq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1pkbqqi\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_161rpfj\">\n          <text>&lt;= 1</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1d65iwj\">\n          <text>&gt;= 0</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1jf9wn8\">\n          <text>\"Concept Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_006kuo4\">\n          <text>\"Green\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1fq38f9\">\n        <inputEntry id=\"UnaryTests_1e8p5iq\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0vomnt0\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1f7990k\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1pi5cb2\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1j9ny9k\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_03zq1ra\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_06jlruy\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1nddtli\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_19767qh\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1rnxnbg\">\n          <text>&gt; 1</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1dllcgn\">\n          <text>&lt; 2</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_05ltcgn\">\n          <text>\"Concept Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1n7uu1u\">\n          <text>\"Yellow\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_1fwsumx\">\n        <inputEntry id=\"UnaryTests_1yhcdyn\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1gxagb5\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1lnbxo5\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_11eswbx\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0q1agzs\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0frdgqs\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0l6r9fd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_19u69bi\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0u5td1s\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_0u1k8s8\">\n          <text>&lt; 0</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1a84utd\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0zz3p0p\">\n          <text>\"Concept Drift\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_186pu1t\">\n          <text>\"Gray\"</text>\n        </outputEntry>\n      </rule>\n    </decisionTable>\n  </decision>\n  <dmndi:DMNDI>\n    <dmndi:DMNDiagram>\n      <dmndi:DMNShape dmnElementRef=\"Decision_02utv17\">\n        <dc:Bounds height=\"80\" width=\"180\" x=\"160\" y=\"100\" />\n      </dmndi:DMNShape>\n    </dmndi:DMNDiagram>\n  </dmndi:DMNDI>\n</definitions>\n",
        "sourceCodeFilePath" : "dashboard_model.dmn",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "4bb386d9-492b-3aa6-a047-714b46012a79",
        "name" : "bias_disparity_monitor.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "from modelop.ootb_monitors.bias_disparity import bias_disparity\nimport modelop_sdk.utils.logging as logger\nimport dashboard_service as dashboard_service\n\n\ndef calculate_bias(comparator, init_param) -> dict:\n    \"\"\"\n    Source: https://github.com/modelop/moc_monitors/tree/main/src/modelop/ootb_monitors/bias_disparity\n    Sample Output:\n            {\n              \"test_name\": \"Aequitas Bias\",\n              \"test_category\": \"bias\",\n              \"test_type\": \"bias\",\n              \"protected_class\": \"gender\",\n              \"test_id\": \"bias_bias_gender\",\n              \"reference_group\": \"male\",\n              \"thresholds\": {\n                \"min\": 0.8,\n                \"max\": 1.25\n              },\n              \"values\": [\n                {\n                  \"attribute_name\": \"gender\",\n                  \"attribute_value\": \"female\",\n                  \"ppr_disparity\": 0.5,\n                  \"pprev_disparity\": 0.8889,\n                  \"precision_disparity\": 1.36,\n                  \"fdr_disparity\": 0.7568,\n                  \"for_disparity\": 1.6098,\n                  \"fpr_disparity\": 0.7648,\n                  \"fnr_disparity\": 1.32,\n                  \"tpr_disparity\": 0.8976,\n                  \"tnr_disparity\": 1.15,\n                  \"npv_disparity\": 0.9159\n                },\n                {\n                  \"attribute_name\": \"gender\",\n                  \"attribute_value\": \"male\",\n                  \"ppr_disparity\": 1,\n                  \"pprev_disparity\": 1,\n                  \"precision_disparity\": 1,\n                  \"fdr_disparity\": 1,\n                  \"for_disparity\": 1,\n                  \"fpr_disparity\": 1,\n                  \"fnr_disparity\": 1,\n                  \"tpr_disparity\": 1,\n                  \"tnr_disparity\": 1,\n                  \"npv_disparity\": 1\n                }\n              ]\n            }\n    ---\n    Evaluation Metrics (Source:https://modelop.atlassian.net/wiki/spaces/~355140182/pages/2286944283/Dashboard+3.0+monitors):\n        max(ppr_disparity) and min(ppr_disparity) across all protected classes\n    ---- Heatmap criteria\n        max(ppr_disparity)>1.2 or min(ppr_disparity) <0.8  → RED\n        max(ppr_disparity)<1.2 or min(ppr_disparity) >0.8  → GREEN\n    \"\"\"\n    LOG = logger.configure_logger()\n\n    dashboard_service.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n    # monitor execution\n    bias_disparity.init(init_param)\n    monitor_results = bias_disparity.metrics(comparator)\n\n    for result in monitor_results:\n        bias_disparity_metrics = result\n\n    try:\n        bias_disparity_statistical_parity_values = dashboard_service.get_dict_root_entries_with_suffix(\n            bias_disparity_metrics, \"_statistical_parity\")\n    except Exception as ex:\n        raise ValueError(f\"Error while extracting '_statistical_parity' : {str(ex)} \")\n\n    statistical_parity_array = dashboard_service.dict_values_to_numeric_array(bias_disparity_statistical_parity_values)\n\n    if len(statistical_parity_array) == 0:\n        raise ValueError(\n            f\" No numerics _statistical_parity values found at bias_disparity_metrics\")\n\n    ethical_fairness_max_ppr_disparity_result = {\"ethical_fairness_max_ppr_disparity\": max(statistical_parity_array),\n                                                 \"ethical_fairness_min_ppr_disparity\": min(statistical_parity_array)}\n    LOG.info(f\" ethical_fairness_max_ppr_disparity_result {str(ethical_fairness_max_ppr_disparity_result)}\")\n    bias_disparity_metrics.update(ethical_fairness_max_ppr_disparity_result)\n\n    LOG.debug(f\"bias_disparity {bias_disparity_metrics}\")\n\n    return bias_disparity_metrics\n",
        "sourceCodeFilePath" : "bias_disparity_monitor.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "346d5453-50ba-348e-828d-0afba94c1fb3",
        "name" : "performance_monitor.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "from modelop.ootb_monitors.performance_classification import performance_classification\nimport dashboard_service as dashboard_service\n\n\ndef calculate_performance(comparator, init_param) -> dict:\n    \"\"\"\n    Source - https://github.com/modelop/moc_monitors/tree/main/src/modelop/ootb_monitors/performance_classification\n    Monitor result\n    {\n      \"test_name\": \"Classification Metrics\",\n      \"test_category\": \"performance\",\n      \"test_type\": \"classification_metrics\",\n      \"test_id\": \"performance_classification_metrics\",\n      \"values\": {\n        \"accuracy\": 0.665,\n        \"precision\": 0.4516,\n        \"recall\": 0.7241,\n        \"f1_score\": 0.5563,\n        \"auc\": 0.6825,  <--- value used for evaluation\n        \"confusion_matrix\": [\n          {\n            \"0\": 0.455,\n            \"1\": 0.255\n          },\n          {\n            \"0\": 0.08,\n            \"1\": 0.21\n          }\n        ]\n      }\n    }\n\n    Evaluation Metrics (Source:https://modelop.atlassian.net/wiki/spaces/~355140182/pages/2286944283/Dashboard+3.0+monitors):\n        <auc>\n    ---- Heatmap criteria\n        <auc> > 0.7 → GREEN\n        0.6 < <auc> < 0.7 → YELLOW\n        <auc> < 0.6 → RED\n        <auc> IS NULL or test fails → GRAY\n    \"\"\"\n\n    dashboard_service.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n    performance_classification.init(init_param)\n    monitor_results = performance_classification.metrics(comparator)\n\n    for result in monitor_results:\n        performance_results = result\n\n    # Generating one output for evaluation\n    raw_values_for_evaluation = {\"statistical_performance_auc\": performance_results[\"auc\"]}\n    performance_results.update(raw_values_for_evaluation)\n    return raw_values_for_evaluation\n",
        "sourceCodeFilePath" : "performance_monitor.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "0bd3078f-28c4-38ec-ba50-e8b548af89ef",
        "name" : "data_drift_monitor.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "import modelop_sdk.utils.logging as logger\nfrom modelop.ootb_monitors.data_drift_kolmogorov_smirnov import data_drift_kolmogorov_smirnov\nimport dashboard_service as dashboard_service\n\n\ndef calculate_data_drift(baseline, comparator, init_param) -> dict:\n    \"\"\"\n    Source: https://github.com/modelop/moc_monitors/tree/main/src/modelop/ootb_monitors/data_drift_kolmogorov_smirnov\n\n    Evaluation Metrics Source:https://modelop.atlassian.net/wiki/spaces/~355140182/pages/2286944283/Dashboard+3.0+monitors:\n        max( <feature_1>: <p-value>,...:...,<feature_n>: <p-value>)\n        i.e. the max of all the p-values across all the features\n    ---- Heatmap criteria\n        max(p-value) > 2 → RED\n        1 < max(p-value) < 2 → YELLOW\n        max(p-value) < 1 → GREEN\n        max(p-value) IS NULL or test fails → GRAY\n    \"\"\"\n    LOG = logger.configure_logger()\n\n    dashboard_service.assert_df_not_none_and_not_empty(baseline, \"Required baseline\")\n    dashboard_service.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    data_drift_kolmogorov_smirnov.init(init_param)\n    monitor_results = data_drift_kolmogorov_smirnov.metrics(baseline, comparator)\n\n    for result in monitor_results:\n        drift_metrics = result\n\n    LOG.debug(f\"drift_metrics {drift_metrics}\")\n\n    try:\n        data_drift_values = dashboard_service.get_dict_root_entries_with_suffix(drift_metrics, \"_pvalue\")\n    except Exception as ex:\n        raise ValueError(f\"Error while extracting Data Drift KS '_pvalue' : {str(ex)} \")\n\n    p_value_array = dashboard_service.dict_values_to_numeric_array(data_drift_values)\n\n    if len(p_value_array) == 0:\n        raise ValueError(\n            f\" No numerics values found at the 'values' data drift generated results field {str(drift_metrics)} \")\n\n    data_drift_kr_result = {\"data_drift_max_p_value\": max(p_value_array)}\n    LOG.info(f\" data_drift_ks_result {str(data_drift_kr_result)}\")\n    drift_metrics.update(data_drift_kr_result)\n    return drift_metrics\n",
        "sourceCodeFilePath" : "data_drift_monitor.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "3f711ed2-1ccf-3d25-b241-1483caf930f7",
        "name" : "main_dashboard_model.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : true,
        "sourceCode" : "from datetime import datetime\nimport pandas as pd\nimport modelop_sdk.utils.logging as logger\nimport modelop.schema.infer as infer\nimport actual_roi_monitor as actual_roi_monitor\nimport volumetrics_count_monitor as daily_inferences_monitor\nimport data_drift_monitor as data_drift_monitor\nimport volumetrics_identifier_comparison_monitor as output_integrity_monitor\nimport concept_drift_monitor as concept_drift_monitor\nimport performance_monitor as statistical_performance_monitor\nimport stability_monitor as characteristic_stability_monitor\nimport bias_disparity_monitor as ethical_fairness_monitor\nimport dashboard_service as dashboard_service\nfrom modelop_sdk.utils import dict_utils\n\nimport json\n\nLOG = logger.configure_logger()\n\nINPUT_JSON = {}\nINIT_PARAM = {}\nMODEL_CUSTOM_METADATA = {}\nDEPLOYABLE_MODEL = {}\n\n\n# modelop.init\ndef init(init_param):\n    global INIT_PARAM\n    global INPUT_SCHEMA\n    global MODEL_CUSTOM_METADATA\n    global DEPLOYABLE_MODEL\n\n    job = json.loads(init_param[\"rawJson\"])\n    DEPLOYABLE_MODEL = job.get('referenceModel')\n    INIT_PARAM = init_param\n    try:\n        INPUT_SCHEMA = infer.extract_input_schema(INIT_PARAM)\n    except Exception as ex:\n        LOG.error(f\"Error while extracting input_schema - {str(ex)}\")\n        INPUT_SCHEMA = None\n\n    # Extract custom metadata\n    try:\n        MODEL_CUSTOM_METADATA = job[\"referenceModel\"][\"storedModel\"][\"modelMetaData\"][\"custom\"]\n    except Exception as e:\n        LOG.warning(f\"Required custom metadata value not present: {str(e)}\")\n\n    LOG.debug(f\"init function input: {str(INIT_PARAM)}\")\n\n\n# modelop.metrics\ndef metrics(baseline, comparator) -> dict:\n    LOG.info(\"Building monitors\")\n    monitor_results = {}\n    heat_map = {}\n    flat_heatmap = {}\n    execution_errors_array = []\n    LOG.info(\"Executing monitors\")\n\n    try:\n        # ROI Monitor\n        ## Sending a copy because the current actual_roi implementation is modifying the comparatator df\n        comparator_copy = comparator.copy()\n        monitor_results['actualROIAllTime'] = actual_roi_monitor.calculate_roi(comparator_copy, DEPLOYABLE_MODEL,\n                                                                               INPUT_SCHEMA)\n    except Exception as rmE:\n        error_message = f\"Something went wrong with the ROI monitor: {str(rmE)}\"\n        LOG.error(error_message)\n        monitor_results[\"actualROIAllTime\"] = \"N/A\"\n        execution_errors_array.append(error_message)\n\n    try:\n        # Daily inferences Monitor\n        monitor_results[\"allVolumetricMonitorRecordCount\"] = daily_inferences_monitor.calculate_daily_inferences(\n            comparator)\n    except Exception as volE:\n        error_message = f\"Something went wrong with the Volumetrics count monitor: {str(volE)}\"\n        LOG.error(error_message)\n        monitor_results[\"allVolumetricMonitorRecordCount\"] = \"N/A\"\n        execution_errors_array.append(error_message)\n\n    try:\n        # Data Drift Monitor\n        LOG.info(\"Executing Data Drift KS monitor\")\n        monitor_results.update(data_drift_monitor.calculate_data_drift(baseline, comparator, INIT_PARAM))\n        LOG.info(\"Data Drift KS monitor successfully executed\")\n    except Exception as ex:\n        error_message = f\"Something went wrong with Data Drift KS monitor: {str(ex)}\"\n        LOG.error(error_message)\n        monitor_results[\"data_drift_max_p_value\"] = -1\n        execution_errors_array.append(error_message)\n\n    try:\n        # Output Integrity Monitor\n        monitor_results.update(\n            output_integrity_monitor.calculate_volumetrics_identifier_comparison(baseline, comparator, INIT_PARAM))\n    except Exception as ex:\n        error_message = f\"Something went wrong with Output Integrity monitor: {str(ex)}\"\n        LOG.error(error_message)\n        monitor_results[\"identifiers_match\"] = \"\"\n        execution_errors_array.append(error_message)\n\n    try:\n        # Concept Dirft Monitor\n        monitor_results.update(\n            concept_drift_monitor.calculate_concept_drift(baseline, comparator, INIT_PARAM))\n    except Exception as ex:\n        error_message = f\"Something went wrong with Concept Drift monitor: {str(ex)}\"\n        LOG.error(error_message)\n        monitor_results[\"concept_drift_max_p_value\"] = -1\n        execution_errors_array.append(error_message)\n\n    try:\n        # Statistical Performance Monitor\n        monitor_results.update(\n            statistical_performance_monitor.calculate_performance(comparator, INIT_PARAM))\n    except Exception as ex:\n        error_message = f\"Something went wrong with Statistical Performance monitor: {str(ex)}\"\n        LOG.error(error_message)\n        monitor_results[\"statistical_performance_auc\"] = -1\n        execution_errors_array.append(error_message)\n\n    try:\n        # Characteristic Stability Monitor\n        monitor_results.update(\n            characteristic_stability_monitor.calculate_stability(baseline, comparator, INIT_PARAM)\n        )\n    except Exception as ex:\n        error_message = f\"Something went wrong with Characteristic Stability monitor: {str(ex)}\"\n        LOG.error(error_message)\n        monitor_results[\"characteristic_stability_max_stability_index\"] = -1\n        execution_errors_array.append(error_message)\n\n    try:\n        # Ethical Fairness Monitor\n        monitor_results.update(\n            ethical_fairness_monitor.calculate_bias(comparator, INIT_PARAM)\n        )\n    except Exception as ex:\n        error_message = f\"Something went wrong with Ethical Fairness monitor: {str(ex)}\"\n        LOG.error(error_message)\n        monitor_results[\"ethical_fairness_max_ppr_disparity\"] = -1\n        monitor_results[\"ethical_fairness_min_ppr_disparity\"] = -1\n        execution_errors_array.append(error_message)\n\n    try:\n        ### Adding additional fields - modelUseCategory + modelOrganization + modelRisk\n        modelop_fields = dashboard_service.get_default_modelop_fields_from_deployable_model(DEPLOYABLE_MODEL)\n        monitor_results.update(modelop_fields)\n    except Exception as ex:\n        error_message = f\"Something went wrong when adding additional fields: {str(ex)}\"\n        LOG.error(error_message)\n        execution_errors_array.append(error_message)\n\n    try:\n        LOG.info(\"Performing DMN evaluation\")\n        evaluated_results = dashboard_service.evaluate_results(monitor_results, \"dashboard_model.dmn\")\n\n        LOG.info(\"Generating heatMap\")\n        heat_map = dashboard_service.generate_heatmap(evaluated_results, include_summary=True)\n        flat_heatmap = dict_utils.flatten_data(heat_map)\n        LOG.info(\"Generating MTR\")\n    except Exception as eval_ex:\n        LOG.error(str(eval_ex))\n        execution_errors_array.append(\n            \"Something went wrong during DMN evaluation or heatmap generation, please check logs\")\n\n    dashboard_result = {\n        \"createdDate\": datetime.now().strftime('%m/%d/%Y %H:%M:%S')\n    }\n    dashboard_result.update(monitor_results)\n    dashboard_result.update(heat_map)\n    dashboard_result.update(flat_heatmap)\n\n    if len(execution_errors_array) > 0:\n        dashboard_result.update({\"executionErrors\": execution_errors_array})\n    else:\n        dashboard_result.update({\"executionErrors\": None})\n\n    yield dashboard_result\n",
        "sourceCodeFilePath" : "main_dashboard_model.py",
        "sourceCodeType" : "MODEL",
        "initFunction" : "init",
        "metricsFunction" : "metrics"
      }, {
        "assetId" : "1ece106c-ffa3-3dd5-b550-4cb610b53f2a",
        "name" : "dashboard_service.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "import modelop_sdk.dashboard.dashboard_monitor_service as dashboard_monitor_service\nimport modelop_sdk.utils.logging as logger\nfrom modelop_sdk.utils import dict_utils\nimport json\nimport numpy\nimport pandas\n\nLOG = logger.configure_logger()\n\n\ndef get_default_modelop_fields_from_deployable_model(deployable_model: dict = None) -> dict:\n    \"\"\"\n        Method that extracts the default modelop fields from the deployable_model dict.\n            Current default modelop fields:\n                -modelUseCategory\n                -modelOrganization\n                -modelRisk\n    \"\"\"\n    if deployable_model is None:\n        raise ValueError(\"deployable_model can't be None\")\n\n    if not isinstance(deployable_model, dict):\n        raise ValueError(f\"deployable_model is not a dict , instead is {str(deployable_model)} \")\n\n    modelop_fields = {}\n    modelop_fields.update({'modelUseCategory':\n                               deployable_model.get('storedModel', {}).get('modelMetaData', {})\n                          .get('modelUseCategory', '')})\n\n    modelop_fields.update({'modelOrganization': deployable_model.get('storedModel', {}).get('modelMetaData', {})\n                          .get('modelOrganization', '')})\n\n    modelop_fields.update({'modelRisk': deployable_model.get('storedModel', {}).get('modelMetaData', {})\n                          .get('modelRisk', '')})\n\n    return modelop_fields\n\n\ndef dict_values_to_numeric_array(input_dict: dict = None) -> []:\n    \"\"\"\n    Method that generates an array of the numeric values extracted from the input dict\n        input:\n            input_dict: dict\n        output:\n            [] : with the numeric values of the dict\n        usage:\n            sample_input = {\n                    \"foo\":1,\n                    \"bar\":0.5,\n                    \"foo_bar\":\"not_a_number\"\n                }\n\n            output = [1,0.5]\n    \"\"\"\n    if input_dict is None:\n        raise ValueError(\"input_dict can't be None\")\n\n    if not isinstance(input_dict, dict):\n        raise ValueError(f\"input_dict is not an instance of dict, instead {type(input_dict)}\")\n    numeric_array = []\n    for key, value in input_dict.items():\n        if isinstance(value, (int, float, complex)):\n            numeric_array.append(value)\n\n    return numeric_array\n\n\ndef get_dict_root_entries_with_suffix(input_dict: dict, ends_with_suffix: str) -> dict:\n    \"\"\"\n    Method that iterates through a dict and extract dict entries with numeric values ending with a predefined suffix\n        inputs:\n            input_dict : dict to be evaluated\n            ends_with_suffix: suffix used to be matched\n        Usage example:\n\n            input:\n            test_dict ={\n                        \"entry_1_bar\":1,\n                        \"entry_2_bar\":\"not_number\",\n                        \"3_entry_bar\": { \"test\":\"bar_second_level\" },\n                        \"4_entry_bar\":2.0,\n                        \"entry_5_bar\":0.9,\n                        \"6_entry_bar\":-500,\n                        \"7_entry_foo\":1000,\n                        \"8_entry_foo\":\"not_number\",\n                        \"9_entry_bar_foo\":20\n                    }\n\n            Method call:\n            output = get_dict_root_entries_with_suffix(test_dict,\"_bar\")\n\n            output:\n            {\n                 \"entry_1_bar\":1,\n                 \"4_entry_bar\":2.0,\n                \"entry_5_bar\":0.9,\n                \"6_entry_bar\":-500\n            }\n    \"\"\"\n\n    if input_dict is None:\n        raise ValueError(\"input_dict cant be None\")\n\n    if ends_with_suffix is None or len(ends_with_suffix.strip()) == 0:\n        raise ValueError(\"ends_with_suffix input can't be None nor empty\")\n\n    matched_dict_entries = {}\n    try:\n        for key, value in input_dict.items():\n            if key.endswith(ends_with_suffix):\n                try:\n                    # if this addition did not fail, then we can be sure we are dealing with a number\n                    numberTest = value + 0\n                    matched_dict_entries.update({key: value})\n                except:\n                    try:\n                        LOG.warning(\n                            f\"Entry ending with {ends_with_suffix} found without a numerical value {str(value)}\")\n                    except:\n                        pass\n\n        if len(matched_dict_entries) == 0:\n            raise LookupError(f\"No {ends_with_suffix} values were found inside the input_dict \")\n\n        return matched_dict_entries\n    except Exception as ex:\n        raise ValueError(\n            f\"Something went wrong while looking for numeric entries that end with `{ends_with_suffix}` : {str(ex)}\")\n\n\ndef assert_df_not_none_and_not_empty(dataframe, error_message_prefix: str = None):\n    \"\"\"\n    Method that validates whether the input dataframe is not None and not empty, otherwise will raiseValue exception\n        input:\n            dataframe: dataframe to be evaluated\n            error_message_prefix: (optional) text prefix to be added at the beginning of the error message\n    \"\"\"\n    if error_message_prefix is not None and not isinstance(error_message_prefix, str):\n        raise ValueError(\"error_message_prefix must be str\")\n\n    if error_message_prefix is None:\n        error_message_prefix = \"Input dataframe\"\n\n    if not isinstance(dataframe, pandas.core.frame.DataFrame):\n        raise ValueError(f\"{error_message_prefix} is not instance of pandas.core.frame.DataFrame\")\n\n    if dataframe is None:\n        raise ValueError(f\"{error_message_prefix} can't be none\")\n\n    if dataframe.empty:\n        raise ValueError(f\"{error_message_prefix} can't be empty\")\n\n\ndef evaluate_results(monitor_results: dict = None, dmn_filename: str = None) -> dict:\n    \"\"\"\n    Method that performs the dashboard_evaluation\n    \"\"\"\n    ## removing any sort of numpy enconding/decoding issues\n    monitor_results_str = json.dumps(monitor_results, cls=NpEncoder)\n    monitor_results_dict = json.loads(monitor_results_str)\n    # performing evaluation here\n    evaluated_results = dashboard_monitor_service.evaluate_results(monitor_results_dict, dmn_filename)\n    # Generating heatmap\n    if evaluated_results.response.ok:\n        return evaluated_results.json\n    else:\n        try:\n            error_details = f\"Evaluation error: {evaluated_results.response.text} \"\n        except:\n            error_details = \"Error during evaluation\"\n        LOG.error(\n            f\"Error: {error_details}\")\n        raise Exception(error_details)\n\n\nclass NpEncoder(json.JSONEncoder):\n    \"\"\"\n    Numpy encoder for JSON library, required because DMN evaluation was failing when input dictionary contained entries\n    pointing to int64 values, and JSON is not able to encode/decode numpy types yet.\n    \"\"\"\n\n    def default(self, obj):\n        if isinstance(obj, numpy.integer):\n            return int(obj)\n        if isinstance(obj, numpy.floating):\n            return float(obj)\n        if isinstance(obj, numpy.ndarray):\n            return obj.tolist()\n        return super(NpEncoder, self).default(obj)\n\n\ndef generate_heatmap(evaluation_results: [] = None, include_summary: bool = False) -> dict:\n    \"\"\"\n    Function that generates the heatmap from the evaluation results\n    \"\"\"\n\n    heatmap_dict = {}\n    for evaluation_entry in evaluation_results:\n        try:\n            if evaluation_entry.get('monitor_name') is not None:\n                monitor_name_key = evaluation_entry.get('monitor_name')\n                if heatmap_dict.get(monitor_name_key) is None:\n                    heatmap_dict.update({monitor_name_key: {\"testResult\": evaluation_entry.get(\"color\")}})\n                else:\n                    LOG.warning(\n                        f\"Duplicated evaluated DMN entries found for {monitor_name_key}, ignoring entry: {str(evaluation_entry)}, and keeping first found: {str(heatmap_dict.get(monitor_name_key))}\")\n        except Exception as ex:\n            LOG.error(\n                f\"Something went wrong while processing evaluated monitor entry {str(evaluation_entry)} , error: {str(ex)}\")\n\n    if len(heatmap_dict) == 0:\n        LOG.warning(\"No monitors found for heatmap, likely something went wrong with DMN evaluation\")\n\n    heatmap = {}\n    if include_summary and heatmap_dict is not None and heatmap_dict:\n        summary = generate_summary(heatmap_dict)\n        heatmap.update(summary)\n    heatmap.update(heatmap_dict)\n    return {\"heatMap\": heatmap}\n\n\ndef generate_summary(heatmap_dict: dict) -> dict:\n    # Evaluation color\n    default_evaluation_color = \"Gray\"\n    green_evaluation_color = \"Green\"\n    yellow_evaluation_color = \"Yellow\"\n    red_evaluation_color = \"Red\"\n    black_evaluation_color = \"Black\"\n\n    LOG.info(\"Generating summary\")\n    # By default summary color is Green\n    summary_color = green_evaluation_color\n    gray_color_counter = 0\n    green_color_counter = 0\n    yellow_color_counter = 0\n    red_color_counter = 0\n\n    # Generate summary from heatmap, Summary will be placed at the beginning of the heatmap\n    for heatmap_key in heatmap_dict:\n        heatmap_value = heatmap_dict[heatmap_key]\n        if heatmap_value.get(\"testResult\") is not None:\n            test_result_color = heatmap_value.get(\"testResult\")\n\n            if test_result_color == red_evaluation_color:\n                summary_color = red_evaluation_color\n                red_color_counter += 1\n            elif test_result_color == yellow_evaluation_color:\n                yellow_color_counter += 1\n                if summary_color != red_evaluation_color:\n                    summary_color = yellow_evaluation_color\n            elif test_result_color == default_evaluation_color:\n                gray_color_counter += 1\n                # in Gray if not RED then Yellow\n                if summary_color != red_evaluation_color:\n                    summary_color = yellow_evaluation_color\n\n            elif test_result_color == green_evaluation_color:\n                green_color_counter += 1\n\n    if summary_color == green_evaluation_color and green_color_counter == 0:\n        summary_color = default_evaluation_color\n\n    summary = {\"Summary\": {\n        \"testResult\": summary_color,\n        \"description\": \"Monitors summary\",\n        \"monitorResults\": {\n            \"Gray\": gray_color_counter,\n            \"Green\": green_color_counter,\n            \"Yellow\": yellow_color_counter,\n            \"Red\": red_color_counter\n        }\n    }}\n\n    return summary\n",
        "sourceCodeFilePath" : "dashboard_service.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "f294f9b6-6f31-3602-af38-ec878bdc6df1",
        "name" : "test_main_dashboard.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "import unittest\nimport pandas as pd\nimport json\nimport main_dashboard_model as main_dashboard_model\nimport dashboard_service as dashboard_service\n\n\nclass DashboardServiceTests(unittest.TestCase):\n\n    def test_assert_df_not_none_and_not_empty_with_empty_df(self):\n        empty_df = pd.DataFrame()\n\n        try:\n            dashboard_service.assert_df_not_none_and_not_empty(empty_df)\n            self.assertEqual(True, False, \"Test failed not empty df validation\")\n        except Exception as e:\n            self.assertEqual(str(e), \"Input dataframe can't be empty\")\n\n        try:\n            dashboard_service.assert_df_not_none_and_not_empty(empty_df, \"Required baseline\")\n            self.assertEqual(True, False, \"Test failed not empty df validation\")\n        except Exception as e:\n            self.assertEqual(str(e), \"Required baseline can't be empty\")\n\n    def test_assert_df_not_none_and_not_empty_with_not_empty_df(self):\n\n        # list of strings\n        lst = ['Geeks', 'For', 'Geeks', 'is',\n               'portal', 'for', 'Geeks']\n\n        not_empty_df = pd.DataFrame(lst)\n        print(type(not_empty_df))\n        try:\n            dashboard_service.assert_df_not_none_and_not_empty(not_empty_df)\n            self.assertEqual(True, True, \"Test passed input df is not empy nor None\")\n        except Exception as e:\n            self.assertEqual(True, False, \"Test failed input df is not empy nor None, so test should not have failed\")\n\n    def test_assert_df_not_none_and_not_empty_with_list_as_input_instead_of_df(self):\n\n        # list of strings\n        lst = ['Geeks', 'For', 'Geeks', 'is',\n               'portal', 'for', 'Geeks']\n\n        try:\n            dashboard_service.assert_df_not_none_and_not_empty(lst)\n            self.assertEqual(True, False, \"Test failed input it not a df\")\n        except Exception as e:\n            self.assertEqual(str(e), \"Input dataframe is not instance of pandas.core.frame.DataFrame\",\n                             \"Test failed input is not df\")\n\n    def test_get_dict_root_entries_with_suffix_with_entries_with_text_values(self):\n        dict_with_numberic_and_text_values = {\n            \"entry_0_p_value\": 1,\n            \"entry_1_p_value\": 2,\n            \"entry_2_p_value\": 3,\n            \"entry_3_p_value\": -4,\n            \"entry_4_p_value\": 5,\n            \"entry_with_text_p_value\": 'text_value_here',\n            \"entry_with_text_p_value\": {'entry_p_value': 50},\n            \"entry_5_p_value\": 6.0,\n            \"entry_6_p_value\": 0.7\n        }\n\n        root_numerical_entries = dashboard_service.get_dict_root_entries_with_suffix(\n            input_dict=dict_with_numberic_and_text_values,\n            ends_with_suffix=\"_p_value\")\n\n        print(root_numerical_entries)\n        self.assertEqual(len(root_numerical_entries), 7)\n\n    def test_get_dict_root_entries_with_suffix_with_entries_with_text_values(self):\n        dict_with_numberic_and_text_values = {\n            \"entry_0_p_value\": 1,\n            \"entry_1_p_value\": 2,\n            \"entry_2_p_value\": 3,\n            \"entry_3_p_value\": -4,\n            \"entry_4_p_value\": 5,\n            \"entry_with_text_p_value\": 'text_value_here',\n            \"entry_with_text_p_value\": {'entry_p_value': 50},\n            \"entry_5_p_value\": 6.0,\n            \"entry_6_p_value\": 0.7\n        }\n\n        root_numerical_entries = dashboard_service.get_dict_root_entries_with_suffix(\n            input_dict=dict_with_numberic_and_text_values,\n            ends_with_suffix=\"_p_value\")\n\n        self.assertEqual(len(root_numerical_entries), 7)\n\n    def test_get_dict_root_entries_with_suffix_with_empty_none_dict_and_empty_none_suffix(self):\n        dict_with_numberic_and_text_values = {\n        }\n\n        try:\n            dashboard_service.get_dict_root_entries_with_suffix(\n                input_dict=dict_with_numberic_and_text_values,\n                ends_with_suffix=\"_p_value\")\n            self.assertEqual(True, False, \"Test failed, method should have thrown an exception at this point, because\"\n                                          \"input dict is empty so no records were produced\")\n        except Exception as e:\n            self.assertEqual(True, True, \"Test passed, expected failure when sending empty dict\")\n\n    def test_main_additiona_extended_schema_fields_test(self):\n        baseline_scored = pd.read_json('./sampleData/df_baseline_scored.json', lines=True)\n        comparator_scored = pd.read_json('./sampleData/df_sample_scored.json', lines=True)\n\n        # Updated job, because input schema was all in UPPER CAPS\n        jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json', 'r').read()\n        # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json', 'r').read()\n        # jobAsString = open('sampleData/jsonJobGermanCredit_withInputSchema_error.json', 'r').read()\n        json_job_dict = {\"rawJson\": jobAsString}\n\n        main_dashboard_model.init(json_job_dict)\n        metrics_result = main_dashboard_model.metrics(baseline_scored, comparator_scored)\n        # metrics_result = metrics(baseline=None, comparator=None)\n        for result in metrics_result:\n            try:\n                jsonObj = json.loads(str(result).replace(\"'\", \"\\\"\").replace(\"False\", \"false\").replace(\"True\", \"true\"))\n                print(json.dumps(jsonObj, indent=2))\n            except Exception as ex:\n                print(str(ex))\n                print(str(result).replace(\"'\", \"\\\"\"))\n\n    def test_main_test(self):\n        baseline_scored = pd.read_json('./sampleData/df_baseline_scored.json', lines=True)\n        comparator_scored = pd.read_json('./sampleData/df_sample_scored.json', lines=True)\n\n        # Updated job, because input schema was all in UPPER CAPS\n        # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_updated.json', 'r').read()\n        jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json', 'r').read()\n        # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json', 'r').read()\n        # jobAsString = open('sampleData/jsonJobGermanCredit_withInputSchema_error.json', 'r').read()\n        json_job_dict = {\"rawJson\": jobAsString}\n\n        main_dashboard_model.init(json_job_dict)\n        metrics_result = main_dashboard_model.metrics(baseline_scored, comparator_scored)\n        # metrics_result = metrics(baseline=None, comparator=None)\n        for result in metrics_result:\n            try:\n                jsonObj = json.loads(\n                    str(result).replace(\"'\", \"\\\"\").replace(\"False\", \"false\").replace(\"True\", \"true\").replace(\"None\",\n                                                                                                             \"null\"))\n                print(json.dumps(jsonObj, indent=2))\n            except Exception as ex:\n                print(str(ex))\n                print(str(result).replace(\"'\", \"\\\"\"))\n    #\n    # def test_no_input_schema(self):\n    #     baseline_scored = pd.read_json('./sampleData/df_baseline_scored.json', lines=True)\n    #     comparator_scored = pd.read_json('./sampleData/df_sample_scored.json', lines=True)\n    #\n    #     # Updated job, because input schema was all in UPPER CAPS\n    #     jobAsString = open('./sampleData/jsonJobGermanCredit_without_input_schema_error.json', 'r').read()\n    #     # jobAsString = open('./sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json', 'r').read()\n    #     # jobAsString = open('sampleData/jsonJobGermanCredit_withInputSchema_error.json', 'r').read()\n    #     json_job_dict = {\"rawJson\": jobAsString}\n    #\n    #     main_dashboard_model.init(json_job_dict)\n    #     metrics_result = main_dashboard_model.metrics(baseline_scored, comparator_scored)\n    #     # metrics_result = metrics(baseline=None, comparator=None)\n    #     for result in metrics_result:\n    #         try:\n    #             jsonObj = json.loads(str(result).replace(\"'\", \"\\\"\").replace(\"False\", \"false\").replace(\"True\", \"true\"))\n    #             print(json.dumps(jsonObj, indent=2))\n    #         except Exception as ex:\n    #             print(str(ex))\n    #             print(str(result).replace(\"'\", \"\\\"\"))\n\n\n# if __name__ == \"__main__\":\n#     input_schema_example = {\n#         \"name\": \"input_schema.avsc\",\n#         \"type\": \"record\",\n#         \"fields\": [\n#             {\n#                 \"name\": \"id\",\n#                 \"type\": \"int\",\n#                 \"dataClass\": \"numerical\",\n#                 \"role\": \"identifier\",\n#                 \"protectedClass\": False,\n#                 \"driftCandidate\": False,\n#                 \"specialValues\": [],\n#                 \"scoringOptional\": False\n#             },\n#             {\n#                 \"name\": \"credit_amount\",\n#                 \"type\": \"float\",\n#                 \"dataClass\": \"numerical\",\n#                 \"role\": \"predictor\",\n#                 \"protectedClass\": False,\n#                 \"driftCandidate\": True,\n#                 \"specialValues\": [],\n#                 \"scoringOptional\": False,\n#                 \"isAmountField\": True\n#             },\n#             {\n#                 \"name\": \"label_value\",\n#                 \"type\": \"int\",\n#                 \"dataClass\": \"categorical\",\n#                 \"role\": \"label\",\n#                 \"protectedClass\": False,\n#                 \"driftCandidate\": True,\n#                 \"specialValues\": [],\n#                 \"scoringOptional\": True,\n#                 \"positiveClassLabel\": 1\n#             },\n#             {\n#                 \"name\": \"score\",\n#                 \"type\": \"int\",\n#                 \"dataClass\": \"categorical\",\n#                 \"role\": \"label\",\n#                 \"protectedClass\": False,\n#                 \"driftCandidate\": True,\n#                 \"specialValues\": [],\n#                 \"scoringOptional\": True\n#             }\n#         ]\n#     }\n#\n#     input_schema_example_with_error = {\n#         \"name\": \"input_schema.avsc\",\n#         \"type\": \"record\",\n#         \"fields\": {\"foo\": \"bar\"}\n#     }\n#     input_schema_example_without_field = {\n#         \"name\": \"input_schema.avsc\",\n#         \"type\": \"record\"\n#     }\n#     credit_amount = get_credit_amount_field_name(input_schema_example)\n#     print(f\"Credit_amount_found {credit_amount}\")\n#     # credit_amount = get_credit_amount_field_name(input_schema_example_without_field)\n#\n#     positive_class_field = get_positive_class_label(input_schema_example)\n#     print(f\" positive_class_field {positive_class_field}\")\n\n\nif __name__ == '__main__':\n    unittest.main()\n",
        "sourceCodeFilePath" : "test_main_dashboard.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "ab716625-64cc-32eb-88a4-186b2eb3f81f",
        "name" : "concept_drift_monitor.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "from modelop.ootb_monitors.concept_drift_kolmogorov_smirnov import concept_drift_kolmogorov_smirnov\nimport modelop_sdk.utils.logging as logger\nimport dashboard_service as dashboard_service\n\n\ndef calculate_concept_drift(baseline, comparator, init_param) -> dict:\n    \"\"\"\n    Source:  https://github.com/modelop/moc_monitors/tree/main/src/modelop/ootb_monitors/concept_drift_kolmogorov_smirnov\n\n    Evaluation Metrics (Source:https://modelop.atlassian.net/wiki/spaces/~355140182/pages/2286944283/Dashboard+3.0+monitors):\n        max( <score_column>: <p-value>)\n        i.e. the max of all the p-values across the score columns (usually there is only one but there could\n        be multiple)\n    ---- Heatmap criteria\n        max(p-value) > 2 → RED\n        1 < max(p-value) < 2 → YELLOW\n        max(p-value) < 1 → GREEN\n        max(p-value) IS NULL or test fails → GRAY\n\n    \"\"\"\n    LOG = logger.configure_logger()\n\n    dashboard_service.assert_df_not_none_and_not_empty(baseline, \"Required baseline\")\n    dashboard_service.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    concept_drift_kolmogorov_smirnov.init(init_param)\n    monitor_results = concept_drift_kolmogorov_smirnov.metrics(baseline, comparator)\n\n    for result in monitor_results:\n        concept_drift = result\n\n    try:\n        concept_drift_pvalues = dashboard_service.get_dict_root_entries_with_suffix(concept_drift, \"_pvalue\")\n    except Exception as ex:\n        raise ValueError(f\"Error while extracting Concept Drift KS '_pvalue' : {str(ex)} \")\n\n    p_value_array = dashboard_service.dict_values_to_numeric_array(concept_drift_pvalues)\n    if len(p_value_array) == 0:\n        raise ValueError(\n            f\" No numerics values found at the 'values' concept drift generated results field {str(concept_drift)} \")\n\n    concept_drift_max_p_value = {\"concept_drift_max_p_value\": max(p_value_array)}\n    LOG.debug(f\"Adding generated : {concept_drift_max_p_value}\")\n    concept_drift.update(concept_drift_max_p_value)\n    return concept_drift\n",
        "sourceCodeFilePath" : "concept_drift_monitor.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "e971a318-3534-3b6e-a13d-3d08701fb883",
        "name" : "volumetrics_count_monitor.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "import modelop_sdk.utils.logging as logger\nfrom modelop.ootb_monitors.volumetrics_count import volumetrics_count\nimport dashboard_service as dashboard_service\n\n\ndef calculate_daily_inferences(comparator) -> dict:\n    \"\"\"\n    MOCVolumetricsCountMonitor that performs Volumetrics counts\n    Source: https://github.com/modelop/moc_monitors/tree/main/src/modelop/ootb_monitors/volumetrics_count\n    \"\"\"\n    LOG = logger.configure_logger()\n\n    dashboard_service.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    # Initialize Volumetric monitor with 1st input DataFrame\n    volumetric_monitor = volumetrics_count.metrics(comparator)\n\n    for result in volumetric_monitor:\n        return result[\"record_count\"]\n",
        "sourceCodeFilePath" : "volumetrics_count_monitor.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "e276c564-4f36-3f83-af81-81c02b344139",
        "name" : "actual_roi_monitor.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "import modelop_sdk.utils.logging as logger\nimport dashboard_service as dashboard_service\n\nLOG = logger.configure_logger()\n\n\ndef calculate_roi(comparator, deployable_model, input_schema) -> dict:\n    \"\"\"\n    Source: https://github.com/merhi-odg/actual_ROI_monitor\n    This monitor requires the next values at the input_schema\n\n    \"\"\"\n    dashboard_service.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    if deployable_model is None or len(deployable_model) == 0:\n        raise ValueError(\"deployed_model is None or empty\")\n\n    if input_schema is None or len(input_schema) == 0:\n        raise ValueError(\"input_schema is None or empty\")\n\n    try:\n        ROI_parameters = deployable_model[\"storedModel\"][\"modelMetaData\"][\"roi\"]\n        LOG.info(\"ROI parameters: %s\", ROI_parameters)\n    except Exception as er1:\n        error_message = \"Required deployed_model.deployableModel.storedModel.modelMetadata.roi not found, missing parameters \"\n        LOG.error(error_message)\n        raise KeyError(error_message)\n\n    global positive_class_label\n    try:\n        positive_class_label = get_positive_class_label(input_schema)\n        LOG.info(\"Label of Positive Class: %s\", positive_class_label)\n    except Exception as er2:\n        raise KeyError(\n            f\"Error while extracting required model_metadata.monitoring.performance.positive_class_label from model_metadata {str(er2)}\")\n\n    global amount_field, label_field, score_field\n    global cost_multipliers\n\n    amount_field = get_credit_amount_field_name(input_schema)\n    score_field = \"score\"  # Assuming these values will be present all the time\n    label_field = \"label_value\"  # Assuming these values will be present all the time\n\n    # ROI cost multipliers for each classification case\n    cost_multipliers = {\n        \"TP\": ROI_parameters[\"costMultipliersTP\"],\n        \"FP\": ROI_parameters[\"costMultipliersFP\"],\n        \"TN\": ROI_parameters[\"costMultipliersTN\"],\n        \"FN\": ROI_parameters[\"costMultipliersFN\"]\n    }\n\n    LOG.info(f\"Using cost_multipliers {str(cost_multipliers)}\")\n    # Classify each record in dataframe\n    for idx in range(len(comparator)):\n        if comparator.iloc[idx][label_field] == comparator.iloc[idx][score_field]:\n            comparator[\"record_class\"] = (\n                \"TP\" if comparator.iloc[idx][label_field] == positive_class_label else \"TN\"\n            )\n        elif comparator.iloc[idx][label_field] < comparator.iloc[idx][score_field]:\n            comparator[\"record_class\"] = \"FP\"\n        else:\n            comparator[\"record_class\"] = \"FN\"\n\n    # Compute actual ROI\n    actual_roi = compute_actual_roi(comparator)\n    LOG.info(f\"compute_actual_roi: {actual_roi}\")\n    return actual_roi\n\n\ndef compute_actual_roi(data) -> float:\n    \"\"\"\n    Helper function to compute actual ROI.\n    Args:\n        data (pd.DataFrame): Input DataFrame containing record_class\n    Returns:\n        float: actual ROI\n    \"\"\"\n\n    actual_roi = 0\n    for idx in range(len(data)):\n        actual_roi += (\n                data.iloc[idx][amount_field]\n                * cost_multipliers[data.iloc[idx][\"record_class\"]]\n        )\n\n    return round(actual_roi, 2)\n\n\ndef get_credit_amount_field_name(input_schema: dict = None) -> str:\n    \"\"\"\n    Method that extracts the credit_amount field name marked with `isAmountField`:true from the input_schema.\n\n        input:\n            input_schema : dict - external input_schema\n        output:\n            str: `name` value of field marked as `isAmountField`\n        exceptions thrown:\n            - If none fields were defined with `isAmountField`:true, then it raises ValueException.\n            - If more than one field were marked with `isAmountField`: true, then it raises ValueException.\n\n    \"\"\"\n    if input_schema is None or not input_schema:\n        raise ValueError(\"input_schema is None or empty\")\n\n    if input_schema.get(\"fields\") is None:\n        raise KeyError(\"fields field not found at the input extended_schema\")\n\n    fields_array = input_schema[\"fields\"]\n\n    if not isinstance(fields_array, list):\n        raise ValueError(f\"fields_array is not an instance of array , instead {type(fields_array)}\")\n\n    amount_field_value = None\n\n    for field in fields_array:\n        if field.get(\"isAmountField\") is not None:\n            # Making sure isAmountField true\n            if isinstance(field.get(\"isAmountField\"), bool) and field.get(\"isAmountField\"):\n                if amount_field_value is not None:\n                    raise ValueError(\n                        f\"Error: More than one fields marked as `isAmountField` found, existing one {amount_field_value}\")\n                amount_field_value = field.get(\"name\")\n\n    if amount_field_value is None:\n        raise ValueError(\"None fields found as `isAmountField`:true \")\n\n    return amount_field_value\n\n\ndef get_positive_class_label(input_schema: dict = None) -> any:\n    \"\"\"\n     Method that extracts the value for `positiveClassLabel` for fields with 'role':'label',\n     method throws exception if the number of `positiveClassLabel` fields != 1\n\n        input:\n            input_schema : dict - external input_schema\n        output:\n            any: `value` value for field marked as `positiveClassLabel`\n        exceptions thrown:\n            - If none fields were defined with `positiveClassLabel` then it raises ValueException.\n            - If more than one field were marked with `positiveClassLabel`, then it raises ValueException.\n\n    \"\"\"\n    if input_schema is None or not input_schema:\n        raise ValueError(\"input_schema is None or empty\")\n\n    if input_schema.get(\"fields\") is None:\n        raise KeyError(\"fields field not found at the input extended_schema\")\n\n    fields_array = input_schema[\"fields\"]\n\n    if not isinstance(fields_array, list):\n        raise ValueError(f\"fields_array is not an instance of array , instead {type(fields_array)}\")\n\n    positive_class_label = any\n\n    for field in fields_array:\n        if field.get(\"role\") is not None and field.get(\"role\") == \"label\":\n\n            if field.get(\"positiveClassLabel\") is not None:\n                if positive_class_label is not any:\n                    raise ValueError(\n                        f\"Error: More than one fields marked as `positiveClassLabel` found, only one is allowed\")\n                positive_class_label = field.get(\"positiveClassLabel\")\n\n    if positive_class_label is any:\n        raise ValueError(\"None fields found marked as `positiveClassLabel` \")\n\n    return positive_class_label\n",
        "sourceCodeFilePath" : "actual_roi_monitor.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "95094503-ea2f-3122-9fca-56e7f2c7a162",
        "name" : "stability_monitor.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "from modelop.ootb_monitors.stability_analysis import stability_analysis\nimport modelop_sdk.utils.logging as logger\nimport dashboard_service as dashboard_service\n\n\ndef calculate_stability(baseline, comparator, init_param) -> dict:\n    \"\"\"\n    Source: https://github.com/modelop/moc_monitors/tree/main/src/modelop/ootb_monitors/stability_analysis\n\n    Evaluation Metrics (Source:https://modelop.atlassian.net/wiki/spaces/~355140182/pages/2286944283/Dashboard+3.0+monitors):\n        max( <predictive_feature.stability_index>:)\n        i.e. the max of all the stability indexes across all features\n    ---- Heatmap criteria\n        max(stability_index) > 0.2 → RED\n        0.1 < max(stability_index) < 0.2 → YELLOW\n        max(stability_index) < 0.1 → GREEN\n        max(stability_index) IS NULL or test fails → GRAY\n    \"\"\"\n    LOG = logger.configure_logger()\n\n    dashboard_service.assert_df_not_none_and_not_empty(baseline, \"Required baseline\")\n    dashboard_service.assert_df_not_none_and_not_empty(comparator, \"Required comparator\")\n\n    stability_analysis.init(init_param)\n    monitor_results = stability_analysis.metrics(baseline, comparator)\n\n    for result in monitor_results:\n        stability_analysis_metrics = result\n\n    LOG.debug(f\"stability_analysis_metrics {stability_analysis_metrics}\")\n\n    try:\n        csi_values = dashboard_service.get_dict_root_entries_with_suffix(stability_analysis_metrics, \"_CSI\")\n    except Exception as ex:\n        raise ValueError(f\"Error while extracting Stability analysis '_CSI' values : {str(ex)} \")\n\n    csi_array = dashboard_service.dict_values_to_numeric_array(csi_values)\n\n    if len(csi_array) == 0:\n        raise ValueError(\n            f\" No numerics values found at the `csi_array` results field {str(stability_analysis_metrics)} \")\n\n    characteristic_stability_max_csi_result = {\"characteristic_stability_max_stability_index\": max(csi_array)}\n    LOG.info(f\" characteristic_stability_max_csi_result {str(characteristic_stability_max_csi_result)}\")\n    stability_analysis_metrics.update(characteristic_stability_max_csi_result)\n\n    return stability_analysis_metrics\n",
        "sourceCodeFilePath" : "stability_monitor.py",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "cbe970c0-97a2-4628-a924-66a1163e839f",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/cbe970c0-97a2-4628-a924-66a1163e839f.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "34043ce564c660dc45db9ea1040c7416a9a7cf18897ed838e0f8e273f4101cf7"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/cbe970c0-97a2-4628-a924-66a1163e839f.json",
        "filename" : "sampleData/jsonJobGermanCredit_withInputSchema_error.json",
        "fileFormat" : "JSON",
        "fileSize" : 271713
      }, {
        "assetId" : "ab92bd05-5598-4b3f-8bfe-5c815ea07cf5",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/ab92bd05-5598-4b3f-8bfe-5c815ea07cf5.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "b7ea5a67e06f567e23baf47163ff086bc50d16a5c662bf3c054ea7b664cbd7ae"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/ab92bd05-5598-4b3f-8bfe-5c815ea07cf5.json",
        "filename" : "sampleData/jsonJobWithInputSchema_germanCredit_updated_bad_input_schema.json",
        "fileFormat" : "JSON",
        "fileSize" : 187110
      }, {
        "assetId" : "af051dbb-ae2d-4deb-9b61-bca6d93c6591",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/af051dbb-ae2d-4deb-9b61-bca6d93c6591.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "e170f8ca2360e82679d4633c35b2908f93a8b41bcd63d027cd500daa19da76d3"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/af051dbb-ae2d-4deb-9b61-bca6d93c6591.json",
        "filename" : "sampleData/df_baseline_scored.json",
        "fileFormat" : "JSON",
        "fileSize" : 382615
      }, {
        "assetId" : "d6a8fd2f-7d5a-4b1a-8076-ccaa3ac1f986",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/d6a8fd2f-7d5a-4b1a-8076-ccaa3ac1f986.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "a23c4f05ebb0323d48bae8bfdf5bdaacd6509b826fef600b56485c5799b42645"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/d6a8fd2f-7d5a-4b1a-8076-ccaa3ac1f986.json",
        "filename" : "sampleData/jsonJobGermanCredit_without_input_schema_error.json",
        "fileFormat" : "JSON",
        "fileSize" : 265677
      }, {
        "assetId" : "3bc0e9a0-d346-48d8-91c3-7a7f52382641",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/3bc0e9a0-d346-48d8-91c3-7a7f52382641.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "b93be8413e3590dc096a43a8ebce9dfbef1f7629b6705cdcb4ff258beb92bb0e"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/3bc0e9a0-d346-48d8-91c3-7a7f52382641.json",
        "filename" : "sampleData/df_sample.json",
        "fileFormat" : "JSON",
        "fileSize" : 93686
      }, {
        "assetId" : "6e70592b-cb44-4c91-b127-c4f0bfe8f7d7",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/6e70592b-cb44-4c91-b127-c4f0bfe8f7d7.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "8d0ef93b6ff6cac93aa584aa03ccf587e29b40f0c01e6e5fae95efd65e881fce"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/6e70592b-cb44-4c91-b127-c4f0bfe8f7d7.json",
        "filename" : "sampleData/jsonJobWithInputSchema_germanCredit_additional_ext_sc_fields.json",
        "fileFormat" : "JSON",
        "fileSize" : 190381
      }, {
        "assetId" : "9bb2e768-efe2-4c16-8a30-57058d9b2051",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/9bb2e768-efe2-4c16-8a30-57058d9b2051.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "534bd755760f29145b37462b6b2821709818b56b7c717755c21c2a1003763117"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/9bb2e768-efe2-4c16-8a30-57058d9b2051.json",
        "filename" : "sampleData/df_baseline.json",
        "fileFormat" : "JSON",
        "fileSize" : 374615
      }, {
        "assetId" : "afb1ab17-c3b2-41be-aa80-e80bf6ea197e",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/afb1ab17-c3b2-41be-aa80-e80bf6ea197e.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "1ec29416bac60327d830f48e1babe1dc967ecc8adf99c3d190c5fc3abdc69170"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/afb1ab17-c3b2-41be-aa80-e80bf6ea197e.json",
        "filename" : "sampleData/jsonJobWithInputSchema_germanCredit_updated.json",
        "fileFormat" : "JSON",
        "fileSize" : 200060
      }, {
        "assetId" : "e8155821-2c32-4ae2-b7d1-8dd7d88601f2",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/e8155821-2c32-4ae2-b7d1-8dd7d88601f2.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "d23455d2f14209d8d72ce82a9ada7b9e6a8f2cdb2de075ef53f03c14ccb335c7"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/e8155821-2c32-4ae2-b7d1-8dd7d88601f2.json",
        "filename" : "sampleData/df_sample_scored.json",
        "fileFormat" : "JSON",
        "fileSize" : 95686
      }, {
        "assetId" : "a02385bd-f56d-4ee1-9bf8-761ff74d064b",
        "name" : "73da91e4-d3ab-43e6-a524-082e975cc701/a02385bd-f56d-4ee1-9bf8-761ff74d064b.gitignore",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "UNKNOWN",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "771e4343ed3af649fadde13d26de1b56fe3afba5a72bcbb0ab8834c54b5893db"
        },
        "fileUrl" : "http://modelop:9000/modelop/73da91e4-d3ab-43e6-a524-082e975cc701/a02385bd-f56d-4ee1-9bf8-761ff74d064b.gitignore",
        "filename" : ".gitignore",
        "fileFormat" : "UNKNOWN",
        "fileSize" : 310
      }, {
        "assetId" : "7a97b6a7-f495-4cfc-92aa-c3aa02078943",
        "assetType" : "FILE",
        "assetRole" : "REQUIRED_LIBRARIES",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "filename" : "requirements.txt",
        "fileFormat" : "UNKNOWN",
        "localFile" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701/requirements.txt",
        "fileSize" : 35,
        "fileContentString" : "modelop_sdk>=0.3.2\nmodelop>=0.13.0\n",
        "fileContent" : "bW9kZWxvcF9zZGs+PTAuMy4yCm1vZGVsb3A+PTAuMTMuMAo="
      }, {
        "assetId" : "88af8cd5-2072-43bc-9755-eb48b46fe57b",
        "assetType" : "FILE",
        "assetRole" : "README_FILE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "filename" : "README.md",
        "fileFormat" : "UNKNOWN",
        "localFile" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701/README.md",
        "fileSize" : 23,
        "fileContentString" : "# demo_dashboard_models",
        "fileContent" : "IyBkZW1vX2Rhc2hib2FyZF9tb2RlbHM="
      }, {
        "assetId" : "a99c1c9e-52f0-4092-aa22-c3e01e961467",
        "name" : "metadata.json",
        "assetType" : "FILE",
        "assetRole" : "MODEL_METADATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "filename" : "metadata.json",
        "fileFormat" : "JSON",
        "localFile" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701/metadata.json",
        "fileSize" : 357,
        "fileContentString" : "{\n    \"tags\": [],\n    \"name\": \"Default Dashboard Model\",\n    \"description\": \"Runs default monitors on a base business model generating data for the main MOC Dashboard\",\n    \"modelCategory\": \"MODEL_MONITORING_MODEL\",\n    \"defaultAssociationRole\": \"METRICS_MODEL\",\n    \"frequentlyUsed\": true,\n    \"custom\": {\n        \"modelopPackageVersion\": \"0.13.0\"\n    }\n}\n",
        "fileContent" : "ewogICAgInRhZ3MiOiBbXSwKICAgICJuYW1lIjogIkRlZmF1bHQgRGFzaGJvYXJkIE1vZGVsIiwKICAgICJkZXNjcmlwdGlvbiI6ICJSdW5zIGRlZmF1bHQgbW9uaXRvcnMgb24gYSBiYXNlIGJ1c2luZXNzIG1vZGVsIGdlbmVyYXRpbmcgZGF0YSBmb3IgdGhlIG1haW4gTU9DIERhc2hib2FyZCIsCiAgICAibW9kZWxDYXRlZ29yeSI6ICJNT0RFTF9NT05JVE9SSU5HX01PREVMIiwKICAgICJkZWZhdWx0QXNzb2NpYXRpb25Sb2xlIjogIk1FVFJJQ1NfTU9ERUwiLAogICAgImZyZXF1ZW50bHlVc2VkIjogdHJ1ZSwKICAgICJjdXN0b20iOiB7CiAgICAgICAgIm1vZGVsb3BQYWNrYWdlVmVyc2lvbiI6ICIwLjEzLjAiCiAgICB9Cn0K"
      }, {
        "assetId" : "f562d3e6-a6db-4a12-8cf6-87ca9a219dd9",
        "name" : "required_assets.json",
        "assetType" : "FILE",
        "assetRole" : "REQUIRED_ASSETS",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701",
          "repositoryRemote" : "https://github.com/modelop/default_dashboard_model.git",
          "repositoryBranch" : "FSN-4328",
          "lastCommitId" : "98b8a1ecaa62d18f8b5dfd3803e2af4aa1d90e8f",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:57:08.711Z: https://github.com/modelop/default_dashboard_model.git successfully updated",
          "lastCommitDate" : "2022-03-31T05:41:00Z"
        },
        "filename" : "required_assets.json",
        "fileFormat" : "JSON",
        "localFile" : "/tmp/model-manage-repos/FSN-4328/73da91e4-d3ab-43e6-a524-082e975cc701/required_assets.json",
        "fileSize" : 345,
        "fileContentString" : "[\n    {\n        \"usage\": \"INPUT_ASSET\",\n        \"assetRole\": \"BASELINE_DATA\",\n        \"metaData\": {\n            \"description\": \"Baseline/Reference Dataset\"\n        }\n    },\n    {\n        \"usage\": \"INPUT_ASSET\",\n        \"assetRole\": \"COMPARATOR_DATA\",\n        \"metaData\": {\n            \"description\": \"Slice of Production Data\"\n        }\n    }\n]\n",
        "fileContent" : "WwogICAgewogICAgICAgICJ1c2FnZSI6ICJJTlBVVF9BU1NFVCIsCiAgICAgICAgImFzc2V0Um9sZSI6ICJCQVNFTElORV9EQVRBIiwKICAgICAgICAibWV0YURhdGEiOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJCYXNlbGluZS9SZWZlcmVuY2UgRGF0YXNldCIKICAgICAgICB9CiAgICB9LAogICAgewogICAgICAgICJ1c2FnZSI6ICJJTlBVVF9BU1NFVCIsCiAgICAgICAgImFzc2V0Um9sZSI6ICJDT01QQVJBVE9SX0RBVEEiLAogICAgICAgICJtZXRhRGF0YSI6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlNsaWNlIG9mIFByb2R1Y3Rpb24gRGF0YSIKICAgICAgICB9CiAgICB9Cl0K"
      } ],
      "gitDifferences" : [ ],
      "associatedModels" : [ ],
      "requiredAssets" : [ {
        "assetId" : "dfce53a6-df54-4ed3-92b5-52d5f1590e9c",
        "assetType" : "FILE",
        "assetRole" : "BASELINE_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ],
          "description" : "Baseline/Reference Dataset"
        },
        "usage" : "INPUT_ASSET",
        "fileSize" : 0
      }, {
        "assetId" : "9019e0f0-88c1-4b3d-873d-c2e217ab16f4",
        "assetType" : "FILE",
        "assetRole" : "COMPARATOR_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ],
          "description" : "Slice of Production Data"
        },
        "usage" : "INPUT_ASSET",
        "fileSize" : 0
      } ]
    },
    "modelMLCs" : [ {
      "processInstance" : {
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "processDefinitionName" : "Dashboard Process",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionVersion" : 1,
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "startTime" : "2022-03-31T05:59:19.900+00:00",
        "endTime" : "2022-03-31T05:59:29.000+00:00",
        "durationInMillis" : 9664,
        "startActivityId" : "StartEvent_1",
        "state" : "COMPLETED"
      },
      "activityInstances" : [ {
        "parentActivityInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_0bezxmu",
        "activityName" : "Get Deployable Model Ids",
        "activityType" : "scriptTask",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:20.089+00:00",
        "endTime" : "2022-03-31T05:59:20.175+00:00",
        "durationInMillis" : 86,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_0sqc2gv",
        "activityName" : "Get Deployed Models",
        "activityType" : "serviceTask",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b4bea7ea-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:19.954+00:00",
        "endTime" : "2022-03-31T05:59:20.014+00:00",
        "durationInMillis" : 60,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "Activity_1h9j47y:b504b1b7-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_15g5umr",
        "activityName" : "Run Standardized Tests",
        "activityType" : "serviceTask",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b52ef612-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:20.690+00:00",
        "endTime" : "2022-03-31T05:59:27.904+00:00",
        "durationInMillis" : 7214,
        "canceled" : true,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "Activity_1h9j47y:b504b1b7-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_17gli15",
        "activityName" : "Get Base Model Required Assets",
        "activityType" : "serviceTask",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b518fd09-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:20.590+00:00",
        "endTime" : "2022-03-31T05:59:20.653+00:00",
        "durationInMillis" : 63,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_17zgp7q",
        "activityName" : "Get Latest Dashboard Snapshot",
        "activityType" : "serviceTask",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b4e2d1c5-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:20.191+00:00",
        "endTime" : "2022-03-31T05:59:20.262+00:00",
        "durationInMillis" : 71,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "b504638e-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_1h9j47y",
        "activityType" : "subProcess",
        "startTime" : "2022-03-31T05:59:20.413+00:00",
        "endTime" : "2022-03-31T05:59:28.811+00:00",
        "durationInMillis" : 8398,
        "canceled" : false,
        "completeScope" : true
      }, {
        "parentActivityInstanceId" : "Activity_1h9j47y:b504b1b7-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Event_0r3x6ne",
        "activityType" : "startEvent",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b504b1b6-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:20.443+00:00",
        "endTime" : "2022-03-31T05:59:20.515+00:00",
        "durationInMillis" : 72,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Gateway_0xq5n8p",
        "activityType" : "exclusiveGateway",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:20.036+00:00",
        "endTime" : "2022-03-31T05:59:20.071+00:00",
        "durationInMillis" : 35,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Gateway_1e3vip3",
        "activityName" : "Dashboard model found?",
        "activityType" : "exclusiveGateway",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:20.299+00:00",
        "endTime" : "2022-03-31T05:59:20.375+00:00",
        "durationInMillis" : 76,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "StartEvent_1",
        "activityType" : "signalStartEvent",
        "processDefinitionKey" : "Process_12vz7p6",
        "processDefinitionId" : "Process_12vz7p6:1:37da0c58-a492-11ec-aa95-eefc24cb3355",
        "processInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:59:19.901+00:00",
        "endTime" : "2022-03-31T05:59:19.936+00:00",
        "durationInMillis" : 35,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_1h9j47y#multiInstanceBody",
        "activityType" : "multiInstanceBody",
        "startTime" : "2022-03-31T05:59:20.411+00:00",
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "Activity_1h9j47y:b504b1b7-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_15g5umr",
        "activityName" : "Run Standardized Tests",
        "activityType" : "serviceTask",
        "canceled" : true,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "Activity_1h9j47y:b504b1b7-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_0as824b",
        "activityName" : "Exception Handler",
        "activityType" : "subProcess",
        "endTime" : "2022-03-31T05:59:28.744+00:00",
        "canceled" : false,
        "completeScope" : true
      }, {
        "parentActivityInstanceId" : "Activity_0as824b:b97d6831-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Event_1xhmy7j",
        "activityType" : "errorStartEvent",
        "endTime" : "2022-03-31T05:59:28.036+00:00",
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "Activity_0as824b:b97d6831-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_08rj0fv",
        "activityName" : "Notify Error",
        "activityType" : "serviceTask",
        "startTime" : "2022-03-31T05:59:28.292+00:00",
        "endTime" : "2022-03-31T05:59:28.495+00:00",
        "durationInMillis" : 203,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "Activity_0as824b:b97d6831-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Event_1fzs9sf",
        "activityType" : "noneEndEvent",
        "startTime" : "2022-03-31T05:59:28.615+00:00",
        "endTime" : "2022-03-31T05:59:28.681+00:00",
        "durationInMillis" : 66,
        "canceled" : false,
        "completeScope" : true
      }, {
        "parentActivityInstanceId" : "b4b66a86-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Event_13kkluo",
        "activityType" : "terminateEndEvent",
        "startTime" : "2022-03-31T05:59:28.962+00:00",
        "endTime" : "2022-03-31T05:59:29.055+00:00",
        "durationInMillis" : 93,
        "canceled" : false,
        "completeScope" : true
      } ]
    } ],
    "metaData" : {
      "custom" : { },
      "tags" : [ "INIT" ],
      "name" : "Default Dashboard Model-20220330_2357"
    },
    "associatedModels" : [ ],
    "modelDocuments" : [ ],
    "targetRuntimes" : [ {
      "engineType" : "MODEL_OP_ENGINE",
      "inputEndpoints" : [ ],
      "outputEndpoints" : [ ],
      "tags" : [ ],
      "inProduction" : false,
      "lastActivity" : { }
    } ]
  },
  "targetEngine" : {
    "id" : "f6bee03f-80a9-59e6-a497-ef572fa124bc",
    "group" : "modelop",
    "version" : 3,
    "createdDate" : "2022-03-31T05:46:28.270Z",
    "lastModifiedDate" : "2022-03-31T05:59:50.682Z",
    "createdBy" : "SYSTEM",
    "lastModifiedBy" : "SYSTEM",
    "engineType" : "MODEL_OP_ENGINE",
    "name" : "engine-test",
    "release" : "2.5.2+build.1765.ref45d65c6",
    "state" : "INIT",
    "platform" : {"r":{"system":{"version_info":{"year":"2017","version.string":"R version 3.4.3 (2017-11-30)","system":"x86_64, linux-gnu","svn rev":"73796","status":"","platform":"x86_64-pc-linux-gnu","os":"linux-gnu","nickname":"Kite-Eating Tree","month":"11","minor":"4.3","major":"3","language":"R","day":"30","arch":"x86_64"},"version":"R version 3.4.3 (2017-11-30)","system":"unix","processor":{"arch":"x86_64"},"platform":"unix","num_processors":4,"executable":"/usr/bin/R","double_info":["0.0000000000000002220446","0.0000000000000001110223","2.225074e-308","1.797693e+308","2","53","5","0","-52","-53","11","-1022","1024","2147483647","8","8","16","8"],"architecture":64},"libraries":{"RevoMods":"11.0.0","lattice":"0.20-35","mrsdeploy":"1.1.3","RUnit":"0.4.26","Matrix":"1.2-12","methods":"3.4.3","cluster":"2.0.6","tcltk":"3.4.3","png":"0.1-7","fastscore.io":"1.0","base":"3.4.3","iterators":"1.0.9","CompatibilityAPI":"1.1.0","MASS":"7.3-47","nnet":"7.3-12","grDevices":"3.4.3","utils":"3.4.3","RevoIOQ":"8.0.9","deployrRserve":"9.0.0","R6":"2.2.2","codetools":"0.2-15","splines":"3.4.3","class":"7.3-14","boot":"1.3-20","jsonlite":"1.5","spatial":"7.3-11","RevoPemaR":"10.0.0","RevoScaleR":"9.3.0","foreign":"0.8-69","RevoTreeView":"10.0.0","fastscore.runner":"1.6","compiler":"3.4.3","nlme":"3.1-131","RevoUtils":"10.0.7","curl":"3.1","survival":"2.41-3","datasets":"3.4.3","foreach":"1.4.5","MicrosoftR":"3.4.3.0097","mgcv":"1.8-22","grid":"3.4.3","KernSmooth":"2.23-15","doRSR":"10.0.0","doParallel":"1.0.12","RevoUtilsMath":"10.0.1","stats":"3.4.3","stats4":"3.4.3","graphics":"3.4.3","rpart":"4.1-11","parallel":"3.4.3","RevoTDUtils":"1.0","tools":"3.4.3","mrupdate":"1.0.1","checkpoint":"0.4.3","fastscore":"1.6"}},"python":{"system":{"version_info":[3,8,3,"final",0],"version":"3.8.3 (default, Mar 16 2022, 13:31:27) \n[GCC 8.5.0 20210514 (Red Hat 8.5.0-4)]","system":"Linux","processor":"x86_64","platform":"linux","num_processors":4,"float_info":[1.7976931348623157E308,1024,308,2.2250738585072014E-308,-1021,-307,15,53,2.220446049250313E-16,2,1],"executable":"/usr/bin/python3","architecture":["64bit",""],"api_version":1013},"libraries":{"Werkzeug":"2.0.3","modelop":"0.13.0","Pillow":"9.0.1","importlib-resources":"5.4.0","requests":"2.26.0","MarkupSafe":"2.1.1","zipp":"3.7.0","joblib":"1.1.0","PyPDF2":"1.26.0","aequitas":"0.42.0","SQLAlchemy":"1.4.32","greenlet":"1.1.2","pip":"22.0.4","tabulate":"0.8.2","visitor":"0.1.3","scipy":"1.8.0","millify":"0.1.1","setuptools":"41.2.0","httplib2":"0.20.4","patsy":"0.5.2","numpy":"1.22.3","markdown2":"2.3.5","pyparsing":"3.0.7","pytz":"2021.3","PyYAML":"6.0","python-dateutil":"2.8.2","Flask-Bootstrap":"3.3.7.1","scikit-learn":"0.22","quickavro":"0.1.22","bert":"2.2.0","ohio":"0.5.0","pyrsistent":"0.18.1","webencodings":"0.5.1","Flask":"0.12.2","toolz":"0.11.2","urllib3":"1.26.9","statsmodels":"0.12.2","reportlab":"3.6.8","basho-erlastic":"2.1.1","itsdangerous":"2.1.1","six":"1.16.0","pandas":"1.2.3","modelop-sdk":"0.3.2","charset-normalizer":"2.0.12","kiwisolver":"1.4.0","dominate":"2.6.0","click":"8.0.4","seaborn":"0.11.2","cycler":"0.11.0","idna":"3.3","jsonschema":"4.4.0","Jinja2":"3.0.3","fonttools":"4.30.0","attrs":"21.4.0","packaging":"21.3","html5lib":"1.1","certifi":"2021.10.8","entrypoints":"0.4","altair":"4.1.0","xhtml2pdf":"0.2.2","matplotlib":"3.5.1","msgpack":"1.0.3"}}},
    "inputEndpoints" : [ ],
    "outputEndpoints" : [ ],
    "tags" : [ "default", "test", "MONITOR" ],
    "environmentName" : "unassigned",
    "inProduction" : false,
    "lastActivity" : { },
    "manifoldInfo" : {
      "streams" : [ ],
      "jets" : [ ],
      "state" : "init",
      "group" : "modelop",
      "initialTags" : [ ],
      "environmentName" : "unassigned",
      "inProduction" : false
    }
  },
  "referenceModel" : {
    "id" : "55cb5c4d-ded0-4e85-8176-3739223679bd",
    "group" : "modelop",
    "version" : 44,
    "createdDate" : "2022-03-31T05:58:07.334Z",
    "lastModifiedDate" : "2022-03-31T05:58:17.735Z",
    "createdBy" : "SYSTEM",
    "lastModifiedBy" : "SYSTEM",
    "storedModel" : {
      "id" : "5c420142-8a95-482a-8839-1fdc8c930fcf",
      "group" : "modelop",
      "version" : 2,
      "createdDate" : "2022-03-31T05:55:03.326Z",
      "lastModifiedDate" : "2022-03-31T05:56:12.360Z",
      "createdBy" : "SYSTEM",
      "lastModifiedBy" : "SYSTEM",
      "modelMetaData" : {
        "custom" : {
          "modelopPackageVersion" : "0.13.2"
        },
        "tags" : [ ],
        "name" : "GC - dashboard",
        "description" : "Imported from a GIT repository",
        "type" : "PYTHON",
        "inputSchema" : [ {
          "schemaId" : "5461e0dd-3bde-46ab-ba8e-5acae987ef07",
          "name" : "input_schema.avsc",
          "schemaDefinition" : {"type":"record","name":"input_schema.avsc","fields":[{"type":"int","specialValues":[],"scoringOptional":false,"role":"identifier","protectedClass":false,"name":"id","driftCandidate":false,"dataClass":"numerical"},{"type":"int","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"duration_months","driftCandidate":true,"dataClass":"numerical"},{"type":"float","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"credit_amount","isAmountField":true,"driftCandidate":true,"dataClass":"numerical"},{"type":"int","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"installment_rate","driftCandidate":true,"dataClass":"numerical"},{"type":"int","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"present_residence_since","driftCandidate":true,"dataClass":"numerical"},{"type":"int","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"age_years","driftCandidate":true,"dataClass":"numerical"},{"type":"int","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"number_existing_credits","driftCandidate":true,"dataClass":"numerical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"checking_status","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"credit_history","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"purpose","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"savings_account","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"present_employment_since","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"debtors_guarantors","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"property","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"installment_plans","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"housing","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"job","driftCandidate":true,"dataClass":"categorical"},{"type":"int","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"number_people_liable","driftCandidate":true,"dataClass":"numerical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"telephone","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":false,"role":"predictor","protectedClass":false,"name":"foreign_worker","driftCandidate":true,"dataClass":"categorical"},{"type":"string","specialValues":[],"scoringOptional":true,"role":"predictor","protectedClass":true,"name":"gender","driftCandidate":true,"dataClass":"categorical"},{"type":"int","specialValues":[],"scoringOptional":true,"role":"label","protectedClass":false,"positiveClassLabel":1,"name":"label_value","driftCandidate":true,"dataClass":"categorical"},{"type":"int","specialValues":[],"scoringOptional":true,"role":"score","protectedClass":false,"name":"score","driftCandidate":true,"dataClass":"categorical"}]}
        } ],
        "outputSchema" : [ {
          "schemaId" : "7cd1242d-1ce4-4e64-a387-0a9e0df81c51",
          "name" : "output_schema.avsc",
          "schemaDefinition" : {"type":"array","items":{"type":"record","name":"output_schema.avsc","fields":[{"type":"int","name":"id"},{"type":"int","name":"number_people_liable"},{"type":"int","name":"age_years"},{"type":"string","name":"present_employment_since"},{"type":"string","name":"job"},{"type":"string","name":"housing"},{"type":"string","name":"telephone"},{"type":"string","name":"installment_plans"},{"type":"int","name":"number_existing_credits"},{"type":"string","name":"credit_history"},{"type":"string","name":"foreign_worker"},{"type":"string","name":"property"},{"type":"int","name":"installment_rate"},{"type":"string","name":"purpose"},{"type":"string","name":"checking_status"},{"type":"int","name":"present_residence_since"},{"type":"string","name":"debtors_guarantors"},{"type":"string","name":"savings_account"},{"type":"int","name":"duration_months"},{"type":"int","name":"credit_amount"},{"type":"string","name":"gender"},{"type":"int","name":"label_value"},{"type":"int","name":"score"}]}}
        } ],
        "enableInputSchemaChecking" : false,
        "enableOutputSchemaChecking" : false,
        "attachments" : [ ],
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "modelCategory" : "BUSINESS_MODEL",
        "roi" : {
          "baselineMetricsTNR" : 0.877,
          "baselineMetricsTPR" : 0.531,
          "costMultipliersTP" : 1.5,
          "costMultipliersTN" : 2.0,
          "costMultipliersFP" : -2.0,
          "costMultipliersFN" : -1.5
        }
      },
      "modelAssets" : [ {
        "assetId" : "61cb5e11-893e-3adc-a7eb-a91c0200e05f",
        "name" : "back_test_comparator.dmn",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "TEST_RESULT_COMPARATOR",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\" xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\" xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\" xmlns:camunda=\"http://camunda.org/schema/1.0/dmn\" xmlns:biodi=\"http://bpmn.io/schema/dmn/biodi/2.0\" id=\"Definitions_0wb2acp\" name=\"DRD\" namespace=\"http://camunda.org/schema/1.0/dmn\" exporter=\"Camunda Modeler\" exporterVersion=\"4.10.0\">\n  <decision id=\"Decision_0q87m1a\" name=\"Model Test Comparator\">\n    <decisionTable id=\"decisionTable_1\" hitPolicy=\"COLLECT\" biodi:annotationsWidth=\"400\">\n      <input id=\"input_1\" label=\"pprev_disparity\" biodi:width=\"150\" camunda:inputVariable=\"pprev_disparity\">\n        <inputExpression id=\"inputExpression_1\" typeRef=\"double\" expressionLanguage=\"feel\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <input id=\"InputClause_08e7ybd\" label=\"pprev_disparity\" biodi:width=\"150\" camunda:inputVariable=\"pprev_disparity\">\n        <inputExpression id=\"LiteralExpression_0nr86e9\" typeRef=\"double\" expressionLanguage=\"feel\">\n          <text></text>\n        </inputExpression>\n      </input>\n      <output id=\"output_1\" label=\"passes\" name=\"passes\" typeRef=\"boolean\" biodi:width=\"150\" />\n      <output id=\"OutputClause_05h1co6\" label=\"reason\" name=\"reason\" typeRef=\"string\" biodi:width=\"150\" />\n      <output id=\"OutputClause_13ewsro\" label=\"category\" name=\"category\" typeRef=\"string\" biodi:width=\"150\" />\n      <rule id=\"DecisionRule_0aznir8\">\n        <inputEntry id=\"UnaryTests_1x4xf13\">\n          <text>&lt;= 0.8</text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1wcb8sj\">\n          <text></text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_0a5bp3u\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_07v4w07\">\n          <text>\"Predicted Prevalence Disparity Below Threshold of 0.8\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1ub6nly\">\n          <text>\"EthicalFairness\"</text>\n        </outputEntry>\n      </rule>\n      <rule id=\"DecisionRule_0ggwcp6\">\n        <inputEntry id=\"UnaryTests_0lmlprd\">\n          <text></text>\n        </inputEntry>\n        <inputEntry id=\"UnaryTests_1u0j72q\">\n          <text>&gt;= 1.25</text>\n        </inputEntry>\n        <outputEntry id=\"LiteralExpression_1id0elh\">\n          <text>false</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_1qpb76t\">\n          <text>\"Predicted Prevalence Disarity Above Threshold of 1.25\"</text>\n        </outputEntry>\n        <outputEntry id=\"LiteralExpression_09zevgh\">\n          <text>\"EthicalFairness\"</text>\n        </outputEntry>\n      </rule>\n    </decisionTable>\n  </decision>\n  <dmndi:DMNDI>\n    <dmndi:DMNDiagram id=\"DMNDiagram_0pjncth\">\n      <dmndi:DMNShape id=\"DMNShape_1xroslw\" dmnElementRef=\"Decision_0q87m1a\">\n        <dc:Bounds height=\"80\" width=\"180\" x=\"150\" y=\"150\" />\n      </dmndi:DMNShape>\n    </dmndi:DMNDiagram>\n  </dmndi:DMNDI>\n</definitions>\n",
        "sourceCodeFilePath" : "back_test_comparator.dmn",
        "sourceCodeType" : "MODEL"
      }, {
        "assetId" : "ab910e92-301f-3a62-ab41-227f7d53ae35",
        "name" : "logistic_regression_model_trainer.ipynb",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "primaryModelSource" : false,
        "sourceCode" : "{\n \"cells\": [\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"# From Notebook to ModelOp Center:\\n\",\n    \"## Training, Evaluating, and Conforming a Model for Deployment\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"In this notebook, we demonstrate the process of \\n\",\n    \"1. training a model, \\n\",\n    \"2. evaluating its performance, \\n\",\n    \"3. saving it for later use,\\n\",\n    \"4. and conforming it to MOC standards.\\n\",\n    \"\\n\",\n    \"More specifically, we will train a logistic regression classifier on the German Credit Data dataset.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**I - Model Training**\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let's begin by loading relevant libraries. We will need `sklearn` for model training, and `aequitas` for bias detection.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import csv\\n\",\n    \"import json\\n\",\n    \"import pickle\\n\",\n    \"import numpy as np\\n\",\n    \"import pandas as pd\\n\",\n    \"\\n\",\n    \"from aequitas.bias import Bias\\n\",\n    \"from aequitas.group import Group\\n\",\n    \"from aequitas.preprocessing import preprocess_input_df\\n\",\n    \"\\n\",\n    \"from sklearn import set_config\\n\",\n    \"from sklearn.pipeline import make_pipeline\\n\",\n    \"from sklearn.preprocessing import OneHotEncoder\\n\",\n    \"from sklearn.linear_model import LogisticRegression\\n\",\n    \"from sklearn.model_selection import train_test_split, GridSearchCV, RepeatedStratifiedKFold\\n\",\n    \"from sklearn.metrics import make_scorer, accuracy_score, precision_score, recall_score, \\\\\\n\",\n    \"                            f1_score, fbeta_score, confusion_matrix\\n\",\n    \"\\n\",\n    \"# set_config(display='diagram')\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"The **German Credit Data** dataset can be found here: https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data). Download it and load it from a *CSV* file. For our purposes, the dataset has been modified slightly to include an `id` column, and a `gender` column (engineered from `status_sex`, used to demonstarte bias). The target variable is under `label`. We have mapped the labels `[1,2]` to `[0,1]`, where `1` indicates the positive class (loan default).\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"data = pd.read_csv(\\\"german_credit_data.csv\\\")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"The aequitas library requires the true label to be encoded as 'label_value', so let us rename that column.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 4,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"data = data.rename(columns={\\\"label\\\":\\\"label_value\\\"})\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"array(['id', 'duration_months', 'credit_amount', 'installment_rate',\\n\",\n       \"       'present_residence_since', 'age_years', 'number_existing_credits',\\n\",\n       \"       'checking_status', 'credit_history', 'purpose', 'savings_account',\\n\",\n       \"       'present_employment_since', 'debtors_guarantors', 'property',\\n\",\n       \"       'installment_plans', 'housing', 'job', 'number_people_liable',\\n\",\n       \"       'telephone', 'foreign_worker', 'gender', 'label_value'],\\n\",\n       \"      dtype=object)\"\n      ]\n     },\n     \"execution_count\": 5,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"data.columns.values\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let's look at some data:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"metadata\": {\n    \"scrolled\": true\n   },\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>id</th>\\n\",\n       \"      <th>duration_months</th>\\n\",\n       \"      <th>credit_amount</th>\\n\",\n       \"      <th>installment_rate</th>\\n\",\n       \"      <th>present_residence_since</th>\\n\",\n       \"      <th>age_years</th>\\n\",\n       \"      <th>number_existing_credits</th>\\n\",\n       \"      <th>checking_status</th>\\n\",\n       \"      <th>credit_history</th>\\n\",\n       \"      <th>purpose</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>debtors_guarantors</th>\\n\",\n       \"      <th>property</th>\\n\",\n       \"      <th>installment_plans</th>\\n\",\n       \"      <th>housing</th>\\n\",\n       \"      <th>job</th>\\n\",\n       \"      <th>number_people_liable</th>\\n\",\n       \"      <th>telephone</th>\\n\",\n       \"      <th>foreign_worker</th>\\n\",\n       \"      <th>gender</th>\\n\",\n       \"      <th>label_value</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>6</td>\\n\",\n       \"      <td>1169</td>\\n\",\n       \"      <td>4</td>\\n\",\n       \"      <td>4</td>\\n\",\n       \"      <td>67</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>A11</td>\\n\",\n       \"      <td>A34</td>\\n\",\n       \"      <td>A43</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>A101</td>\\n\",\n       \"      <td>A121</td>\\n\",\n       \"      <td>A143</td>\\n\",\n       \"      <td>A152</td>\\n\",\n       \"      <td>A173</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>A192</td>\\n\",\n       \"      <td>A201</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>48</td>\\n\",\n       \"      <td>5951</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>22</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>A12</td>\\n\",\n       \"      <td>A32</td>\\n\",\n       \"      <td>A43</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>A101</td>\\n\",\n       \"      <td>A121</td>\\n\",\n       \"      <td>A143</td>\\n\",\n       \"      <td>A152</td>\\n\",\n       \"      <td>A173</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>A191</td>\\n\",\n       \"      <td>A201</td>\\n\",\n       \"      <td>female</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2</th>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>12</td>\\n\",\n       \"      <td>2096</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>3</td>\\n\",\n       \"      <td>49</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>A14</td>\\n\",\n       \"      <td>A34</td>\\n\",\n       \"      <td>A46</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>A101</td>\\n\",\n       \"      <td>A121</td>\\n\",\n       \"      <td>A143</td>\\n\",\n       \"      <td>A152</td>\\n\",\n       \"      <td>A172</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>A191</td>\\n\",\n       \"      <td>A201</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>3</th>\\n\",\n       \"      <td>3</td>\\n\",\n       \"      <td>42</td>\\n\",\n       \"      <td>7882</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>4</td>\\n\",\n       \"      <td>45</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>A11</td>\\n\",\n       \"      <td>A32</td>\\n\",\n       \"      <td>A42</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>A103</td>\\n\",\n       \"      <td>A122</td>\\n\",\n       \"      <td>A143</td>\\n\",\n       \"      <td>A153</td>\\n\",\n       \"      <td>A173</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>A191</td>\\n\",\n       \"      <td>A201</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>4</th>\\n\",\n       \"      <td>4</td>\\n\",\n       \"      <td>24</td>\\n\",\n       \"      <td>4870</td>\\n\",\n       \"      <td>3</td>\\n\",\n       \"      <td>4</td>\\n\",\n       \"      <td>53</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>A11</td>\\n\",\n       \"      <td>A33</td>\\n\",\n       \"      <td>A40</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>A101</td>\\n\",\n       \"      <td>A124</td>\\n\",\n       \"      <td>A143</td>\\n\",\n       \"      <td>A153</td>\\n\",\n       \"      <td>A173</td>\\n\",\n       \"      <td>2</td>\\n\",\n       \"      <td>A191</td>\\n\",\n       \"      <td>A201</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>5 rows × 22 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"   id  duration_months  credit_amount  installment_rate  \\\\\\n\",\n       \"0   0                6           1169                 4   \\n\",\n       \"1   1               48           5951                 2   \\n\",\n       \"2   2               12           2096                 2   \\n\",\n       \"3   3               42           7882                 2   \\n\",\n       \"4   4               24           4870                 3   \\n\",\n       \"\\n\",\n       \"   present_residence_since  age_years  number_existing_credits  \\\\\\n\",\n       \"0                        4         67                        2   \\n\",\n       \"1                        2         22                        1   \\n\",\n       \"2                        3         49                        1   \\n\",\n       \"3                        4         45                        1   \\n\",\n       \"4                        4         53                        2   \\n\",\n       \"\\n\",\n       \"  checking_status credit_history purpose  ... debtors_guarantors property  \\\\\\n\",\n       \"0             A11            A34     A43  ...               A101     A121   \\n\",\n       \"1             A12            A32     A43  ...               A101     A121   \\n\",\n       \"2             A14            A34     A46  ...               A101     A121   \\n\",\n       \"3             A11            A32     A42  ...               A103     A122   \\n\",\n       \"4             A11            A33     A40  ...               A101     A124   \\n\",\n       \"\\n\",\n       \"  installment_plans housing   job number_people_liable telephone  \\\\\\n\",\n       \"0              A143    A152  A173                    1      A192   \\n\",\n       \"1              A143    A152  A173                    1      A191   \\n\",\n       \"2              A143    A152  A172                    2      A191   \\n\",\n       \"3              A143    A153  A173                    2      A191   \\n\",\n       \"4              A143    A153  A173                    2      A191   \\n\",\n       \"\\n\",\n       \"   foreign_worker  gender label_value  \\n\",\n       \"0            A201    male           0  \\n\",\n       \"1            A201  female           1  \\n\",\n       \"2            A201    male           0  \\n\",\n       \"3            A201    male           0  \\n\",\n       \"4            A201    male           1  \\n\",\n       \"\\n\",\n       \"[5 rows x 22 columns]\"\n      ]\n     },\n     \"execution_count\": 6,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"data.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Not all numeric columns need to be considered as numeric features. For example, `number_people_liable` only has two unique discrete values:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 7,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"1    845\\n\",\n       \"2    155\\n\",\n       \"Name: number_people_liable, dtype: int64\"\n      ]\n     },\n     \"execution_count\": 7,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"data.number_people_liable.value_counts()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"We may therefore treat it as a categorical feature. Note, however, that we may need to reconsider this option if more values appear in testing phases.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 8,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"data.number_people_liable = data.number_people_liable.astype('object')\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Before proceeding any further with model development, let us split the original dataset into two sets: a **baseline** set that will be used as a reference set, and a **sample** set which will mimic input data to the model once the model is in use.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 9,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df_baseline, df_sample = train_test_split(data, train_size=0.8, random_state=0)\\n\",\n    \"\\n\",\n    \"df_baseline.to_json('df_baseline.json', orient='records', lines=True)\\n\",\n    \"df_sample.to_json('df_sample.json', orient='records', lines=True)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"We will train a **Logistic Regression** classifier. Since our data contains categorical features, we will need to start our pipeline with an encoder.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 10,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"pipeline = make_pipeline(\\n\",\n    \"    OneHotEncoder(\\n\",\n    \"        handle_unknown='ignore', \\n\",\n    \"        sparse=True\\n\",\n    \"    ),\\n\",\n    \"    LogisticRegression(\\n\",\n    \"        max_iter=1000,\\n\",\n    \"        random_state=0\\n\",\n    \"    )\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**Logistic Regression** has multiple parameters which can be tuned. Among these are `C`, `solver`, and `class_weight`, which will be optimized by **GridSearchCV**. We provide GridSearchCV a list of values for each of these parameters.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 11,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"parameters = dict(\\n\",\n    \"    logisticregression__C=np.logspace(-4, 4, 50), # Inverse of regularization strength\\n\",\n    \"    logisticregression__solver=['liblinear', 'lbfgs', 'newton-cg'],\\n\",\n    \"    logisticregression__class_weight=['balanced', None]\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Our data still contains non-predictive features, such as `id`, `label` and `gender` (excluded to remove explicit bias). We remove these below.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 12,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"predictive_features = [\\n\",\n    \"    f for f in list(data.columns.values) \\n\",\n    \"    if f not in ['id', 'label_value', 'gender']\\n\",\n    \"]\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"As a sanity check, let us see which features are automatically encoded as **numeric**, and which are encoded as **categorical**.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 13,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"categorical_features = [\\n\",\n    \"    f for f in list(data.select_dtypes(include=['category', 'object'])) \\n\",\n    \"    if f in predictive_features\\n\",\n    \"]\\n\",\n    \"\\n\",\n    \"numerical_features = [\\n\",\n    \"    f for f in predictive_features \\n\",\n    \"    if f not in categorical_features\\n\",\n    \"]\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**Categorical features**:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 14,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"['checking_status', 'credit_history', 'purpose', 'savings_account', 'present_employment_since', 'debtors_guarantors', 'property', 'installment_plans', 'housing', 'job', 'number_people_liable', 'telephone', 'foreign_worker']\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"print(categorical_features)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**Numerical features**:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 15,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"['duration_months', 'credit_amount', 'installment_rate', 'present_residence_since', 'age_years', 'number_existing_credits']\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"print(numerical_features)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Everything looks good; let us proceed with training. We need to specify **predictive** and **response** variables for each of the training and test sets. We set these by filtering the baseline and sample sets.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 16,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"X_train = df_baseline[predictive_features]\\n\",\n    \"X_test = df_sample[predictive_features]\\n\",\n    \"\\n\",\n    \"y_train = df_baseline['label_value']\\n\",\n    \"y_test = df_sample['label_value']\\n\",\n    \"\\n\",\n    \"X_train.to_json('X_train.json', orient='records', lines=True)\\n\",\n    \"X_test.to_json('X_test.json', orient='records', lines=True)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"We may now fit the classifier to the training data. Since \\\"it is worse to classify a customer as good when they are bad, than it is to classify a customer as bad when they are good\\\", we will use an **F_beta metric**, with `beta=2`, to judge the performance of our model.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 17,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"GridSearchCV(cv=RepeatedStratifiedKFold(n_repeats=3, n_splits=10, random_state=0),\\n\",\n       \"             error_score=nan,\\n\",\n       \"             estimator=Pipeline(memory=None,\\n\",\n       \"                                steps=[('onehotencoder',\\n\",\n       \"                                        OneHotEncoder(categories='auto',\\n\",\n       \"                                                      drop=None,\\n\",\n       \"                                                      dtype=<class 'numpy.float64'>,\\n\",\n       \"                                                      handle_unknown='ignore',\\n\",\n       \"                                                      sparse=True)),\\n\",\n       \"                                       ('logisticregression',\\n\",\n       \"                                        LogisticRegression(C=1.0,\\n\",\n       \"                                                           class_weight=None,\\n\",\n       \"                                                           dual=False,\\n\",\n       \"                                                           fit_intercept=...\\n\",\n       \"       3.39322177e+02, 4.94171336e+02, 7.19685673e+02, 1.04811313e+03,\\n\",\n       \"       1.52641797e+03, 2.22299648e+03, 3.23745754e+03, 4.71486636e+03,\\n\",\n       \"       6.86648845e+03, 1.00000000e+04]),\\n\",\n       \"                         'logisticregression__class_weight': ['balanced', None],\\n\",\n       \"                         'logisticregression__solver': ['liblinear', 'lbfgs',\\n\",\n       \"                                                        'newton-cg']},\\n\",\n       \"             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\\n\",\n       \"             scoring=make_scorer(fbeta_score, beta=2), verbose=0)\"\n      ]\n     },\n     \"execution_count\": 17,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"clf_GS = GridSearchCV(\\n\",\n    \"    estimator=pipeline, \\n\",\n    \"    param_grid=parameters,\\n\",\n    \"    n_jobs=-1,\\n\",\n    \"    scoring=make_scorer(fbeta_score, beta=2),\\n\",\n    \"    cv=RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=0)\\n\",\n    \")\\n\",\n    \"clf_GS.fit(X_train, y_train)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 19,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"Pipeline(memory=None,\\n\",\n       \"         steps=[('onehotencoder',\\n\",\n       \"                 OneHotEncoder(categories='auto', drop=None,\\n\",\n       \"                               dtype=<class 'numpy.float64'>,\\n\",\n       \"                               handle_unknown='ignore', sparse=True)),\\n\",\n       \"                ('logisticregression',\\n\",\n       \"                 LogisticRegression(C=0.0020235896477251557,\\n\",\n       \"                                    class_weight='balanced', dual=False,\\n\",\n       \"                                    fit_intercept=True, intercept_scaling=1,\\n\",\n       \"                                    l1_ratio=None, max_iter=1000,\\n\",\n       \"                                    multi_class='auto', n_jobs=None,\\n\",\n       \"                                    penalty='l2', random_state=0,\\n\",\n       \"                                    solver='lbfgs', tol=0.0001, verbose=0,\\n\",\n       \"                                    warm_start=False))],\\n\",\n       \"         verbose=False)\"\n      ]\n     },\n     \"execution_count\": 19,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"clf_GS.best_estimator_\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let's examine the parameters of the best estimator more carefully.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 20,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"{'logisticregression__C': 0.0020235896477251557,\\n\",\n       \" 'logisticregression__class_weight': 'balanced',\\n\",\n       \" 'logisticregression__solver': 'lbfgs'}\"\n      ]\n     },\n     \"execution_count\": 20,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"clf_GS.best_params_\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"It appears that the best logistic regression classifier is one with a `solver='lbfgs'` and `class_weight='balanced'`. This classifier achived the best score:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 21,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"0.6720094431830962\"\n      ]\n     },\n     \"execution_count\": 21,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"clf_GS.best_score_\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**II - Model Evaluation**\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Before saving our trained model for further use, let's look at some performance metrics. We will evaluate the model on both the training and test sets; we would like to see a stable performance.\\n\",\n    \"\\n\",\n    \"For repeatability, let's define a function which computes multiple metrics at-a-time:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 22,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"def compute_metrics(y, y_preds):\\n\",\n    \"    \\\"\\\"\\\"\\n\",\n    \"    A function to evaluate a classification model\\n\",\n    \"    \\n\",\n    \"    param: y: true (actual) labels\\n\",\n    \"    param: y_preds: predicted labels (as scored by model)\\n\",\n    \"    \\n\",\n    \"    return: mutiple classification performance metrics\\n\",\n    \"    \\\"\\\"\\\"\\n\",\n    \"    \\n\",\n    \"    return [\\n\",\n    \"        accuracy_score(y, y_preds),\\n\",\n    \"        precision_score(y, y_preds),\\n\",\n    \"        recall_score(y, y_preds),\\n\",\n    \"        f1_score(y, y_preds),\\n\",\n    \"        fbeta_score(y, y_preds, beta=2),\\n\",\n    \"    ]\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let us now compute predictions on both training and test sets:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 23,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"y_test_preds = clf_GS.best_estimator_.predict(X_test)\\n\",\n    \"y_train_preds = clf_GS.best_estimator_.predict(X_train)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"We will display performance metrics in a DataFrame:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 24,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"preformance_df = pd.DataFrame(\\n\",\n    \"    data=[{}],\\n\",\n    \"    columns=['Accuracy', 'Precision', 'Recall', 'F1 score', 'F2 Score'],\\n\",\n    \"    index=['Training Set', 'Test Set']\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 25,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"preformance_df.loc['Training Set',:] = compute_metrics(y=y_train, y_preds=y_train_preds)\\n\",\n    \"preformance_df.loc['Test Set',:] = compute_metrics(y=y_test, y_preds=y_test_preds)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Here's how our model performed:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 26,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>Accuracy</th>\\n\",\n       \"      <th>Precision</th>\\n\",\n       \"      <th>Recall</th>\\n\",\n       \"      <th>F1 score</th>\\n\",\n       \"      <th>F2 Score</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>Training Set</th>\\n\",\n       \"      <td>0.725</td>\\n\",\n       \"      <td>0.531250</td>\\n\",\n       \"      <td>0.772727</td>\\n\",\n       \"      <td>0.629630</td>\\n\",\n       \"      <td>0.708333</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>Test Set</th>\\n\",\n       \"      <td>0.665</td>\\n\",\n       \"      <td>0.451613</td>\\n\",\n       \"      <td>0.724138</td>\\n\",\n       \"      <td>0.556291</td>\\n\",\n       \"      <td>0.646154</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"              Accuracy  Precision    Recall  F1 score  F2 Score\\n\",\n       \"Training Set     0.725   0.531250  0.772727  0.629630  0.708333\\n\",\n       \"Test Set         0.665   0.451613  0.724138  0.556291  0.646154\"\n      ]\n     },\n     \"execution_count\": 26,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"preformance_df\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"While it's good to see that the performance on the training set is not too far off from the performance on the test set, further model improvements are needed to achieve better F2 scores. For now, we will contend with this model and use it to produce new predictions.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**III - Saving and Loading the Trained Model**\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Now that the model is **trained** and **evaluated**, we save it in a binary format. It will then be loaded and used to make new predictions.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 27,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"pickle.dump(clf_GS.best_estimator_, open(\\\"logreg_classifier.pickle\\\", 'wb'))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"The model is reloaded on-demand as follows:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 58,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"logreg_classifier = pickle.load(open(\\\"logreg_classifier.pickle\\\", 'rb'))\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Predictions are produced on-demand by calling the `predict()` function:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 59,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"new_preds = logreg_classifier.predict(X_test)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**IV - Evaluating Bias on Protected Classes**\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Since `gender` is a protected class, we have excluded it from the list of predictive features. However, this does not guarantee that the model is not implicitly biased, as `gender` could potentially be inferred from other features. It is therefore imperative that we evaluate our model for Bias.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"To that end, let us produce some predictions and append them to our labeled baseline and sample sets.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 60,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df_baseline_scored = df_baseline.copy(deep=True)\\n\",\n    \"df_baseline_scored[\\\"score\\\"] = logreg_classifier.predict(\\n\",\n    \"    df_baseline[predictive_features])\\n\",\n    \"\\n\",\n    \"df_sample_scored = df_sample.copy(deep=True)\\n\",\n    \"df_sample_scored[\\\"score\\\"] = logreg_classifier.predict(\\n\",\n    \"    df_sample[predictive_features])\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let's save these two DataFrames before proceeding further:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 61,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df_baseline_scored.to_json('df_baseline_scored.json', orient='records', lines=True)\\n\",\n    \"df_sample_scored.to_json('df_sample_scored.json', orient='records', lines=True)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Now, we call the aequitas preprocessing function on our datasets, filtered to the features we care about: `score` (prediction), `label_value` (true label), and `gender` (protected class):\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 62,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df_baseline_scored_processed, _ = preprocess_input_df(\\n\",\n    \"    df_baseline_scored.loc[:,['score', 'label_value', 'gender']]\\n\",\n    \")\\n\",\n    \"df_sample_scored_processed, _ = preprocess_input_df(\\n\",\n    \"    df_sample_scored.loc[:,['score', 'label_value', 'gender']]\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let's start by computing some `Group` Metrics:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 63,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"g_baseline, g_sample = Group(), Group()\\n\",\n    \"xtab_baseline, _ = g_baseline.get_crosstabs(df_baseline_scored_processed)\\n\",\n    \"xtab_sample, _ = g_sample.get_crosstabs(df_sample_scored_processed)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 64,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"absolute_metrics_baseline = g_baseline.list_absolute_metrics(xtab_baseline)\\n\",\n    \"absolute_metrics_sample = g_sample.list_absolute_metrics(xtab_sample)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Here are the absolute metrics, computed on baseline and sample sets, respectively:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 65,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>attribute_name</th>\\n\",\n       \"      <th>attribute_value</th>\\n\",\n       \"      <th>tpr</th>\\n\",\n       \"      <th>tnr</th>\\n\",\n       \"      <th>for</th>\\n\",\n       \"      <th>fdr</th>\\n\",\n       \"      <th>fpr</th>\\n\",\n       \"      <th>fnr</th>\\n\",\n       \"      <th>npv</th>\\n\",\n       \"      <th>precision</th>\\n\",\n       \"      <th>ppr</th>\\n\",\n       \"      <th>pprev</th>\\n\",\n       \"      <th>prev</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>female</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>0.67</td>\\n\",\n       \"      <td>0.14</td>\\n\",\n       \"      <td>0.43</td>\\n\",\n       \"      <td>0.33</td>\\n\",\n       \"      <td>0.20</td>\\n\",\n       \"      <td>0.86</td>\\n\",\n       \"      <td>0.57</td>\\n\",\n       \"      <td>0.34</td>\\n\",\n       \"      <td>0.50</td>\\n\",\n       \"      <td>0.35</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>0.76</td>\\n\",\n       \"      <td>0.72</td>\\n\",\n       \"      <td>0.12</td>\\n\",\n       \"      <td>0.49</td>\\n\",\n       \"      <td>0.28</td>\\n\",\n       \"      <td>0.24</td>\\n\",\n       \"      <td>0.88</td>\\n\",\n       \"      <td>0.51</td>\\n\",\n       \"      <td>0.66</td>\\n\",\n       \"      <td>0.42</td>\\n\",\n       \"      <td>0.28</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"  attribute_name attribute_value   tpr   tnr   for   fdr   fpr   fnr   npv  \\\\\\n\",\n       \"0         gender          female  0.80  0.67  0.14  0.43  0.33  0.20  0.86   \\n\",\n       \"1         gender            male  0.76  0.72  0.12  0.49  0.28  0.24  0.88   \\n\",\n       \"\\n\",\n       \"   precision   ppr  pprev  prev  \\n\",\n       \"0       0.57  0.34   0.50  0.35  \\n\",\n       \"1       0.51  0.66   0.42  0.28  \"\n      ]\n     },\n     \"execution_count\": 65,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"xtab_baseline[['attribute_name', 'attribute_value'] + absolute_metrics_baseline].round(2)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 66,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>attribute_name</th>\\n\",\n       \"      <th>attribute_value</th>\\n\",\n       \"      <th>tpr</th>\\n\",\n       \"      <th>tnr</th>\\n\",\n       \"      <th>for</th>\\n\",\n       \"      <th>fdr</th>\\n\",\n       \"      <th>fpr</th>\\n\",\n       \"      <th>fnr</th>\\n\",\n       \"      <th>npv</th>\\n\",\n       \"      <th>precision</th>\\n\",\n       \"      <th>ppr</th>\\n\",\n       \"      <th>pprev</th>\\n\",\n       \"      <th>prev</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>female</td>\\n\",\n       \"      <td>0.68</td>\\n\",\n       \"      <td>0.70</td>\\n\",\n       \"      <td>0.20</td>\\n\",\n       \"      <td>0.45</td>\\n\",\n       \"      <td>0.30</td>\\n\",\n       \"      <td>0.32</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>0.55</td>\\n\",\n       \"      <td>0.33</td>\\n\",\n       \"      <td>0.43</td>\\n\",\n       \"      <td>0.35</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>0.76</td>\\n\",\n       \"      <td>0.61</td>\\n\",\n       \"      <td>0.12</td>\\n\",\n       \"      <td>0.60</td>\\n\",\n       \"      <td>0.39</td>\\n\",\n       \"      <td>0.24</td>\\n\",\n       \"      <td>0.88</td>\\n\",\n       \"      <td>0.40</td>\\n\",\n       \"      <td>0.67</td>\\n\",\n       \"      <td>0.48</td>\\n\",\n       \"      <td>0.26</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"  attribute_name attribute_value   tpr   tnr   for   fdr   fpr   fnr   npv  \\\\\\n\",\n       \"0         gender          female  0.68  0.70  0.20  0.45  0.30  0.32  0.80   \\n\",\n       \"1         gender            male  0.76  0.61  0.12  0.60  0.39  0.24  0.88   \\n\",\n       \"\\n\",\n       \"   precision   ppr  pprev  prev  \\n\",\n       \"0       0.55  0.33   0.43  0.35  \\n\",\n       \"1       0.40  0.67   0.48  0.26  \"\n      ]\n     },\n     \"execution_count\": 66,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"xtab_sample[['attribute_name', 'attribute_value'] + absolute_metrics_sample].round(2)\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"We can also add some raw counts (group sizes) as follows:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 67,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>model_id</th>\\n\",\n       \"      <th>score_threshold</th>\\n\",\n       \"      <th>k</th>\\n\",\n       \"      <th>attribute_name</th>\\n\",\n       \"      <th>attribute_value</th>\\n\",\n       \"      <th>pp</th>\\n\",\n       \"      <th>pn</th>\\n\",\n       \"      <th>fp</th>\\n\",\n       \"      <th>fn</th>\\n\",\n       \"      <th>tn</th>\\n\",\n       \"      <th>tp</th>\\n\",\n       \"      <th>group_label_pos</th>\\n\",\n       \"      <th>group_label_neg</th>\\n\",\n       \"      <th>group_size</th>\\n\",\n       \"      <th>total_entities</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>binary 0/1</td>\\n\",\n       \"      <td>352</td>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>female</td>\\n\",\n       \"      <td>118</td>\\n\",\n       \"      <td>120</td>\\n\",\n       \"      <td>51</td>\\n\",\n       \"      <td>17</td>\\n\",\n       \"      <td>103</td>\\n\",\n       \"      <td>67</td>\\n\",\n       \"      <td>84</td>\\n\",\n       \"      <td>154</td>\\n\",\n       \"      <td>238</td>\\n\",\n       \"      <td>800</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>binary 0/1</td>\\n\",\n       \"      <td>352</td>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>234</td>\\n\",\n       \"      <td>328</td>\\n\",\n       \"      <td>114</td>\\n\",\n       \"      <td>38</td>\\n\",\n       \"      <td>290</td>\\n\",\n       \"      <td>120</td>\\n\",\n       \"      <td>158</td>\\n\",\n       \"      <td>404</td>\\n\",\n       \"      <td>562</td>\\n\",\n       \"      <td>800</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"   model_id score_threshold    k attribute_name attribute_value   pp   pn  \\\\\\n\",\n       \"0         0      binary 0/1  352         gender          female  118  120   \\n\",\n       \"1         0      binary 0/1  352         gender            male  234  328   \\n\",\n       \"\\n\",\n       \"    fp  fn   tn   tp  group_label_pos  group_label_neg  group_size  \\\\\\n\",\n       \"0   51  17  103   67               84              154         238   \\n\",\n       \"1  114  38  290  120              158              404         562   \\n\",\n       \"\\n\",\n       \"   total_entities  \\n\",\n       \"0             800  \\n\",\n       \"1             800  \"\n      ]\n     },\n     \"execution_count\": 67,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"xtab_baseline[[col for col in xtab_baseline.columns if col not in absolute_metrics_baseline]]\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 68,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>model_id</th>\\n\",\n       \"      <th>score_threshold</th>\\n\",\n       \"      <th>k</th>\\n\",\n       \"      <th>attribute_name</th>\\n\",\n       \"      <th>attribute_value</th>\\n\",\n       \"      <th>pp</th>\\n\",\n       \"      <th>pn</th>\\n\",\n       \"      <th>fp</th>\\n\",\n       \"      <th>fn</th>\\n\",\n       \"      <th>tn</th>\\n\",\n       \"      <th>tp</th>\\n\",\n       \"      <th>group_label_pos</th>\\n\",\n       \"      <th>group_label_neg</th>\\n\",\n       \"      <th>group_size</th>\\n\",\n       \"      <th>total_entities</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>binary 0/1</td>\\n\",\n       \"      <td>93</td>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>female</td>\\n\",\n       \"      <td>31</td>\\n\",\n       \"      <td>41</td>\\n\",\n       \"      <td>14</td>\\n\",\n       \"      <td>8</td>\\n\",\n       \"      <td>33</td>\\n\",\n       \"      <td>17</td>\\n\",\n       \"      <td>25</td>\\n\",\n       \"      <td>47</td>\\n\",\n       \"      <td>72</td>\\n\",\n       \"      <td>200</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>binary 0/1</td>\\n\",\n       \"      <td>93</td>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>62</td>\\n\",\n       \"      <td>66</td>\\n\",\n       \"      <td>37</td>\\n\",\n       \"      <td>8</td>\\n\",\n       \"      <td>58</td>\\n\",\n       \"      <td>25</td>\\n\",\n       \"      <td>33</td>\\n\",\n       \"      <td>95</td>\\n\",\n       \"      <td>128</td>\\n\",\n       \"      <td>200</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"   model_id score_threshold   k attribute_name attribute_value  pp  pn  fp  \\\\\\n\",\n       \"0         0      binary 0/1  93         gender          female  31  41  14   \\n\",\n       \"1         0      binary 0/1  93         gender            male  62  66  37   \\n\",\n       \"\\n\",\n       \"   fn  tn  tp  group_label_pos  group_label_neg  group_size  total_entities  \\n\",\n       \"0   8  33  17               25               47          72             200  \\n\",\n       \"1   8  58  25               33               95         128             200  \"\n      ]\n     },\n     \"execution_count\": 68,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"xtab_sample[[col for col in xtab_sample.columns if col not in absolute_metrics_sample]]\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"That's it for `Group` metrics. Let's move on to `Bias` metrics.\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 69,\n   \"metadata\": {\n    \"scrolled\": true\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"get_disparity_predefined_group()\\n\",\n      \"get_disparity_predefined_group()\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"b_baseline, b_sample = Bias(), Bias()\\n\",\n    \"\\n\",\n    \"bdf_baseline = b_baseline.get_disparity_predefined_groups(\\n\",\n    \"    xtab_baseline, \\n\",\n    \"    original_df=df_baseline_scored_processed, \\n\",\n    \"    ref_groups_dict={'gender':'male'}, alpha=0.05, mask_significance=True\\n\",\n    \")\\n\",\n    \"\\n\",\n    \"bdf_sample = b_sample.get_disparity_predefined_groups(\\n\",\n    \"    xtab_sample, \\n\",\n    \"    original_df=df_sample_scored_processed, \\n\",\n    \"    ref_groups_dict={'gender':'male'}, alpha=0.05, mask_significance=True\\n\",\n    \")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"We can now compute **disparity** metrics as follows\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 70,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"calculated_disparities_baseline = b_baseline.list_disparities(bdf_baseline)\\n\",\n    \"calculated_disparities_sample = b_sample.list_disparities(bdf_sample)\\n\",\n    \"\\n\",\n    \"disparity_metrics_df_baseline = bdf_baseline[\\n\",\n    \"    ['attribute_name', 'attribute_value'] + \\\\\\n\",\n    \"        calculated_disparities_baseline\\n\",\n    \"    ]\\n\",\n    \"disparity_metrics_df_sample = bdf_sample[\\n\",\n    \"    ['attribute_name', 'attribute_value'] + \\\\\\n\",\n    \"        calculated_disparities_sample\\n\",\n    \"    ]\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Here are the computed disparity metrics on baseline and sample sets, respectively:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 71,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>attribute_name</th>\\n\",\n       \"      <th>attribute_value</th>\\n\",\n       \"      <th>ppr_disparity</th>\\n\",\n       \"      <th>pprev_disparity</th>\\n\",\n       \"      <th>precision_disparity</th>\\n\",\n       \"      <th>fdr_disparity</th>\\n\",\n       \"      <th>for_disparity</th>\\n\",\n       \"      <th>fpr_disparity</th>\\n\",\n       \"      <th>fnr_disparity</th>\\n\",\n       \"      <th>tpr_disparity</th>\\n\",\n       \"      <th>tnr_disparity</th>\\n\",\n       \"      <th>npv_disparity</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>female</td>\\n\",\n       \"      <td>0.504274</td>\\n\",\n       \"      <td>1.190763</td>\\n\",\n       \"      <td>1.107203</td>\\n\",\n       \"      <td>0.887154</td>\\n\",\n       \"      <td>1.222807</td>\\n\",\n       \"      <td>1.173616</td>\\n\",\n       \"      <td>0.841479</td>\\n\",\n       \"      <td>1.050198</td>\\n\",\n       \"      <td>0.931751</td>\\n\",\n       \"      <td>0.970805</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"  attribute_name attribute_value  ppr_disparity  pprev_disparity  \\\\\\n\",\n       \"0         gender          female       0.504274         1.190763   \\n\",\n       \"1         gender            male       1.000000         1.000000   \\n\",\n       \"\\n\",\n       \"   precision_disparity  fdr_disparity  for_disparity  fpr_disparity  \\\\\\n\",\n       \"0             1.107203       0.887154       1.222807       1.173616   \\n\",\n       \"1             1.000000       1.000000       1.000000       1.000000   \\n\",\n       \"\\n\",\n       \"   fnr_disparity  tpr_disparity  tnr_disparity  npv_disparity  \\n\",\n       \"0       0.841479       1.050198       0.931751       0.970805  \\n\",\n       \"1       1.000000       1.000000       1.000000       1.000000  \"\n      ]\n     },\n     \"execution_count\": 71,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"disparity_metrics_df_baseline\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 72,\n   \"metadata\": {\n    \"scrolled\": true\n   },\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>attribute_name</th>\\n\",\n       \"      <th>attribute_value</th>\\n\",\n       \"      <th>ppr_disparity</th>\\n\",\n       \"      <th>pprev_disparity</th>\\n\",\n       \"      <th>precision_disparity</th>\\n\",\n       \"      <th>fdr_disparity</th>\\n\",\n       \"      <th>for_disparity</th>\\n\",\n       \"      <th>fpr_disparity</th>\\n\",\n       \"      <th>fnr_disparity</th>\\n\",\n       \"      <th>tpr_disparity</th>\\n\",\n       \"      <th>tnr_disparity</th>\\n\",\n       \"      <th>npv_disparity</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>female</td>\\n\",\n       \"      <td>0.5</td>\\n\",\n       \"      <td>0.888889</td>\\n\",\n       \"      <td>1.36</td>\\n\",\n       \"      <td>0.756757</td>\\n\",\n       \"      <td>1.609756</td>\\n\",\n       \"      <td>0.764807</td>\\n\",\n       \"      <td>1.32</td>\\n\",\n       \"      <td>0.8976</td>\\n\",\n       \"      <td>1.150037</td>\\n\",\n       \"      <td>0.915896</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>1.0</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>1.0000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"  attribute_name attribute_value  ppr_disparity  pprev_disparity  \\\\\\n\",\n       \"0         gender          female            0.5         0.888889   \\n\",\n       \"1         gender            male            1.0         1.000000   \\n\",\n       \"\\n\",\n       \"   precision_disparity  fdr_disparity  for_disparity  fpr_disparity  \\\\\\n\",\n       \"0                 1.36       0.756757       1.609756       0.764807   \\n\",\n       \"1                 1.00       1.000000       1.000000       1.000000   \\n\",\n       \"\\n\",\n       \"   fnr_disparity  tpr_disparity  tnr_disparity  npv_disparity  \\n\",\n       \"0           1.32         0.8976       1.150037       0.915896  \\n\",\n       \"1           1.00         1.0000       1.000000       1.000000  \"\n      ]\n     },\n     \"execution_count\": 72,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"disparity_metrics_df_sample\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Some of the disparity metrics above are worrisome! We might need to retrain the model, possibly with better feature engineering. That's an exercise for a later time.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**V - Conforming Model Code to MOC Requirements**\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Conformance is best-demonstrated through and example. Let's look at the code below:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 73,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import pandas as pd\\n\",\n    \"import numpy as np\\n\",\n    \"import pickle\\n\",\n    \"import copy\\n\",\n    \"from aequitas.preprocessing import preprocess_input_df\\n\",\n    \"from aequitas.group import Group\\n\",\n    \"from aequitas.bias import Bias\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"# modelop.init\\n\",\n    \"def begin():\\n\",\n    \"    \\n\",\n    \"    global logreg_classifier\\n\",\n    \"    \\n\",\n    \"    # load pickled logistic regression model\\n\",\n    \"    logreg_classifier = pickle.load(open(\\\"logreg_classifier.pickle\\\", \\\"rb\\\"))\\n\",\n    \"\\n\",\n    \"    \\n\",\n    \"# modelop.score\\n\",\n    \"def action(data):\\n\",\n    \"    \\n\",\n    \"    # Turn data into DataFrame\\n\",\n    \"    data = pd.DataFrame([data])\\n\",\n    \"    \\n\",\n    \"    # There are only two unique values in data.number_people_liable.\\n\",\n    \"    # Treat it as a categorical feature\\n\",\n    \"    data.number_people_liable = data.number_people_liable.astype('object')\\n\",\n    \"\\n\",\n    \"    predictive_features = [\\n\",\n    \"        'duration_months', 'credit_amount', 'installment_rate',\\n\",\n    \"        'present_residence_since', 'age_years', 'number_existing_credits',\\n\",\n    \"        'checking_status', 'credit_history', 'purpose', 'savings_account',\\n\",\n    \"        'present_employment_since', 'debtors_guarantors', 'property',\\n\",\n    \"        'installment_plans', 'housing', 'job', 'number_people_liable',\\n\",\n    \"        'telephone', 'foreign_worker'\\n\",\n    \"    ]\\n\",\n    \"    \\n\",\n    \"    data[\\\"predicted_score\\\"] = logreg_classifier.predict(data[predictive_features])\\n\",\n    \"    \\n\",\n    \"    # MOC expects the action function to be a *yield* function\\n\",\n    \"    yield data.to_dict(orient=\\\"records\\\")\\n\",\n    \"\\n\",\n    \"\\n\",\n    \"# modelop.metrics\\n\",\n    \"def metrics(data):\\n\",\n    \"    \\n\",\n    \"    data = pd.DataFrame(data)\\n\",\n    \"\\n\",\n    \"    # To measure Bias towards gender, filter DataFrame\\n\",\n    \"    # to \\\"score\\\", \\\"label_value\\\" (ground truth), and\\n\",\n    \"    # \\\"gender\\\" (protected attribute)\\n\",\n    \"    data_scored = data[[\\\"score\\\", \\\"label_value\\\", \\\"gender\\\"]]\\n\",\n    \"\\n\",\n    \"    # Process DataFrame\\n\",\n    \"    data_scored_processed, _ = preprocess_input_df(data_scored)\\n\",\n    \"\\n\",\n    \"    # Group Metrics\\n\",\n    \"    g = Group()\\n\",\n    \"    xtab, _ = g.get_crosstabs(data_scored_processed)\\n\",\n    \"\\n\",\n    \"    # Absolute metrics, such as 'tpr', 'tnr','precision', etc.\\n\",\n    \"    absolute_metrics = g.list_absolute_metrics(xtab)\\n\",\n    \"\\n\",\n    \"    # DataFrame of calculated absolute metrics for each sample population group\\n\",\n    \"    absolute_metrics_df = xtab[\\n\",\n    \"        ['attribute_name', 'attribute_value'] + absolute_metrics].round(2)\\n\",\n    \"\\n\",\n    \"    # For example:\\n\",\n    \"    \\\"\\\"\\\"\\n\",\n    \"        attribute_name  attribute_value     tpr     tnr  ... precision\\n\",\n    \"    0   gender          female              0.60    0.88 ... 0.75\\n\",\n    \"    1   gender          male                0.49    0.90 ... 0.64\\n\",\n    \"    \\\"\\\"\\\"\\n\",\n    \"\\n\",\n    \"    # Bias Metrics\\n\",\n    \"    b = Bias()\\n\",\n    \"\\n\",\n    \"    # Disparities calculated in relation gender for \\\"male\\\" and \\\"female\\\"\\n\",\n    \"    bias_df = b.get_disparity_predefined_groups(\\n\",\n    \"        xtab,\\n\",\n    \"        original_df=data_scored_processed,\\n\",\n    \"        ref_groups_dict={'gender': 'male'},\\n\",\n    \"        alpha=0.05, mask_significance=True\\n\",\n    \"    )\\n\",\n    \"\\n\",\n    \"    # Disparity metrics added to bias DataFrame\\n\",\n    \"    calculated_disparities = b.list_disparities(bias_df)\\n\",\n    \"\\n\",\n    \"    disparity_metrics_df = bias_df[\\n\",\n    \"        ['attribute_name', 'attribute_value'] + calculated_disparities]\\n\",\n    \"\\n\",\n    \"    # For example:\\n\",\n    \"    \\\"\\\"\\\"\\n\",\n    \"        attribute_name\\tattribute_value    ppr_disparity   precision_disparity\\n\",\n    \"    0   gender          female             0.714286        1.41791\\n\",\n    \"    1   gender          male               1.000000        1.000000\\n\",\n    \"    \\\"\\\"\\\"\\n\",\n    \"\\n\",\n    \"    output_metrics_df = disparity_metrics_df # or absolute_metrics_df\\n\",\n    \"\\n\",\n    \"    # Output a JSON object of calculated metrics\\n\",\n    \"    \\n\",\n    \"    # MOC expects the action function to be a *yield* function\\n\",\n    \"    yield output_metrics_df.to_dict(orient=\\\"records\\\")\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"There are four main sections that are standard to almost any model in MOC:\\n\",\n    \"1. Library imports\\n\",\n    \"2. `init` function\\n\",\n    \"3. `score` function\\n\",\n    \"4. `metrics` function\\n\",\n    \"\\n\",\n    \"**Library** imports are always at the top. We don't need to include all libraries that we used for training and model evaluation. We just need the libraries for processing and scoring.\\n\",\n    \"\\n\",\n    \"The **`init`** function runs once per deployment, and is used to load and persist into memory any variable that needs to be accessed at scoring time. For example, the init function is where we load the saved model binary. We make the variable global so it can be accessed from the scoring function.\\n\",\n    \"\\n\",\n    \"The **`score`** function is the function that runs anytime we make a scoring (prediction) request. This is where we put our prediction code. We have to remember to include any steps that were not captured by the pipeline, such as feature engineering or re-encoding.\\n\",\n    \"\\n\",\n    \"The **`metrics`** functions is where model evaluation is carried out. In our example, this is the place where we replicate the calculations of Group and/or Bias metrics.\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let us test our source code to see if we missed anything. We will load input data and scored input data to test both the scoring and metrics functions:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 74,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"test_sample = pd.read_json('df_baseline.json', lines=True, orient='records')\\n\",\n    \"metrics_sample = pd.read_json('df_baseline_scored.json', lines=True, orient='records')\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"Let's check that the **`init`** function can load the trained model binary:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 75,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"begin()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"No errors from the **`init`** function. Let us now call the **`score`** function on input data:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 76,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"scores = next(action(test_sample.iloc[0]))\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 77,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>id</th>\\n\",\n       \"      <th>duration_months</th>\\n\",\n       \"      <th>credit_amount</th>\\n\",\n       \"      <th>installment_rate</th>\\n\",\n       \"      <th>present_residence_since</th>\\n\",\n       \"      <th>age_years</th>\\n\",\n       \"      <th>number_existing_credits</th>\\n\",\n       \"      <th>checking_status</th>\\n\",\n       \"      <th>credit_history</th>\\n\",\n       \"      <th>purpose</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>property</th>\\n\",\n       \"      <th>installment_plans</th>\\n\",\n       \"      <th>housing</th>\\n\",\n       \"      <th>job</th>\\n\",\n       \"      <th>number_people_liable</th>\\n\",\n       \"      <th>telephone</th>\\n\",\n       \"      <th>foreign_worker</th>\\n\",\n       \"      <th>gender</th>\\n\",\n       \"      <th>label_value</th>\\n\",\n       \"      <th>predicted_score</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>687</td>\\n\",\n       \"      <td>36</td>\\n\",\n       \"      <td>2862</td>\\n\",\n       \"      <td>4</td>\\n\",\n       \"      <td>3</td>\\n\",\n       \"      <td>30</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>A12</td>\\n\",\n       \"      <td>A33</td>\\n\",\n       \"      <td>A40</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>A124</td>\\n\",\n       \"      <td>A143</td>\\n\",\n       \"      <td>A153</td>\\n\",\n       \"      <td>A173</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"      <td>A191</td>\\n\",\n       \"      <td>A201</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>0</td>\\n\",\n       \"      <td>1</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>1 rows × 23 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"    id  duration_months  credit_amount  installment_rate  \\\\\\n\",\n       \"0  687               36           2862                 4   \\n\",\n       \"\\n\",\n       \"   present_residence_since  age_years  number_existing_credits  \\\\\\n\",\n       \"0                        3         30                        1   \\n\",\n       \"\\n\",\n       \"  checking_status credit_history purpose  ... property installment_plans  \\\\\\n\",\n       \"0             A12            A33     A40  ...     A124              A143   \\n\",\n       \"\\n\",\n       \"  housing   job number_people_liable telephone foreign_worker  gender  \\\\\\n\",\n       \"0    A153  A173                    1      A191           A201    male   \\n\",\n       \"\\n\",\n       \"  label_value predicted_score  \\n\",\n       \"0           0               1  \\n\",\n       \"\\n\",\n       \"[1 rows x 23 columns]\"\n      ]\n     },\n     \"execution_count\": 77,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"pd.DataFrame(scores).head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"We have scores! Last but not least, let's call the **`metrics`** function on scored data:\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"bias = next(metrics(metrics_sample))\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 79,\n   \"metadata\": {\n    \"scrolled\": true\n   },\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>attribute_name</th>\\n\",\n       \"      <th>attribute_value</th>\\n\",\n       \"      <th>ppr_disparity</th>\\n\",\n       \"      <th>pprev_disparity</th>\\n\",\n       \"      <th>precision_disparity</th>\\n\",\n       \"      <th>fdr_disparity</th>\\n\",\n       \"      <th>for_disparity</th>\\n\",\n       \"      <th>fpr_disparity</th>\\n\",\n       \"      <th>fnr_disparity</th>\\n\",\n       \"      <th>tpr_disparity</th>\\n\",\n       \"      <th>tnr_disparity</th>\\n\",\n       \"      <th>npv_disparity</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>female</td>\\n\",\n       \"      <td>0.504274</td>\\n\",\n       \"      <td>1.190763</td>\\n\",\n       \"      <td>1.107203</td>\\n\",\n       \"      <td>0.887154</td>\\n\",\n       \"      <td>1.222807</td>\\n\",\n       \"      <td>1.173616</td>\\n\",\n       \"      <td>0.841479</td>\\n\",\n       \"      <td>1.050198</td>\\n\",\n       \"      <td>0.931751</td>\\n\",\n       \"      <td>0.970805</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>gender</td>\\n\",\n       \"      <td>male</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"      <td>1.000000</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"  attribute_name attribute_value  ppr_disparity  pprev_disparity  \\\\\\n\",\n       \"0         gender          female       0.504274         1.190763   \\n\",\n       \"1         gender            male       1.000000         1.000000   \\n\",\n       \"\\n\",\n       \"   precision_disparity  fdr_disparity  for_disparity  fpr_disparity  \\\\\\n\",\n       \"0             1.107203       0.887154       1.222807       1.173616   \\n\",\n       \"1             1.000000       1.000000       1.000000       1.000000   \\n\",\n       \"\\n\",\n       \"   fnr_disparity  tpr_disparity  tnr_disparity  npv_disparity  \\n\",\n       \"0       0.841479       1.050198       0.931751       0.970805  \\n\",\n       \"1       1.000000       1.000000       1.000000       1.000000  \"\n      ]\n     },\n     \"execution_count\": 79,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"pd.DataFrame(bias).head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"markdown\",\n   \"metadata\": {},\n   \"source\": [\n    \"**Prefect!**\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"interpreter\": {\n   \"hash\": \"1bc0af681b6debbd76b10de7ba3014cd62e1e3ee55e8e9a892bbbe23fd8d618c\"\n  },\n  \"kernelspec\": {\n   \"display_name\": \"Python 3.6.9 64-bit ('modelop': conda)\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.6.9\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}",
        "sourceCodeFilePath" : "logistic_regression_model_trainer.ipynb",
        "sourceCodeType" : "MODEL",
        "initFunction" : "begin",
        "scoreFunction" : "action"
      }, {
        "assetId" : "b25f4cf2-0333-3559-953d-68ae15a8da70",
        "name" : "german_credit.py",
        "assetType" : "SOURCE_CODE",
        "assetRole" : "MODEL_SOURCE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "primaryModelSource" : true,
        "sourceCode" : "# modelop.schema.0: input_schema.avsc\n# modelop.schema.1: output_schema.avsc\n\nimport pandas as pd\nimport pickle\nimport numpy as np\n\n# Bias libraries\nfrom aequitas.preprocessing import preprocess_input_df\nfrom aequitas.group import Group\nfrom aequitas.bias import Bias \n\n\n# modelop.init\ndef begin():\n    \n    global logreg_classifier\n    \n    # load pickled logistic regression model\n    logreg_classifier = pickle.load(open(\"logreg_classifier.pickle\", \"rb\"))\n\n    \n# modelop.score\ndef action(data):\n    \n    # Turn data into DataFrame\n    data = pd.DataFrame([data])\n    \n    # There are only two unique values in data.number_people_liable.\n    # Treat it as a categorical feature\n    data.number_people_liable = data.number_people_liable.astype('object')\n\n    predictive_features = [\n        'duration_months', 'credit_amount', 'installment_rate',\n        'present_residence_since', 'age_years', 'number_existing_credits',\n        'checking_status', 'credit_history', 'purpose', 'savings_account',\n        'present_employment_since', 'debtors_guarantors', 'property',\n        'installment_plans', 'housing', 'job', 'number_people_liable',\n        'telephone', 'foreign_worker'\n    ]\n    \n    data[\"score\"] = logreg_classifier.predict(data[predictive_features])\n    \n    # MOC expects the action function to be a *yield* function\n    yield data.to_dict(orient=\"records\")\n\n\n# modelop.metrics\ndef metrics(data):\n    \n    data = pd.DataFrame(data)\n\n    # To measure Bias towards gender, filter DataFrame\n    # to \"score\", \"label_value\" (ground truth), and\n    # \"gender\" (protected attribute)\n    data_scored = data[[\"score\", \"label_value\", \"gender\"]]\n\n    # Process DataFrame\n    data_scored_processed, _ = preprocess_input_df(data_scored)\n\n    # Group Metrics\n    g = Group()\n    xtab, _ = g.get_crosstabs(data_scored_processed)\n\n    # Absolute metrics, such as 'tpr', 'tnr','precision', etc.\n    absolute_metrics = g.list_absolute_metrics(xtab)\n\n    # DataFrame of calculated absolute metrics for each sample population group\n    absolute_metrics_df = xtab[\n        ['attribute_name', 'attribute_value'] + absolute_metrics].round(2)\n\n    # For example:\n    \"\"\"\n        attribute_name  attribute_value     tpr     tnr  ... precision\n    0   gender          female              0.60    0.88 ... 0.75\n    1   gender          male                0.49    0.90 ... 0.64\n    \"\"\"\n\n    # Bias Metrics\n    b = Bias()\n\n    # Disparities calculated in relation gender for \"male\" and \"female\"\n    bias_df = b.get_disparity_predefined_groups(\n        xtab,\n        original_df=data_scored_processed,\n        ref_groups_dict={'gender': 'male'},\n        alpha=0.05, mask_significance=True\n    )\n\n    # Disparity metrics added to bias DataFrame\n    calculated_disparities = b.list_disparities(bias_df)\n\n    disparity_metrics_df = bias_df[\n        ['attribute_name', 'attribute_value'] + calculated_disparities]\n\n    # For example:\n    \"\"\"\n        attribute_name\tattribute_value    ppr_disparity   precision_disparity\n    0   gender          female             0.714286        1.41791\n    1   gender          male               1.000000        1.000000\n    \"\"\"\n\n    output_metrics_df = disparity_metrics_df # or absolute_metrics_df\n\n    # Output a JSON object of calculated metrics\n    yield output_metrics_df.to_dict(orient=\"records\")\n",
        "sourceCodeFilePath" : "german_credit.py",
        "sourceCodeType" : "MODEL",
        "initFunction" : "begin",
        "scoreFunction" : "action",
        "metricsFunction" : "metrics"
      }, {
        "assetId" : "eda440ab-1571-4f28-a31c-f51f2b7f5ada",
        "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/eda440ab-1571-4f28-a31c-f51f2b7f5ada.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TEST_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "d23455d2f14209d8d72ce82a9ada7b9e6a8f2cdb2de075ef53f03c14ccb335c7"
        },
        "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/eda440ab-1571-4f28-a31c-f51f2b7f5ada.json",
        "filename" : "test_data.json",
        "fileFormat" : "JSON",
        "fileSize" : 95686
      }, {
        "assetId" : "325c7876-0557-4558-89b1-f7e74d6123d5",
        "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/325c7876-0557-4558-89b1-f7e74d6123d5.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "TRAINING_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "1a9c72d8cfe2172b26abefc1d0c42d67518f6e16e6540a155cdf88e066ab0d6a"
        },
        "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/325c7876-0557-4558-89b1-f7e74d6123d5.json",
        "filename" : "training_data.json",
        "fileFormat" : "JSON",
        "fileSize" : 341431
      }, {
        "assetId" : "768bf3ca-7160-416c-bd43-2e9d5ac443d4",
        "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/768bf3ca-7160-416c-bd43-2e9d5ac443d4.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "COMPARATOR_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "ff72c27d90eda63f11d1d21988329cae50d44101ce02d2a506b034b14d9aa3d1"
        },
        "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/768bf3ca-7160-416c-bd43-2e9d5ac443d4.json",
        "filename" : "comparator_data.json",
        "fileFormat" : "JSON",
        "fileSize" : 47857
      }, {
        "assetId" : "7fd3260e-3609-4d76-9b00-d992b1715b90",
        "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/7fd3260e-3609-4d76-9b00-d992b1715b90.gitignore",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "UNKNOWN",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "f761b6f949f1d204265fc626555b30cc74d97766a1fc3a038582760719b7131e"
        },
        "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/7fd3260e-3609-4d76-9b00-d992b1715b90.gitignore",
        "filename" : ".gitignore",
        "fileFormat" : "UNKNOWN",
        "fileSize" : 92
      }, {
        "assetId" : "21ffbe64-014f-4996-916c-06c4d86a44da",
        "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/21ffbe64-014f-4996-916c-06c4d86a44da.pickle",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "WEIGHTS_FILE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "2933ba9685f584cab69a161193b0e4ec2050ceaa9ad93521e162daead120d473"
        },
        "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/21ffbe64-014f-4996-916c-06c4d86a44da.pickle",
        "filename" : "logreg_classifier.pickle",
        "fileFormat" : "UNKNOWN",
        "fileSize" : 16498
      }, {
        "assetId" : "5f1e23ea-6511-41e3-acfe-5a963a917b94",
        "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/5f1e23ea-6511-41e3-acfe-5a963a917b94.gitattributes",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "UNKNOWN",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "1a1dbe176bc233b499d35a57db7513f2941c99ab9759f177830c9149be99005b"
        },
        "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/5f1e23ea-6511-41e3-acfe-5a963a917b94.gitattributes",
        "filename" : ".gitattributes",
        "fileFormat" : "UNKNOWN",
        "fileSize" : 66
      }, {
        "assetId" : "fd534a54-69a2-478a-8f19-0cc0a191cc11",
        "name" : "5c420142-8a95-482a-8839-1fdc8c930fcf/fd534a54-69a2-478a-8f19-0cc0a191cc11.json",
        "assetType" : "EXTERNAL_FILE",
        "assetRole" : "BASELINE_DATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "S3_REPOSITORY",
          "secure" : false,
          "host" : "modelop",
          "port" : 9000,
          "region" : "default-region"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "contentHash" : {
          "hashType" : "SHA-256",
          "hexString" : "e170f8ca2360e82679d4633c35b2908f93a8b41bcd63d027cd500daa19da76d3"
        },
        "fileUrl" : "http://modelop:9000/modelop/5c420142-8a95-482a-8839-1fdc8c930fcf/fd534a54-69a2-478a-8f19-0cc0a191cc11.json",
        "filename" : "baseline_data.json",
        "fileFormat" : "JSON",
        "fileSize" : 382615
      }, {
        "assetId" : "f3abdcca-fe1c-42ba-988b-9452897045c9",
        "assetType" : "FILE",
        "assetRole" : "MODEL_SCHEMA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "filename" : "output_schema.avsc",
        "fileFormat" : "UNKNOWN",
        "localFile" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf/output_schema.avsc",
        "fileSize" : 2469,
        "fileContentString" : "{\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"record\",\n        \"name\": \"output_schema.avsc\",\n        \"fields\": [\n            {\n                \"name\": \"id\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"number_people_liable\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"age_years\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"present_employment_since\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"job\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"housing\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"telephone\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"installment_plans\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"number_existing_credits\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"credit_history\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"foreign_worker\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"property\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"installment_rate\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"purpose\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"checking_status\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"present_residence_since\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"debtors_guarantors\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"savings_account\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"duration_months\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"credit_amount\",\n                \"type\": \"int\"\n            },\n            {\n                \"name\": \"gender\",\n                \"type\": \"string\"\n            },\n            {\n                \"name\": \"label_value\",\n                \"type\": \"int\"\n            },\n            {\n              \"name\": \"score\",\n              \"type\": \"int\"\n           }\n        ]\n     }\n}\n",
        "fileContent" : "ewogICAgInR5cGUiOiAiYXJyYXkiLAogICAgIml0ZW1zIjogewogICAgICAgICJ0eXBlIjogInJlY29yZCIsCiAgICAgICAgIm5hbWUiOiAib3V0cHV0X3NjaGVtYS5hdnNjIiwKICAgICAgICAiZmllbGRzIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJpZCIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJpbnQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogIm51bWJlcl9wZW9wbGVfbGlhYmxlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiYWdlX3llYXJzIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicHJlc2VudF9lbXBsb3ltZW50X3NpbmNlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiam9iIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiaG91c2luZyIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogInRlbGVwaG9uZSIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImluc3RhbGxtZW50X3BsYW5zIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAibnVtYmVyX2V4aXN0aW5nX2NyZWRpdHMiLAogICAgICAgICAgICAgICAgInR5cGUiOiAiaW50IgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJjcmVkaXRfaGlzdG9yeSIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImZvcmVpZ25fd29ya2VyIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicHJvcGVydHkiLAogICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJpbnN0YWxsbWVudF9yYXRlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicHVycG9zZSIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImNoZWNraW5nX3N0YXR1cyIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiZGVidG9yc19ndWFyYW50b3JzIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAic2F2aW5nc19hY2NvdW50IiwKICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiZHVyYXRpb25fbW9udGhzIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiY3JlZGl0X2Ftb3VudCIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJpbnQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImdlbmRlciIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImxhYmVsX3ZhbHVlIiwKICAgICAgICAgICAgICAgICJ0eXBlIjogImludCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJuYW1lIjogInNjb3JlIiwKICAgICAgICAgICAgICAidHlwZSI6ICJpbnQiCiAgICAgICAgICAgfQogICAgICAgIF0KICAgICB9Cn0K"
      }, {
        "assetId" : "d8e23060-5a2e-46aa-aa6d-2d8d8139bc8e",
        "assetType" : "FILE",
        "assetRole" : "REQUIRED_LIBRARIES",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "filename" : "requirements.txt",
        "fileFormat" : "UNKNOWN",
        "localFile" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf/requirements.txt",
        "fileSize" : 76,
        "fileContentString" : "aequitas==0.42.0\nnumpy==1.19.5\npandas==1.1.5\nscikit-learn==0.22\nscipy==1.5.4",
        "fileContent" : "YWVxdWl0YXM9PTAuNDIuMApudW1weT09MS4xOS41CnBhbmRhcz09MS4xLjUKc2Npa2l0LWxlYXJuPT0wLjIyCnNjaXB5PT0xLjUuNA=="
      }, {
        "assetId" : "14b07bf6-dcb2-4075-82ab-325d4648fe19",
        "assetType" : "FILE",
        "assetRole" : "MODEL_SCHEMA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "filename" : "input_schema.avsc",
        "fileFormat" : "UNKNOWN",
        "localFile" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf/input_schema.avsc",
        "fileSize" : 5775,
        "fileContentString" : "{\n  \"name\": \"input_schema.avsc\",\n  \"type\": \"record\",\n  \"fields\": [\n    {\n      \"name\": \"id\",\n      \"type\": \"int\",\n      \"dataClass\": \"numerical\",\n      \"role\": \"identifier\",\n      \"protectedClass\": false,\n      \"driftCandidate\": false,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"duration_months\",\n      \"type\": \"int\",\n      \"dataClass\": \"numerical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"credit_amount\",\n      \"type\": \"float\",\n      \"dataClass\": \"numerical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false,\n      \"isAmountField\": true\n    },\n    {\n      \"name\": \"installment_rate\",\n      \"type\": \"int\",\n      \"dataClass\": \"numerical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"present_residence_since\",\n      \"type\": \"int\",\n      \"dataClass\": \"numerical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"age_years\",\n      \"type\": \"int\",\n      \"dataClass\": \"numerical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"number_existing_credits\",\n      \"type\": \"int\",\n      \"dataClass\": \"numerical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"checking_status\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"credit_history\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"purpose\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"savings_account\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"present_employment_since\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"debtors_guarantors\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"property\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"installment_plans\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"housing\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"job\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"number_people_liable\",\n      \"type\": \"int\",\n      \"dataClass\": \"numerical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"telephone\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"foreign_worker\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": false\n    },\n    {\n      \"name\": \"gender\",\n      \"type\": \"string\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"predictor\",\n      \"protectedClass\": true,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": true\n    },\n    {\n      \"name\": \"label_value\",\n      \"type\": \"int\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"label\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": true,\n      \"postiveClassLabel\":1\n    },\n    {\n      \"name\": \"score\",\n      \"type\": \"int\",\n      \"dataClass\": \"categorical\",\n      \"role\": \"score\",\n      \"protectedClass\": false,\n      \"driftCandidate\": true,\n      \"specialValues\": [],\n      \"scoringOptional\": true\n    }\n  ]\n}\n",
        "fileContent" : "ewogICJuYW1lIjogImlucHV0X3NjaGVtYS5hdnNjIiwKICAidHlwZSI6ICJyZWNvcmQiLAogICJmaWVsZHMiOiBbCiAgICB7CiAgICAgICJuYW1lIjogImlkIiwKICAgICAgInR5cGUiOiAiaW50IiwKICAgICAgImRhdGFDbGFzcyI6ICJudW1lcmljYWwiLAogICAgICAicm9sZSI6ICJpZGVudGlmaWVyIiwKICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICJkcmlmdENhbmRpZGF0ZSI6IGZhbHNlLAogICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImR1cmF0aW9uX21vbnRocyIsCiAgICAgICJ0eXBlIjogImludCIsCiAgICAgICJkYXRhQ2xhc3MiOiAibnVtZXJpY2FsIiwKICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiY3JlZGl0X2Ftb3VudCIsCiAgICAgICJ0eXBlIjogImZsb2F0IiwKICAgICAgImRhdGFDbGFzcyI6ICJudW1lcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlLAogICAgICAiaXNBbW91bnRGaWVsZCI6IHRydWUKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImluc3RhbGxtZW50X3JhdGUiLAogICAgICAidHlwZSI6ICJpbnQiLAogICAgICAiZGF0YUNsYXNzIjogIm51bWVyaWNhbCIsCiAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlIiwKICAgICAgInR5cGUiOiAiaW50IiwKICAgICAgImRhdGFDbGFzcyI6ICJudW1lcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJhZ2VfeWVhcnMiLAogICAgICAidHlwZSI6ICJpbnQiLAogICAgICAiZGF0YUNsYXNzIjogIm51bWVyaWNhbCIsCiAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogIm51bWJlcl9leGlzdGluZ19jcmVkaXRzIiwKICAgICAgInR5cGUiOiAiaW50IiwKICAgICAgImRhdGFDbGFzcyI6ICJudW1lcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJjaGVja2luZ19zdGF0dXMiLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAiY3JlZGl0X2hpc3RvcnkiLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAicHVycG9zZSIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJzYXZpbmdzX2FjY291bnQiLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAicHJlc2VudF9lbXBsb3ltZW50X3NpbmNlIiwKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRhdGFDbGFzcyI6ICJjYXRlZ29yaWNhbCIsCiAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImRlYnRvcnNfZ3VhcmFudG9ycyIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJwcm9wZXJ0eSIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJpbnN0YWxsbWVudF9wbGFucyIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJob3VzaW5nIiwKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRhdGFDbGFzcyI6ICJjYXRlZ29yaWNhbCIsCiAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImpvYiIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IGZhbHNlCiAgICB9LAogICAgewogICAgICAibmFtZSI6ICJudW1iZXJfcGVvcGxlX2xpYWJsZSIsCiAgICAgICJ0eXBlIjogImludCIsCiAgICAgICJkYXRhQ2xhc3MiOiAibnVtZXJpY2FsIiwKICAgICAgInJvbGUiOiAicHJlZGljdG9yIiwKICAgICAgInByb3RlY3RlZENsYXNzIjogZmFsc2UsCiAgICAgICJkcmlmdENhbmRpZGF0ZSI6IHRydWUsCiAgICAgICJzcGVjaWFsVmFsdWVzIjogW10sCiAgICAgICJzY29yaW5nT3B0aW9uYWwiOiBmYWxzZQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAidGVsZXBob25lIiwKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRhdGFDbGFzcyI6ICJjYXRlZ29yaWNhbCIsCiAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImZvcmVpZ25fd29ya2VyIiwKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRhdGFDbGFzcyI6ICJjYXRlZ29yaWNhbCIsCiAgICAgICJyb2xlIjogInByZWRpY3RvciIsCiAgICAgICJwcm90ZWN0ZWRDbGFzcyI6IGZhbHNlLAogICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAic2NvcmluZ09wdGlvbmFsIjogZmFsc2UKICAgIH0sCiAgICB7CiAgICAgICJuYW1lIjogImdlbmRlciIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkYXRhQ2xhc3MiOiAiY2F0ZWdvcmljYWwiLAogICAgICAicm9sZSI6ICJwcmVkaWN0b3IiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiB0cnVlLAogICAgICAiZHJpZnRDYW5kaWRhdGUiOiB0cnVlLAogICAgICAic3BlY2lhbFZhbHVlcyI6IFtdLAogICAgICAic2NvcmluZ09wdGlvbmFsIjogdHJ1ZQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAibGFiZWxfdmFsdWUiLAogICAgICAidHlwZSI6ICJpbnQiLAogICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgInJvbGUiOiAibGFiZWwiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IHRydWUsCiAgICAgICJwb3N0aXZlQ2xhc3NMYWJlbCI6MQogICAgfSwKICAgIHsKICAgICAgIm5hbWUiOiAic2NvcmUiLAogICAgICAidHlwZSI6ICJpbnQiLAogICAgICAiZGF0YUNsYXNzIjogImNhdGVnb3JpY2FsIiwKICAgICAgInJvbGUiOiAic2NvcmUiLAogICAgICAicHJvdGVjdGVkQ2xhc3MiOiBmYWxzZSwKICAgICAgImRyaWZ0Q2FuZGlkYXRlIjogdHJ1ZSwKICAgICAgInNwZWNpYWxWYWx1ZXMiOiBbXSwKICAgICAgInNjb3JpbmdPcHRpb25hbCI6IHRydWUKICAgIH0KICBdCn0K"
      }, {
        "assetId" : "5459dc47-ea86-4c2c-a6c2-218f78e7b028",
        "assetType" : "FILE",
        "assetRole" : "README_FILE",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "filename" : "README.md",
        "fileFormat" : "UNKNOWN",
        "localFile" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf/README.md",
        "fileSize" : 2879,
        "fileContentString" : "# german_credit_python\n \nA Logistic Regression Python model to predict loan default.\n\n## Running Locally\n\nTo run this model locally, create a new Python 3.6.8 virtual environment\n(such as with `pyenv`). Then, use the following command to update `pip`\nand `setuptools`:\n\n```\npip3 install --upgrade setuptools\npip3 install --upgrade pip\n```\n\nAnd install the required libraries:\n\n```\npip3 install -r requirements.txt\n```\n\n## Details\n\nModel was trained on the German Credit Data dataset.\n`logreg_classifier.pickle` is the trained model artifact.\n\n## Scoring Jobs\n\n### Sample Inputs\n\nChoose **one** of\n - `df_baseline.json`\n - `df_sample.json`\n\n### Schema Checking\n\nScoring Jobs can be run with any combination of input/output schema checking.\n\n### Sample Output\n\nThe output of the scoring job when the input data is `df_sample.json` is a JSONS file (one-line JSON records). Here are the first three output records:\n```json\n[{\"id\": 993, \"duration_months\": 36, \"credit_amount\": 3959, \"installment_rate\": 4, \"present_residence_since\": 3, \"age_years\": 30, \"number_existing_credits\": 1, \"checking_status\": \"A11\", \"credit_history\": \"A32\", \"purpose\": \"A42\", \"savings_account\": \"A61\", \"present_employment_since\": \"A71\", \"debtors_guarantors\": \"A101\", \"property\": \"A122\", \"installment_plans\": \"A143\", \"housing\": \"A152\", \"job\": \"A174\", \"number_people_liable\": 1, \"telephone\": \"A192\", \"foreign_worker\": \"A201\", \"gender\": \"male\", \"label\": 0, \"predicted_score\": 1}]\n[{\"id\": 859, \"duration_months\": 9, \"credit_amount\": 3577, \"installment_rate\": 1, \"present_residence_since\": 2, \"age_years\": 26, \"number_existing_credits\": 1, \"checking_status\": \"A14\", \"credit_history\": \"A32\", \"purpose\": \"A40\", \"savings_account\": \"A62\", \"present_employment_since\": \"A73\", \"debtors_guarantors\": \"A103\", \"property\": \"A121\", \"installment_plans\": \"A143\", \"housing\": \"A151\", \"job\": \"A173\", \"number_people_liable\": 2, \"telephone\": \"A191\", \"foreign_worker\": \"A202\", \"gender\": \"male\", \"label\": 0, \"predicted_score\": 0}]\n[{\"id\": 298, \"duration_months\": 18, \"credit_amount\": 2515, \"installment_rate\": 3, \"present_residence_since\": 4, \"age_years\": 43, \"number_existing_credits\": 1, \"checking_status\": \"A14\", \"credit_history\": \"A32\", \"purpose\": \"A42\", \"savings_account\": \"A61\", \"present_employment_since\": \"A73\", \"debtors_guarantors\": \"A101\", \"property\": \"A121\", \"installment_plans\": \"A143\", \"housing\": \"A152\", \"job\": \"A173\", \"number_people_liable\": 1, \"telephone\": \"A192\", \"foreign_worker\": \"A201\", \"gender\": \"male\", \"label\": 0, \"predicted_score\": 0}]\n```\n\n## Metrics Jobs\n\nModel code includes a metrics function used to compute Group and Bias metrics.\nThe metrics function expects a DataFrame with at lease the following three columns three columns: `score` (predicted), `label_value` (actual), and `gender` (protected attribute).\n\n### Sample Inputs\n\nChoose **one** of\n - `df_baseline_scored.json`\n - `df_sample_scored.json`\n",
        "fileContent" : "IyBnZXJtYW5fY3JlZGl0X3B5dGhvbgogCkEgTG9naXN0aWMgUmVncmVzc2lvbiBQeXRob24gbW9kZWwgdG8gcHJlZGljdCBsb2FuIGRlZmF1bHQuCgojIyBSdW5uaW5nIExvY2FsbHkKClRvIHJ1biB0aGlzIG1vZGVsIGxvY2FsbHksIGNyZWF0ZSBhIG5ldyBQeXRob24gMy42LjggdmlydHVhbCBlbnZpcm9ubWVudAooc3VjaCBhcyB3aXRoIGBweWVudmApLiBUaGVuLCB1c2UgdGhlIGZvbGxvd2luZyBjb21tYW5kIHRvIHVwZGF0ZSBgcGlwYAphbmQgYHNldHVwdG9vbHNgOgoKYGBgCnBpcDMgaW5zdGFsbCAtLXVwZ3JhZGUgc2V0dXB0b29scwpwaXAzIGluc3RhbGwgLS11cGdyYWRlIHBpcApgYGAKCkFuZCBpbnN0YWxsIHRoZSByZXF1aXJlZCBsaWJyYXJpZXM6CgpgYGAKcGlwMyBpbnN0YWxsIC1yIHJlcXVpcmVtZW50cy50eHQKYGBgCgojIyBEZXRhaWxzCgpNb2RlbCB3YXMgdHJhaW5lZCBvbiB0aGUgR2VybWFuIENyZWRpdCBEYXRhIGRhdGFzZXQuCmBsb2dyZWdfY2xhc3NpZmllci5waWNrbGVgIGlzIHRoZSB0cmFpbmVkIG1vZGVsIGFydGlmYWN0LgoKIyMgU2NvcmluZyBKb2JzCgojIyMgU2FtcGxlIElucHV0cwoKQ2hvb3NlICoqb25lKiogb2YKIC0gYGRmX2Jhc2VsaW5lLmpzb25gCiAtIGBkZl9zYW1wbGUuanNvbmAKCiMjIyBTY2hlbWEgQ2hlY2tpbmcKClNjb3JpbmcgSm9icyBjYW4gYmUgcnVuIHdpdGggYW55IGNvbWJpbmF0aW9uIG9mIGlucHV0L291dHB1dCBzY2hlbWEgY2hlY2tpbmcuCgojIyMgU2FtcGxlIE91dHB1dAoKVGhlIG91dHB1dCBvZiB0aGUgc2NvcmluZyBqb2Igd2hlbiB0aGUgaW5wdXQgZGF0YSBpcyBgZGZfc2FtcGxlLmpzb25gIGlzIGEgSlNPTlMgZmlsZSAob25lLWxpbmUgSlNPTiByZWNvcmRzKS4gSGVyZSBhcmUgdGhlIGZpcnN0IHRocmVlIG91dHB1dCByZWNvcmRzOgpgYGBqc29uClt7ImlkIjogOTkzLCAiZHVyYXRpb25fbW9udGhzIjogMzYsICJjcmVkaXRfYW1vdW50IjogMzk1OSwgImluc3RhbGxtZW50X3JhdGUiOiA0LCAicHJlc2VudF9yZXNpZGVuY2Vfc2luY2UiOiAzLCAiYWdlX3llYXJzIjogMzAsICJudW1iZXJfZXhpc3RpbmdfY3JlZGl0cyI6IDEsICJjaGVja2luZ19zdGF0dXMiOiAiQTExIiwgImNyZWRpdF9oaXN0b3J5IjogIkEzMiIsICJwdXJwb3NlIjogIkE0MiIsICJzYXZpbmdzX2FjY291bnQiOiAiQTYxIiwgInByZXNlbnRfZW1wbG95bWVudF9zaW5jZSI6ICJBNzEiLCAiZGVidG9yc19ndWFyYW50b3JzIjogIkExMDEiLCAicHJvcGVydHkiOiAiQTEyMiIsICJpbnN0YWxsbWVudF9wbGFucyI6ICJBMTQzIiwgImhvdXNpbmciOiAiQTE1MiIsICJqb2IiOiAiQTE3NCIsICJudW1iZXJfcGVvcGxlX2xpYWJsZSI6IDEsICJ0ZWxlcGhvbmUiOiAiQTE5MiIsICJmb3JlaWduX3dvcmtlciI6ICJBMjAxIiwgImdlbmRlciI6ICJtYWxlIiwgImxhYmVsIjogMCwgInByZWRpY3RlZF9zY29yZSI6IDF9XQpbeyJpZCI6IDg1OSwgImR1cmF0aW9uX21vbnRocyI6IDksICJjcmVkaXRfYW1vdW50IjogMzU3NywgImluc3RhbGxtZW50X3JhdGUiOiAxLCAicHJlc2VudF9yZXNpZGVuY2Vfc2luY2UiOiAyLCAiYWdlX3llYXJzIjogMjYsICJudW1iZXJfZXhpc3RpbmdfY3JlZGl0cyI6IDEsICJjaGVja2luZ19zdGF0dXMiOiAiQTE0IiwgImNyZWRpdF9oaXN0b3J5IjogIkEzMiIsICJwdXJwb3NlIjogIkE0MCIsICJzYXZpbmdzX2FjY291bnQiOiAiQTYyIiwgInByZXNlbnRfZW1wbG95bWVudF9zaW5jZSI6ICJBNzMiLCAiZGVidG9yc19ndWFyYW50b3JzIjogIkExMDMiLCAicHJvcGVydHkiOiAiQTEyMSIsICJpbnN0YWxsbWVudF9wbGFucyI6ICJBMTQzIiwgImhvdXNpbmciOiAiQTE1MSIsICJqb2IiOiAiQTE3MyIsICJudW1iZXJfcGVvcGxlX2xpYWJsZSI6IDIsICJ0ZWxlcGhvbmUiOiAiQTE5MSIsICJmb3JlaWduX3dvcmtlciI6ICJBMjAyIiwgImdlbmRlciI6ICJtYWxlIiwgImxhYmVsIjogMCwgInByZWRpY3RlZF9zY29yZSI6IDB9XQpbeyJpZCI6IDI5OCwgImR1cmF0aW9uX21vbnRocyI6IDE4LCAiY3JlZGl0X2Ftb3VudCI6IDI1MTUsICJpbnN0YWxsbWVudF9yYXRlIjogMywgInByZXNlbnRfcmVzaWRlbmNlX3NpbmNlIjogNCwgImFnZV95ZWFycyI6IDQzLCAibnVtYmVyX2V4aXN0aW5nX2NyZWRpdHMiOiAxLCAiY2hlY2tpbmdfc3RhdHVzIjogIkExNCIsICJjcmVkaXRfaGlzdG9yeSI6ICJBMzIiLCAicHVycG9zZSI6ICJBNDIiLCAic2F2aW5nc19hY2NvdW50IjogIkE2MSIsICJwcmVzZW50X2VtcGxveW1lbnRfc2luY2UiOiAiQTczIiwgImRlYnRvcnNfZ3VhcmFudG9ycyI6ICJBMTAxIiwgInByb3BlcnR5IjogIkExMjEiLCAiaW5zdGFsbG1lbnRfcGxhbnMiOiAiQTE0MyIsICJob3VzaW5nIjogIkExNTIiLCAiam9iIjogIkExNzMiLCAibnVtYmVyX3Blb3BsZV9saWFibGUiOiAxLCAidGVsZXBob25lIjogIkExOTIiLCAiZm9yZWlnbl93b3JrZXIiOiAiQTIwMSIsICJnZW5kZXIiOiAibWFsZSIsICJsYWJlbCI6IDAsICJwcmVkaWN0ZWRfc2NvcmUiOiAwfV0KYGBgCgojIyBNZXRyaWNzIEpvYnMKCk1vZGVsIGNvZGUgaW5jbHVkZXMgYSBtZXRyaWNzIGZ1bmN0aW9uIHVzZWQgdG8gY29tcHV0ZSBHcm91cCBhbmQgQmlhcyBtZXRyaWNzLgpUaGUgbWV0cmljcyBmdW5jdGlvbiBleHBlY3RzIGEgRGF0YUZyYW1lIHdpdGggYXQgbGVhc2UgdGhlIGZvbGxvd2luZyB0aHJlZSBjb2x1bW5zIHRocmVlIGNvbHVtbnM6IGBzY29yZWAgKHByZWRpY3RlZCksIGBsYWJlbF92YWx1ZWAgKGFjdHVhbCksIGFuZCBgZ2VuZGVyYCAocHJvdGVjdGVkIGF0dHJpYnV0ZSkuCgojIyMgU2FtcGxlIElucHV0cwoKQ2hvb3NlICoqb25lKiogb2YKIC0gYGRmX2Jhc2VsaW5lX3Njb3JlZC5qc29uYAogLSBgZGZfc2FtcGxlX3Njb3JlZC5qc29uYAo="
      }, {
        "assetId" : "a049dc44-060a-4b07-bf94-44c6a56b50b0",
        "name" : "metadata.json",
        "assetType" : "FILE",
        "assetRole" : "MODEL_METADATA",
        "metaData" : {
          "custom" : { },
          "tags" : [ ]
        },
        "repositoryInfo" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "importedRepository" : {
          "repositoryType" : "GIT_REPO",
          "repositoryDirectory" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf",
          "repositoryRemote" : "https://github.com/mikelemikelo/german_credit_python.git",
          "repositoryBranch" : "dashboard",
          "lastCommitId" : "9f8930372a99ecead6e3f27ac5c90805976eb538",
          "lastSyncStatus" : "SUCCESS",
          "lastSyncMessages" : "2022-03-31T05:56:12.359Z: https://github.com/mikelemikelo/german_credit_python.git successfully updated",
          "lastSyncDate" : "2022-03-31T05:56:12.358Z",
          "lastCommitDate" : "2022-03-31T05:54:30Z"
        },
        "filename" : "metadata.json",
        "fileFormat" : "JSON",
        "localFile" : "/tmp/model-manage-repos/dashboard/5c420142-8a95-482a-8839-1fdc8c930fcf/metadata.json",
        "fileSize" : 271,
        "fileContentString" : "{\n\t\"roi\":{\n\t\t\"baselineMetricsTNR\": 0.877,\n    \t\t\"baselineMetricsTPR\": 0.531,\n    \t\t\"costMultipliersTP\": 1.5,\n    \t\t\"costMultipliersFP\": -2,\n    \t\t\"costMultipliersTN\": 2,\n    \t\t\"costMultipliersFN\": -1.5\n\t},\n\t\"custom\": {\n        \t\"modelopPackageVersion\": \"0.13.2\"\n    \t}\n}\n",
        "fileContent" : "ewoJInJvaSI6ewoJCSJiYXNlbGluZU1ldHJpY3NUTlIiOiAwLjg3NywKICAgIAkJImJhc2VsaW5lTWV0cmljc1RQUiI6IDAuNTMxLAogICAgCQkiY29zdE11bHRpcGxpZXJzVFAiOiAxLjUsCiAgICAJCSJjb3N0TXVsdGlwbGllcnNGUCI6IC0yLAogICAgCQkiY29zdE11bHRpcGxpZXJzVE4iOiAyLAogICAgCQkiY29zdE11bHRpcGxpZXJzRk4iOiAtMS41Cgl9LAoJImN1c3RvbSI6IHsKICAgICAgICAJIm1vZGVsb3BQYWNrYWdlVmVyc2lvbiI6ICIwLjEzLjIiCiAgICAJfQp9Cg=="
      } ],
      "gitDifferences" : [ ],
      "associatedModels" : [ ],
      "requiredAssets" : [ ]
    },
    "modelMLCs" : [ {
      "processInstance" : {
        "rootProcessInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "processDefinitionName" : "Usuals MLC Contract",
        "processDefinitionKey" : "Process_03morni",
        "processDefinitionVersion" : 1,
        "processDefinitionId" : "Process_03morni:1:9b5e1aac-9cb2-11ec-a95b-ba21a9751882",
        "startTime" : "2022-03-31T05:58:07.414+00:00",
        "startActivityId" : "Event_16i5t76",
        "state" : "ACTIVE"
      },
      "activityInstances" : [ {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Event_16i5t76",
        "activityName" : "Deployable Model\nCreated",
        "activityType" : "conditionalStartEvent",
        "processDefinitionKey" : "Process_03morni",
        "processDefinitionId" : "Process_03morni:1:9b5e1aac-9cb2-11ec-a95b-ba21a9751882",
        "processInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:58:07.427+00:00",
        "endTime" : "2022-03-31T05:58:07.573+00:00",
        "durationInMillis" : 146,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_1jekzg6",
        "activityName" : "Infra Check",
        "activityType" : "scriptTask",
        "endTime" : "2022-03-31T05:58:08.898+00:00",
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_0nb0c98",
        "activityName" : "App Check",
        "activityType" : "scriptTask",
        "startTime" : "2022-03-31T05:58:09.062+00:00",
        "endTime" : "2022-03-31T05:58:10.152+00:00",
        "durationInMillis" : 1090,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_1clmboy",
        "activityName" : "Model Specifics",
        "activityType" : "scriptTask",
        "startTime" : "2022-03-31T05:58:10.255+00:00",
        "endTime" : "2022-03-31T05:58:11.345+00:00",
        "durationInMillis" : 1090,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_1szlxlo",
        "activityName" : "Key Rotation",
        "activityType" : "scriptTask",
        "startTime" : "2022-03-31T05:58:11.452+00:00",
        "endTime" : "2022-03-31T05:58:12.541+00:00",
        "durationInMillis" : 1089,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_00zwk1j",
        "activityName" : "Security Approval",
        "activityType" : "scriptTask",
        "startTime" : "2022-03-31T05:58:12.686+00:00",
        "endTime" : "2022-03-31T05:58:13.803+00:00",
        "durationInMillis" : 1117,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_1iqmsvt",
        "activityName" : "Stability Telemetry",
        "activityType" : "scriptTask",
        "startTime" : "2022-03-31T05:58:13.971+00:00",
        "endTime" : "2022-03-31T05:58:15.088+00:00",
        "durationInMillis" : 1117,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_0nps7b5",
        "activityName" : "Code Compliance",
        "activityType" : "scriptTask",
        "startTime" : "2022-03-31T05:58:15.270+00:00",
        "endTime" : "2022-03-31T05:58:16.349+00:00",
        "durationInMillis" : 1079,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_1uexdtp",
        "activityName" : "Model Platform",
        "activityType" : "scriptTask",
        "startTime" : "2022-03-31T05:58:16.486+00:00",
        "endTime" : "2022-03-31T05:58:16.656+00:00",
        "durationInMillis" : 170,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_1nkp9c8",
        "activityName" : "APM",
        "activityType" : "scriptTask",
        "startTime" : "2022-03-31T05:58:16.813+00:00",
        "endTime" : "2022-03-31T05:58:16.995+00:00",
        "durationInMillis" : 182,
        "canceled" : true,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "8981c67d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_ExceptionHandler",
        "activityName" : "Exception Handler",
        "activityType" : "subProcess",
        "startTime" : "2022-03-31T05:58:17.077+00:00",
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "Activity_ExceptionHandler:8f417c2d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Event_1rkfl6f",
        "activityType" : "errorStartEvent",
        "startTime" : "2022-03-31T05:58:17.145+00:00",
        "endTime" : "2022-03-31T05:58:17.211+00:00",
        "durationInMillis" : 66,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "Activity_ExceptionHandler:8f417c2d-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_0ddxqh3",
        "activityName" : "Deploy Failure Jira Notification",
        "activityType" : "serviceTask",
        "startTime" : "2022-03-31T05:58:17.468+00:00",
        "canceled" : false,
        "completeScope" : false
      } ]
    }, {
      "processInstance" : {
        "rootProcessInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "processDefinitionName" : "Deploy with Run test and Jira",
        "processDefinitionKey" : "Process_154ms47",
        "processDefinitionVersion" : 4,
        "processDefinitionId" : "Process_154ms47:4:134295c2-ae9a-11ec-b4b8-6620b9f06fe3",
        "startTime" : "2022-03-31T05:58:07.612+00:00",
        "endTime" : "2022-03-31T05:58:14.000+00:00",
        "durationInMillis" : 7057,
        "startActivityId" : "Event_16i5t76",
        "state" : "COMPLETED"
      },
      "activityInstances" : [ {
        "parentActivityInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Event_16i5t76",
        "activityName" : "Deployable Model\nCreated",
        "activityType" : "conditionalStartEvent",
        "processDefinitionKey" : "Process_154ms47",
        "processDefinitionId" : "Process_154ms47:4:134295c2-ae9a-11ec-b4b8-6620b9f06fe3",
        "processInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:58:07.615+00:00",
        "endTime" : "2022-03-31T05:58:07.691+00:00",
        "durationInMillis" : 76,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_0zc4cuv",
        "activityName" : "Get Updated Snapshot\n",
        "activityType" : "serviceTask",
        "processDefinitionKey" : "Process_154ms47",
        "processDefinitionId" : "Process_154ms47:4:134295c2-ae9a-11ec-b4b8-6620b9f06fe3",
        "processInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "executionId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "startTime" : "2022-03-31T05:58:07.791+00:00",
        "endTime" : "2022-03-31T05:58:07.980+00:00",
        "durationInMillis" : 189,
        "canceled" : false,
        "completeScope" : false,
        "rootProcessInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f"
      }, {
        "parentActivityInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Gateway_0kmw05n",
        "activityName" : "Model Requires Training?",
        "activityType" : "exclusiveGateway",
        "endTime" : "2022-03-31T05:58:08.116+00:00",
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Gateway_107xhpa",
        "activityName" : "Model requries test?",
        "activityType" : "exclusiveGateway",
        "startTime" : "2022-03-31T05:58:08.276+00:00",
        "endTime" : "2022-03-31T05:58:08.377+00:00",
        "durationInMillis" : 101,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "Activity_0p7d40h",
        "activityName" : "Deploy Model",
        "activityType" : "serviceTask",
        "startTime" : "2022-03-31T05:58:08.569+00:00",
        "endTime" : "2022-03-31T05:58:14.292+00:00",
        "durationInMillis" : 5723,
        "canceled" : false,
        "completeScope" : false
      }, {
        "parentActivityInstanceId" : "89a023f3-b0b7-11ec-823a-2a0c533fc69f",
        "activityId" : "EndProces",
        "activityType" : "terminateEndEvent",
        "startTime" : "2022-03-31T05:58:14.444+00:00",
        "endTime" : "2022-03-31T05:58:14.511+00:00",
        "durationInMillis" : 67,
        "canceled" : false,
        "completeScope" : true
      } ]
    } ],
    "metaData" : {
      "custom" : { },
      "tags" : [ "miguel" ],
      "name" : "GC - dashboard-20220330_2357"
    },
    "associatedModels" : [ ],
    "modelDocuments" : [ ],
    "targetRuntimes" : [ {
      "engineType" : "MODEL_OP_ENGINE",
      "inputEndpoints" : [ ],
      "outputEndpoints" : [ ],
      "tags" : [ "miguel" ],
      "inProduction" : false,
      "lastActivity" : { }
    } ]
  },
  "modelWritesOutput" : false,
  "additionalAssets" : [ ],
  "_links" : {
    "self" : {
      "href" : "http://model-manager:8088/api/modelBatchTestJob/21e0561c-7894-4f8a-a44c-a3fff99260b1"
    },
    "modelBatchTestJob" : {
      "href" : "http://model-manager:8088/api/modelBatchTestJob/21e0561c-7894-4f8a-a44c-a3fff99260b1"
    }
  }
}